Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ID
    NUMBER
    PACKED

Grammar

Rule 0     S' -> program
Rule 1     program -> program_head routine DOT
Rule 2     program_head -> PROGRAM NAME SEMI
Rule 3     routine -> routine_head routine_body
Rule 4     sub_routine -> routine
Rule 5     routine_head -> label_part const_part type_part var_part routine_part
Rule 6     label_part -> empty
Rule 7     empty -> <empty>
Rule 8     const_part -> CONST const_expr_list
Rule 9     const_part -> empty
Rule 10    const_expr_list -> const_expr_list const_expr
Rule 11    const_expr_list -> const_expr
Rule 12    const_expr -> NAME EQUAL const_value SEMI
Rule 13    const_value -> INTEGER
Rule 14    const_value -> REAL
Rule 15    const_value -> CHAR
Rule 16    const_value -> STRING
Rule 17    const_value -> SYS_CON
Rule 18    type_part -> TYPE type_decl_list
Rule 19    type_part -> empty
Rule 20    type_decl_list -> type_decl_list type_definition
Rule 21    type_decl_list -> type_definition
Rule 22    type_definition -> NAME EQUAL type_decl SEMI
Rule 23    type_decl -> simple_type_decl
Rule 24    type_decl -> array_type_decl
Rule 25    type_decl -> record_type_decl
Rule 26    simple_type_decl -> SYS_TYPE
Rule 27    simple_type_decl -> NAME
Rule 28    simple_type_decl -> LP name_list RP
Rule 29    simple_type_decl -> const_value DOTDOT const_value
Rule 30    array_type_decl -> ARRAY LB simple_type_decl RB OF type_decl
Rule 31    record_type_decl -> RECORD field_decl_list END
Rule 32    field_decl_list -> field_decl_list field_decl
Rule 33    field_decl_list -> field_decl
Rule 34    field_decl -> name_list COLON type_decl SEMI
Rule 35    name_list -> name_list COMMA NAME
Rule 36    name_list -> NAME
Rule 37    var_part -> VAR var_decl_list
Rule 38    var_part -> empty
Rule 39    var_decl_list -> var_decl_list var_decl
Rule 40    var_decl_list -> var_decl
Rule 41    var_decl -> name_list COLON type_decl SEMI
Rule 42    routine_part -> routine_part function_decl
Rule 43    routine_part -> routine_part procedure_decl
Rule 44    routine_part -> function_decl
Rule 45    routine_part -> procedure_decl
Rule 46    routine_part -> empty
Rule 47    function_decl -> function_head SEMI sub_routine SEMI
Rule 48    function_head -> FUNCTION NAME parameters COLON simple_type_decl
Rule 49    procedure_decl -> procedure_head SEMI sub_routine SEMI
Rule 50    procedure_head -> PROCEDURE NAME parameters
Rule 51    parameters -> LP para_decl_list RP
Rule 52    parameters -> empty
Rule 53    para_decl_list -> para_decl_list SEMI para_type_list
Rule 54    para_decl_list -> para_type_list
Rule 55    para_type_list -> var_para_list COLON simple_type_decl
Rule 56    para_type_list -> val_para_list COLON simple_type_decl
Rule 57    var_para_list -> VAR name_list
Rule 58    val_para_list -> name_list
Rule 59    routine_body -> compound_stmt
Rule 60    compound_stmt -> BEGIN stmt_list END
Rule 61    stmt_list -> stmt_list stmt SEMI
Rule 62    stmt_list -> empty
Rule 63    stmt -> INTEGER COLON non_label_stmt
Rule 64    stmt -> non_label_stmt
Rule 65    non_label_stmt -> assign_stmt
Rule 66    non_label_stmt -> proc_stmt
Rule 67    non_label_stmt -> compound_stmt
Rule 68    non_label_stmt -> if_stmt
Rule 69    non_label_stmt -> repeat_stmt
Rule 70    non_label_stmt -> while_stmt
Rule 71    non_label_stmt -> for_stmt
Rule 72    non_label_stmt -> case_stmt
Rule 73    non_label_stmt -> goto_stmt
Rule 74    assign_stmt -> NAME ASSIGN expression
Rule 75    assign_stmt -> NAME LB expression RB ASSIGN expression
Rule 76    assign_stmt -> NAME DOT NAME ASSIGN expression
Rule 77    proc_stmt -> NAME
Rule 78    proc_stmt -> NAME LP args_list RP
Rule 79    proc_stmt -> SYS_PROC
Rule 80    proc_stmt -> SYS_PROC LP expression_list RP
Rule 81    proc_stmt -> READ LP factor RP
Rule 82    if_stmt -> IF expression THEN stmt else_clause
Rule 83    else_clause -> ELSE stmt
Rule 84    else_clause -> empty
Rule 85    repeat_stmt -> REPEAT stmt_list UNTIL expression
Rule 86    while_stmt -> WHILE expression DO stmt
Rule 87    for_stmt -> FOR NAME ASSIGN expression direction expression DO stmt
Rule 88    direction -> TO
Rule 89    direction -> DOWNTO
Rule 90    case_stmt -> CASE expression OF case_expr_list END
Rule 91    case_expr_list -> case_expr_list case_expr
Rule 92    case_expr_list -> case_expr
Rule 93    case_expr -> const_value COLON stmt SEMI
Rule 94    case_expr -> NAME COLON stmt SEMI
Rule 95    goto_stmt -> GOTO INTEGER
Rule 96    expression_list -> expression_list COMMA expression
Rule 97    expression_list -> expression
Rule 98    expression -> expression GE expr
Rule 99    expression -> expression GT expr
Rule 100   expression -> expression LE expr
Rule 101   expression -> expression LT expr
Rule 102   expression -> expression EQUAL expr
Rule 103   expression -> expression UNEQUAL expr
Rule 104   expression -> expr
Rule 105   expr -> expr PLUS term
Rule 106   expr -> expr MINUS term
Rule 107   expr -> expr OR term
Rule 108   expr -> term
Rule 109   term -> term MUL factor
Rule 110   term -> term DIV factor
Rule 111   term -> term MOD factor
Rule 112   term -> term AND factor
Rule 113   term -> factor
Rule 114   factor -> SYS_FUNCT
Rule 115   factor -> SYS_FUNCT LP args_list RP
Rule 116   factor -> NAME LP args_list RP
Rule 117   factor -> NAME LB expression RB
Rule 118   factor -> NAME
Rule 119   factor -> const_value
Rule 120   factor -> NOT factor
Rule 121   factor -> MINUS factor
Rule 122   factor -> LP expression RP
Rule 123   factor -> NAME DOT NAME
Rule 124   args_list -> args_list COMMA expression
Rule 125   args_list -> expression

Terminals, with rules where they appear

AND                  : 112
ARRAY                : 30
ASSIGN               : 74 75 76 87
BEGIN                : 60
CASE                 : 90
CHAR                 : 15
COLON                : 34 41 48 55 56 63 93 94
COMMA                : 35 96 124
CONST                : 8
DIV                  : 110
DO                   : 86 87
DOT                  : 1 76 123
DOTDOT               : 29
DOWNTO               : 89
ELSE                 : 83
END                  : 31 60 90
EQUAL                : 12 22 102
FOR                  : 87
FUNCTION             : 48
GE                   : 98
GOTO                 : 95
GT                   : 99
ID                   : 
IF                   : 82
INTEGER              : 13 63 95
LB                   : 30 75 117
LE                   : 100
LP                   : 28 51 78 80 81 115 116 122
LT                   : 101
MINUS                : 106 121
MOD                  : 111
MUL                  : 109
NAME                 : 2 12 22 27 35 36 48 50 74 75 76 76 77 78 87 94 116 117 118 123 123
NOT                  : 120
NUMBER               : 
OF                   : 30 90
OR                   : 107
PACKED               : 
PLUS                 : 105
PROCEDURE            : 50
PROGRAM              : 2
RB                   : 30 75 117
READ                 : 81
REAL                 : 14
RECORD               : 31
REPEAT               : 85
RP                   : 28 51 78 80 81 115 116 122
SEMI                 : 2 12 22 34 41 47 47 49 49 53 61 93 94
STRING               : 16
SYS_CON              : 17
SYS_FUNCT            : 114 115
SYS_PROC             : 79 80
SYS_TYPE             : 26
THEN                 : 82
TO                   : 88
TYPE                 : 18
UNEQUAL              : 103
UNTIL                : 85
VAR                  : 37 57
WHILE                : 86
error                : 

Nonterminals, with rules where they appear

args_list            : 78 115 116 124
array_type_decl      : 24
assign_stmt          : 65
case_expr            : 91 92
case_expr_list       : 90 91
case_stmt            : 72
compound_stmt        : 59 67
const_expr           : 10 11
const_expr_list      : 8 10
const_part           : 5
const_value          : 12 29 29 93 119
direction            : 87
else_clause          : 82
empty                : 6 9 19 38 46 52 62 84
expr                 : 98 99 100 101 102 103 104 105 106 107
expression           : 74 75 75 76 82 85 86 87 87 90 96 97 98 99 100 101 102 103 117 122 124 125
expression_list      : 80 96
factor               : 81 109 110 111 112 113 120 121
field_decl           : 32 33
field_decl_list      : 31 32
for_stmt             : 71
function_decl        : 42 44
function_head        : 47
goto_stmt            : 73
if_stmt              : 68
label_part           : 5
name_list            : 28 34 35 41 57 58
non_label_stmt       : 63 64
para_decl_list       : 51 53
para_type_list       : 53 54
parameters           : 48 50
proc_stmt            : 66
procedure_decl       : 43 45
procedure_head       : 49
program              : 0
program_head         : 1
record_type_decl     : 25
repeat_stmt          : 69
routine              : 1 4
routine_body         : 3
routine_head         : 3
routine_part         : 5 42 43
simple_type_decl     : 23 30 48 55 56
stmt                 : 61 82 83 86 87 93 94
stmt_list            : 60 61 85
sub_routine          : 47 49
term                 : 105 106 107 108 109 110 111 112
type_decl            : 22 30 34 41
type_decl_list       : 18 20
type_definition      : 20 21
type_part            : 5
val_para_list        : 56
var_decl             : 39 40
var_decl_list        : 37 39
var_para_list        : 55
var_part             : 5
while_stmt           : 70

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . program_head routine DOT
    (2) program_head -> . PROGRAM NAME SEMI

    PROGRAM         shift and go to state 3

    program                        shift and go to state 1
    program_head                   shift and go to state 2

state 1

    (0) S' -> program .



state 2

    (1) program -> program_head . routine DOT
    (3) routine -> . routine_head routine_body
    (5) routine_head -> . label_part const_part type_part var_part routine_part
    (6) label_part -> . empty
    (7) empty -> .

    CONST           reduce using rule 7 (empty -> .)
    TYPE            reduce using rule 7 (empty -> .)
    VAR             reduce using rule 7 (empty -> .)
    FUNCTION        reduce using rule 7 (empty -> .)
    PROCEDURE       reduce using rule 7 (empty -> .)
    BEGIN           reduce using rule 7 (empty -> .)

    routine                        shift and go to state 4
    routine_head                   shift and go to state 5
    label_part                     shift and go to state 6
    empty                          shift and go to state 7

state 3

    (2) program_head -> PROGRAM . NAME SEMI

    NAME            shift and go to state 8


state 4

    (1) program -> program_head routine . DOT

    DOT             shift and go to state 9


state 5

    (3) routine -> routine_head . routine_body
    (59) routine_body -> . compound_stmt
    (60) compound_stmt -> . BEGIN stmt_list END

    BEGIN           shift and go to state 12

    routine_body                   shift and go to state 10
    compound_stmt                  shift and go to state 11

state 6

    (5) routine_head -> label_part . const_part type_part var_part routine_part
    (8) const_part -> . CONST const_expr_list
    (9) const_part -> . empty
    (7) empty -> .

    CONST           shift and go to state 14
    TYPE            reduce using rule 7 (empty -> .)
    VAR             reduce using rule 7 (empty -> .)
    FUNCTION        reduce using rule 7 (empty -> .)
    PROCEDURE       reduce using rule 7 (empty -> .)
    BEGIN           reduce using rule 7 (empty -> .)

    const_part                     shift and go to state 13
    empty                          shift and go to state 15

state 7

    (6) label_part -> empty .

    CONST           reduce using rule 6 (label_part -> empty .)
    TYPE            reduce using rule 6 (label_part -> empty .)
    VAR             reduce using rule 6 (label_part -> empty .)
    FUNCTION        reduce using rule 6 (label_part -> empty .)
    PROCEDURE       reduce using rule 6 (label_part -> empty .)
    BEGIN           reduce using rule 6 (label_part -> empty .)


state 8

    (2) program_head -> PROGRAM NAME . SEMI

    SEMI            shift and go to state 16


state 9

    (1) program -> program_head routine DOT .

    $end            reduce using rule 1 (program -> program_head routine DOT .)


state 10

    (3) routine -> routine_head routine_body .

    DOT             reduce using rule 3 (routine -> routine_head routine_body .)
    SEMI            reduce using rule 3 (routine -> routine_head routine_body .)


state 11

    (59) routine_body -> compound_stmt .

    DOT             reduce using rule 59 (routine_body -> compound_stmt .)
    SEMI            reduce using rule 59 (routine_body -> compound_stmt .)


state 12

    (60) compound_stmt -> BEGIN . stmt_list END
    (61) stmt_list -> . stmt_list stmt SEMI
    (62) stmt_list -> . empty
    (7) empty -> .

    END             reduce using rule 7 (empty -> .)
    INTEGER         reduce using rule 7 (empty -> .)
    NAME            reduce using rule 7 (empty -> .)
    SYS_PROC        reduce using rule 7 (empty -> .)
    READ            reduce using rule 7 (empty -> .)
    BEGIN           reduce using rule 7 (empty -> .)
    IF              reduce using rule 7 (empty -> .)
    REPEAT          reduce using rule 7 (empty -> .)
    WHILE           reduce using rule 7 (empty -> .)
    FOR             reduce using rule 7 (empty -> .)
    CASE            reduce using rule 7 (empty -> .)
    GOTO            reduce using rule 7 (empty -> .)

    stmt_list                      shift and go to state 17
    empty                          shift and go to state 18

state 13

    (5) routine_head -> label_part const_part . type_part var_part routine_part
    (18) type_part -> . TYPE type_decl_list
    (19) type_part -> . empty
    (7) empty -> .

    TYPE            shift and go to state 20
    VAR             reduce using rule 7 (empty -> .)
    FUNCTION        reduce using rule 7 (empty -> .)
    PROCEDURE       reduce using rule 7 (empty -> .)
    BEGIN           reduce using rule 7 (empty -> .)

    type_part                      shift and go to state 19
    empty                          shift and go to state 21

state 14

    (8) const_part -> CONST . const_expr_list
    (10) const_expr_list -> . const_expr_list const_expr
    (11) const_expr_list -> . const_expr
    (12) const_expr -> . NAME EQUAL const_value SEMI

    NAME            shift and go to state 24

    const_expr_list                shift and go to state 22
    const_expr                     shift and go to state 23

state 15

    (9) const_part -> empty .

    TYPE            reduce using rule 9 (const_part -> empty .)
    VAR             reduce using rule 9 (const_part -> empty .)
    FUNCTION        reduce using rule 9 (const_part -> empty .)
    PROCEDURE       reduce using rule 9 (const_part -> empty .)
    BEGIN           reduce using rule 9 (const_part -> empty .)


state 16

    (2) program_head -> PROGRAM NAME SEMI .

    BEGIN           reduce using rule 2 (program_head -> PROGRAM NAME SEMI .)
    CONST           reduce using rule 2 (program_head -> PROGRAM NAME SEMI .)
    TYPE            reduce using rule 2 (program_head -> PROGRAM NAME SEMI .)
    VAR             reduce using rule 2 (program_head -> PROGRAM NAME SEMI .)
    FUNCTION        reduce using rule 2 (program_head -> PROGRAM NAME SEMI .)
    PROCEDURE       reduce using rule 2 (program_head -> PROGRAM NAME SEMI .)


state 17

    (60) compound_stmt -> BEGIN stmt_list . END
    (61) stmt_list -> stmt_list . stmt SEMI
    (63) stmt -> . INTEGER COLON non_label_stmt
    (64) stmt -> . non_label_stmt
    (65) non_label_stmt -> . assign_stmt
    (66) non_label_stmt -> . proc_stmt
    (67) non_label_stmt -> . compound_stmt
    (68) non_label_stmt -> . if_stmt
    (69) non_label_stmt -> . repeat_stmt
    (70) non_label_stmt -> . while_stmt
    (71) non_label_stmt -> . for_stmt
    (72) non_label_stmt -> . case_stmt
    (73) non_label_stmt -> . goto_stmt
    (74) assign_stmt -> . NAME ASSIGN expression
    (75) assign_stmt -> . NAME LB expression RB ASSIGN expression
    (76) assign_stmt -> . NAME DOT NAME ASSIGN expression
    (77) proc_stmt -> . NAME
    (78) proc_stmt -> . NAME LP args_list RP
    (79) proc_stmt -> . SYS_PROC
    (80) proc_stmt -> . SYS_PROC LP expression_list RP
    (81) proc_stmt -> . READ LP factor RP
    (60) compound_stmt -> . BEGIN stmt_list END
    (82) if_stmt -> . IF expression THEN stmt else_clause
    (85) repeat_stmt -> . REPEAT stmt_list UNTIL expression
    (86) while_stmt -> . WHILE expression DO stmt
    (87) for_stmt -> . FOR NAME ASSIGN expression direction expression DO stmt
    (90) case_stmt -> . CASE expression OF case_expr_list END
    (95) goto_stmt -> . GOTO INTEGER

    END             shift and go to state 25
    INTEGER         shift and go to state 27
    NAME            shift and go to state 38
    SYS_PROC        shift and go to state 39
    READ            shift and go to state 40
    BEGIN           shift and go to state 12
    IF              shift and go to state 41
    REPEAT          shift and go to state 42
    WHILE           shift and go to state 43
    FOR             shift and go to state 44
    CASE            shift and go to state 45
    GOTO            shift and go to state 46

    stmt                           shift and go to state 26
    non_label_stmt                 shift and go to state 28
    assign_stmt                    shift and go to state 29
    proc_stmt                      shift and go to state 30
    compound_stmt                  shift and go to state 31
    if_stmt                        shift and go to state 32
    repeat_stmt                    shift and go to state 33
    while_stmt                     shift and go to state 34
    for_stmt                       shift and go to state 35
    case_stmt                      shift and go to state 36
    goto_stmt                      shift and go to state 37

state 18

    (62) stmt_list -> empty .

    END             reduce using rule 62 (stmt_list -> empty .)
    INTEGER         reduce using rule 62 (stmt_list -> empty .)
    NAME            reduce using rule 62 (stmt_list -> empty .)
    SYS_PROC        reduce using rule 62 (stmt_list -> empty .)
    READ            reduce using rule 62 (stmt_list -> empty .)
    BEGIN           reduce using rule 62 (stmt_list -> empty .)
    IF              reduce using rule 62 (stmt_list -> empty .)
    REPEAT          reduce using rule 62 (stmt_list -> empty .)
    WHILE           reduce using rule 62 (stmt_list -> empty .)
    FOR             reduce using rule 62 (stmt_list -> empty .)
    CASE            reduce using rule 62 (stmt_list -> empty .)
    GOTO            reduce using rule 62 (stmt_list -> empty .)
    UNTIL           reduce using rule 62 (stmt_list -> empty .)


state 19

    (5) routine_head -> label_part const_part type_part . var_part routine_part
    (37) var_part -> . VAR var_decl_list
    (38) var_part -> . empty
    (7) empty -> .

    VAR             shift and go to state 48
    FUNCTION        reduce using rule 7 (empty -> .)
    PROCEDURE       reduce using rule 7 (empty -> .)
    BEGIN           reduce using rule 7 (empty -> .)

    var_part                       shift and go to state 47
    empty                          shift and go to state 49

state 20

    (18) type_part -> TYPE . type_decl_list
    (20) type_decl_list -> . type_decl_list type_definition
    (21) type_decl_list -> . type_definition
    (22) type_definition -> . NAME EQUAL type_decl SEMI

    NAME            shift and go to state 52

    type_decl_list                 shift and go to state 50
    type_definition                shift and go to state 51

state 21

    (19) type_part -> empty .

    VAR             reduce using rule 19 (type_part -> empty .)
    FUNCTION        reduce using rule 19 (type_part -> empty .)
    PROCEDURE       reduce using rule 19 (type_part -> empty .)
    BEGIN           reduce using rule 19 (type_part -> empty .)


state 22

    (8) const_part -> CONST const_expr_list .
    (10) const_expr_list -> const_expr_list . const_expr
    (12) const_expr -> . NAME EQUAL const_value SEMI

    TYPE            reduce using rule 8 (const_part -> CONST const_expr_list .)
    VAR             reduce using rule 8 (const_part -> CONST const_expr_list .)
    FUNCTION        reduce using rule 8 (const_part -> CONST const_expr_list .)
    PROCEDURE       reduce using rule 8 (const_part -> CONST const_expr_list .)
    BEGIN           reduce using rule 8 (const_part -> CONST const_expr_list .)
    NAME            shift and go to state 24

    const_expr                     shift and go to state 53

state 23

    (11) const_expr_list -> const_expr .

    NAME            reduce using rule 11 (const_expr_list -> const_expr .)
    TYPE            reduce using rule 11 (const_expr_list -> const_expr .)
    VAR             reduce using rule 11 (const_expr_list -> const_expr .)
    FUNCTION        reduce using rule 11 (const_expr_list -> const_expr .)
    PROCEDURE       reduce using rule 11 (const_expr_list -> const_expr .)
    BEGIN           reduce using rule 11 (const_expr_list -> const_expr .)


state 24

    (12) const_expr -> NAME . EQUAL const_value SEMI

    EQUAL           shift and go to state 54


state 25

    (60) compound_stmt -> BEGIN stmt_list END .

    DOT             reduce using rule 60 (compound_stmt -> BEGIN stmt_list END .)
    SEMI            reduce using rule 60 (compound_stmt -> BEGIN stmt_list END .)
    ELSE            reduce using rule 60 (compound_stmt -> BEGIN stmt_list END .)


state 26

    (61) stmt_list -> stmt_list stmt . SEMI

    SEMI            shift and go to state 55


state 27

    (63) stmt -> INTEGER . COLON non_label_stmt

    COLON           shift and go to state 56


state 28

    (64) stmt -> non_label_stmt .

    SEMI            reduce using rule 64 (stmt -> non_label_stmt .)
    ELSE            reduce using rule 64 (stmt -> non_label_stmt .)


state 29

    (65) non_label_stmt -> assign_stmt .

    SEMI            reduce using rule 65 (non_label_stmt -> assign_stmt .)
    ELSE            reduce using rule 65 (non_label_stmt -> assign_stmt .)


state 30

    (66) non_label_stmt -> proc_stmt .

    SEMI            reduce using rule 66 (non_label_stmt -> proc_stmt .)
    ELSE            reduce using rule 66 (non_label_stmt -> proc_stmt .)


state 31

    (67) non_label_stmt -> compound_stmt .

    SEMI            reduce using rule 67 (non_label_stmt -> compound_stmt .)
    ELSE            reduce using rule 67 (non_label_stmt -> compound_stmt .)


state 32

    (68) non_label_stmt -> if_stmt .

    SEMI            reduce using rule 68 (non_label_stmt -> if_stmt .)
    ELSE            reduce using rule 68 (non_label_stmt -> if_stmt .)


state 33

    (69) non_label_stmt -> repeat_stmt .

    SEMI            reduce using rule 69 (non_label_stmt -> repeat_stmt .)
    ELSE            reduce using rule 69 (non_label_stmt -> repeat_stmt .)


state 34

    (70) non_label_stmt -> while_stmt .

    SEMI            reduce using rule 70 (non_label_stmt -> while_stmt .)
    ELSE            reduce using rule 70 (non_label_stmt -> while_stmt .)


state 35

    (71) non_label_stmt -> for_stmt .

    SEMI            reduce using rule 71 (non_label_stmt -> for_stmt .)
    ELSE            reduce using rule 71 (non_label_stmt -> for_stmt .)


state 36

    (72) non_label_stmt -> case_stmt .

    SEMI            reduce using rule 72 (non_label_stmt -> case_stmt .)
    ELSE            reduce using rule 72 (non_label_stmt -> case_stmt .)


state 37

    (73) non_label_stmt -> goto_stmt .

    SEMI            reduce using rule 73 (non_label_stmt -> goto_stmt .)
    ELSE            reduce using rule 73 (non_label_stmt -> goto_stmt .)


state 38

    (74) assign_stmt -> NAME . ASSIGN expression
    (75) assign_stmt -> NAME . LB expression RB ASSIGN expression
    (76) assign_stmt -> NAME . DOT NAME ASSIGN expression
    (77) proc_stmt -> NAME .
    (78) proc_stmt -> NAME . LP args_list RP

    ASSIGN          shift and go to state 57
    LB              shift and go to state 58
    DOT             shift and go to state 59
    SEMI            reduce using rule 77 (proc_stmt -> NAME .)
    ELSE            reduce using rule 77 (proc_stmt -> NAME .)
    LP              shift and go to state 60


state 39

    (79) proc_stmt -> SYS_PROC .
    (80) proc_stmt -> SYS_PROC . LP expression_list RP

    SEMI            reduce using rule 79 (proc_stmt -> SYS_PROC .)
    ELSE            reduce using rule 79 (proc_stmt -> SYS_PROC .)
    LP              shift and go to state 61


state 40

    (81) proc_stmt -> READ . LP factor RP

    LP              shift and go to state 62


state 41

    (82) if_stmt -> IF . expression THEN stmt else_clause
    (98) expression -> . expression GE expr
    (99) expression -> . expression GT expr
    (100) expression -> . expression LE expr
    (101) expression -> . expression LT expr
    (102) expression -> . expression EQUAL expr
    (103) expression -> . expression UNEQUAL expr
    (104) expression -> . expr
    (105) expr -> . expr PLUS term
    (106) expr -> . expr MINUS term
    (107) expr -> . expr OR term
    (108) expr -> . term
    (109) term -> . term MUL factor
    (110) term -> . term DIV factor
    (111) term -> . term MOD factor
    (112) term -> . term AND factor
    (113) term -> . factor
    (114) factor -> . SYS_FUNCT
    (115) factor -> . SYS_FUNCT LP args_list RP
    (116) factor -> . NAME LP args_list RP
    (117) factor -> . NAME LB expression RB
    (118) factor -> . NAME
    (119) factor -> . const_value
    (120) factor -> . NOT factor
    (121) factor -> . MINUS factor
    (122) factor -> . LP expression RP
    (123) factor -> . NAME DOT NAME
    (13) const_value -> . INTEGER
    (14) const_value -> . REAL
    (15) const_value -> . CHAR
    (16) const_value -> . STRING
    (17) const_value -> . SYS_CON

    SYS_FUNCT       shift and go to state 68
    NAME            shift and go to state 70
    NOT             shift and go to state 72
    MINUS           shift and go to state 66
    LP              shift and go to state 69
    INTEGER         shift and go to state 73
    REAL            shift and go to state 74
    CHAR            shift and go to state 75
    STRING          shift and go to state 76
    SYS_CON         shift and go to state 77

    expression                     shift and go to state 63
    expr                           shift and go to state 64
    term                           shift and go to state 65
    factor                         shift and go to state 67
    const_value                    shift and go to state 71

state 42

    (85) repeat_stmt -> REPEAT . stmt_list UNTIL expression
    (61) stmt_list -> . stmt_list stmt SEMI
    (62) stmt_list -> . empty
    (7) empty -> .

    UNTIL           reduce using rule 7 (empty -> .)
    INTEGER         reduce using rule 7 (empty -> .)
    NAME            reduce using rule 7 (empty -> .)
    SYS_PROC        reduce using rule 7 (empty -> .)
    READ            reduce using rule 7 (empty -> .)
    BEGIN           reduce using rule 7 (empty -> .)
    IF              reduce using rule 7 (empty -> .)
    REPEAT          reduce using rule 7 (empty -> .)
    WHILE           reduce using rule 7 (empty -> .)
    FOR             reduce using rule 7 (empty -> .)
    CASE            reduce using rule 7 (empty -> .)
    GOTO            reduce using rule 7 (empty -> .)

    stmt_list                      shift and go to state 78
    empty                          shift and go to state 18

state 43

    (86) while_stmt -> WHILE . expression DO stmt
    (98) expression -> . expression GE expr
    (99) expression -> . expression GT expr
    (100) expression -> . expression LE expr
    (101) expression -> . expression LT expr
    (102) expression -> . expression EQUAL expr
    (103) expression -> . expression UNEQUAL expr
    (104) expression -> . expr
    (105) expr -> . expr PLUS term
    (106) expr -> . expr MINUS term
    (107) expr -> . expr OR term
    (108) expr -> . term
    (109) term -> . term MUL factor
    (110) term -> . term DIV factor
    (111) term -> . term MOD factor
    (112) term -> . term AND factor
    (113) term -> . factor
    (114) factor -> . SYS_FUNCT
    (115) factor -> . SYS_FUNCT LP args_list RP
    (116) factor -> . NAME LP args_list RP
    (117) factor -> . NAME LB expression RB
    (118) factor -> . NAME
    (119) factor -> . const_value
    (120) factor -> . NOT factor
    (121) factor -> . MINUS factor
    (122) factor -> . LP expression RP
    (123) factor -> . NAME DOT NAME
    (13) const_value -> . INTEGER
    (14) const_value -> . REAL
    (15) const_value -> . CHAR
    (16) const_value -> . STRING
    (17) const_value -> . SYS_CON

    SYS_FUNCT       shift and go to state 68
    NAME            shift and go to state 70
    NOT             shift and go to state 72
    MINUS           shift and go to state 66
    LP              shift and go to state 69
    INTEGER         shift and go to state 73
    REAL            shift and go to state 74
    CHAR            shift and go to state 75
    STRING          shift and go to state 76
    SYS_CON         shift and go to state 77

    expression                     shift and go to state 79
    expr                           shift and go to state 64
    term                           shift and go to state 65
    factor                         shift and go to state 67
    const_value                    shift and go to state 71

state 44

    (87) for_stmt -> FOR . NAME ASSIGN expression direction expression DO stmt

    NAME            shift and go to state 80


state 45

    (90) case_stmt -> CASE . expression OF case_expr_list END
    (98) expression -> . expression GE expr
    (99) expression -> . expression GT expr
    (100) expression -> . expression LE expr
    (101) expression -> . expression LT expr
    (102) expression -> . expression EQUAL expr
    (103) expression -> . expression UNEQUAL expr
    (104) expression -> . expr
    (105) expr -> . expr PLUS term
    (106) expr -> . expr MINUS term
    (107) expr -> . expr OR term
    (108) expr -> . term
    (109) term -> . term MUL factor
    (110) term -> . term DIV factor
    (111) term -> . term MOD factor
    (112) term -> . term AND factor
    (113) term -> . factor
    (114) factor -> . SYS_FUNCT
    (115) factor -> . SYS_FUNCT LP args_list RP
    (116) factor -> . NAME LP args_list RP
    (117) factor -> . NAME LB expression RB
    (118) factor -> . NAME
    (119) factor -> . const_value
    (120) factor -> . NOT factor
    (121) factor -> . MINUS factor
    (122) factor -> . LP expression RP
    (123) factor -> . NAME DOT NAME
    (13) const_value -> . INTEGER
    (14) const_value -> . REAL
    (15) const_value -> . CHAR
    (16) const_value -> . STRING
    (17) const_value -> . SYS_CON

    SYS_FUNCT       shift and go to state 68
    NAME            shift and go to state 70
    NOT             shift and go to state 72
    MINUS           shift and go to state 66
    LP              shift and go to state 69
    INTEGER         shift and go to state 73
    REAL            shift and go to state 74
    CHAR            shift and go to state 75
    STRING          shift and go to state 76
    SYS_CON         shift and go to state 77

    expression                     shift and go to state 81
    expr                           shift and go to state 64
    term                           shift and go to state 65
    factor                         shift and go to state 67
    const_value                    shift and go to state 71

state 46

    (95) goto_stmt -> GOTO . INTEGER

    INTEGER         shift and go to state 82


state 47

    (5) routine_head -> label_part const_part type_part var_part . routine_part
    (42) routine_part -> . routine_part function_decl
    (43) routine_part -> . routine_part procedure_decl
    (44) routine_part -> . function_decl
    (45) routine_part -> . procedure_decl
    (46) routine_part -> . empty
    (47) function_decl -> . function_head SEMI sub_routine SEMI
    (49) procedure_decl -> . procedure_head SEMI sub_routine SEMI
    (7) empty -> .
    (48) function_head -> . FUNCTION NAME parameters COLON simple_type_decl
    (50) procedure_head -> . PROCEDURE NAME parameters

  ! shift/reduce conflict for FUNCTION resolved as shift
  ! shift/reduce conflict for PROCEDURE resolved as shift
    BEGIN           reduce using rule 7 (empty -> .)
    FUNCTION        shift and go to state 89
    PROCEDURE       shift and go to state 90

  ! FUNCTION        [ reduce using rule 7 (empty -> .) ]
  ! PROCEDURE       [ reduce using rule 7 (empty -> .) ]

    routine_part                   shift and go to state 83
    function_decl                  shift and go to state 84
    procedure_decl                 shift and go to state 85
    empty                          shift and go to state 86
    function_head                  shift and go to state 87
    procedure_head                 shift and go to state 88

state 48

    (37) var_part -> VAR . var_decl_list
    (39) var_decl_list -> . var_decl_list var_decl
    (40) var_decl_list -> . var_decl
    (41) var_decl -> . name_list COLON type_decl SEMI
    (35) name_list -> . name_list COMMA NAME
    (36) name_list -> . NAME

    NAME            shift and go to state 94

    var_decl_list                  shift and go to state 91
    var_decl                       shift and go to state 92
    name_list                      shift and go to state 93

state 49

    (38) var_part -> empty .

    FUNCTION        reduce using rule 38 (var_part -> empty .)
    PROCEDURE       reduce using rule 38 (var_part -> empty .)
    BEGIN           reduce using rule 38 (var_part -> empty .)


state 50

    (18) type_part -> TYPE type_decl_list .
    (20) type_decl_list -> type_decl_list . type_definition
    (22) type_definition -> . NAME EQUAL type_decl SEMI

    VAR             reduce using rule 18 (type_part -> TYPE type_decl_list .)
    FUNCTION        reduce using rule 18 (type_part -> TYPE type_decl_list .)
    PROCEDURE       reduce using rule 18 (type_part -> TYPE type_decl_list .)
    BEGIN           reduce using rule 18 (type_part -> TYPE type_decl_list .)
    NAME            shift and go to state 52

    type_definition                shift and go to state 95

state 51

    (21) type_decl_list -> type_definition .

    NAME            reduce using rule 21 (type_decl_list -> type_definition .)
    VAR             reduce using rule 21 (type_decl_list -> type_definition .)
    FUNCTION        reduce using rule 21 (type_decl_list -> type_definition .)
    PROCEDURE       reduce using rule 21 (type_decl_list -> type_definition .)
    BEGIN           reduce using rule 21 (type_decl_list -> type_definition .)


state 52

    (22) type_definition -> NAME . EQUAL type_decl SEMI

    EQUAL           shift and go to state 96


state 53

    (10) const_expr_list -> const_expr_list const_expr .

    NAME            reduce using rule 10 (const_expr_list -> const_expr_list const_expr .)
    TYPE            reduce using rule 10 (const_expr_list -> const_expr_list const_expr .)
    VAR             reduce using rule 10 (const_expr_list -> const_expr_list const_expr .)
    FUNCTION        reduce using rule 10 (const_expr_list -> const_expr_list const_expr .)
    PROCEDURE       reduce using rule 10 (const_expr_list -> const_expr_list const_expr .)
    BEGIN           reduce using rule 10 (const_expr_list -> const_expr_list const_expr .)


state 54

    (12) const_expr -> NAME EQUAL . const_value SEMI
    (13) const_value -> . INTEGER
    (14) const_value -> . REAL
    (15) const_value -> . CHAR
    (16) const_value -> . STRING
    (17) const_value -> . SYS_CON

    INTEGER         shift and go to state 73
    REAL            shift and go to state 74
    CHAR            shift and go to state 75
    STRING          shift and go to state 76
    SYS_CON         shift and go to state 77

    const_value                    shift and go to state 97

state 55

    (61) stmt_list -> stmt_list stmt SEMI .

    END             reduce using rule 61 (stmt_list -> stmt_list stmt SEMI .)
    INTEGER         reduce using rule 61 (stmt_list -> stmt_list stmt SEMI .)
    NAME            reduce using rule 61 (stmt_list -> stmt_list stmt SEMI .)
    SYS_PROC        reduce using rule 61 (stmt_list -> stmt_list stmt SEMI .)
    READ            reduce using rule 61 (stmt_list -> stmt_list stmt SEMI .)
    BEGIN           reduce using rule 61 (stmt_list -> stmt_list stmt SEMI .)
    IF              reduce using rule 61 (stmt_list -> stmt_list stmt SEMI .)
    REPEAT          reduce using rule 61 (stmt_list -> stmt_list stmt SEMI .)
    WHILE           reduce using rule 61 (stmt_list -> stmt_list stmt SEMI .)
    FOR             reduce using rule 61 (stmt_list -> stmt_list stmt SEMI .)
    CASE            reduce using rule 61 (stmt_list -> stmt_list stmt SEMI .)
    GOTO            reduce using rule 61 (stmt_list -> stmt_list stmt SEMI .)
    UNTIL           reduce using rule 61 (stmt_list -> stmt_list stmt SEMI .)


state 56

    (63) stmt -> INTEGER COLON . non_label_stmt
    (65) non_label_stmt -> . assign_stmt
    (66) non_label_stmt -> . proc_stmt
    (67) non_label_stmt -> . compound_stmt
    (68) non_label_stmt -> . if_stmt
    (69) non_label_stmt -> . repeat_stmt
    (70) non_label_stmt -> . while_stmt
    (71) non_label_stmt -> . for_stmt
    (72) non_label_stmt -> . case_stmt
    (73) non_label_stmt -> . goto_stmt
    (74) assign_stmt -> . NAME ASSIGN expression
    (75) assign_stmt -> . NAME LB expression RB ASSIGN expression
    (76) assign_stmt -> . NAME DOT NAME ASSIGN expression
    (77) proc_stmt -> . NAME
    (78) proc_stmt -> . NAME LP args_list RP
    (79) proc_stmt -> . SYS_PROC
    (80) proc_stmt -> . SYS_PROC LP expression_list RP
    (81) proc_stmt -> . READ LP factor RP
    (60) compound_stmt -> . BEGIN stmt_list END
    (82) if_stmt -> . IF expression THEN stmt else_clause
    (85) repeat_stmt -> . REPEAT stmt_list UNTIL expression
    (86) while_stmt -> . WHILE expression DO stmt
    (87) for_stmt -> . FOR NAME ASSIGN expression direction expression DO stmt
    (90) case_stmt -> . CASE expression OF case_expr_list END
    (95) goto_stmt -> . GOTO INTEGER

    NAME            shift and go to state 38
    SYS_PROC        shift and go to state 39
    READ            shift and go to state 40
    BEGIN           shift and go to state 12
    IF              shift and go to state 41
    REPEAT          shift and go to state 42
    WHILE           shift and go to state 43
    FOR             shift and go to state 44
    CASE            shift and go to state 45
    GOTO            shift and go to state 46

    non_label_stmt                 shift and go to state 98
    assign_stmt                    shift and go to state 29
    proc_stmt                      shift and go to state 30
    compound_stmt                  shift and go to state 31
    if_stmt                        shift and go to state 32
    repeat_stmt                    shift and go to state 33
    while_stmt                     shift and go to state 34
    for_stmt                       shift and go to state 35
    case_stmt                      shift and go to state 36
    goto_stmt                      shift and go to state 37

state 57

    (74) assign_stmt -> NAME ASSIGN . expression
    (98) expression -> . expression GE expr
    (99) expression -> . expression GT expr
    (100) expression -> . expression LE expr
    (101) expression -> . expression LT expr
    (102) expression -> . expression EQUAL expr
    (103) expression -> . expression UNEQUAL expr
    (104) expression -> . expr
    (105) expr -> . expr PLUS term
    (106) expr -> . expr MINUS term
    (107) expr -> . expr OR term
    (108) expr -> . term
    (109) term -> . term MUL factor
    (110) term -> . term DIV factor
    (111) term -> . term MOD factor
    (112) term -> . term AND factor
    (113) term -> . factor
    (114) factor -> . SYS_FUNCT
    (115) factor -> . SYS_FUNCT LP args_list RP
    (116) factor -> . NAME LP args_list RP
    (117) factor -> . NAME LB expression RB
    (118) factor -> . NAME
    (119) factor -> . const_value
    (120) factor -> . NOT factor
    (121) factor -> . MINUS factor
    (122) factor -> . LP expression RP
    (123) factor -> . NAME DOT NAME
    (13) const_value -> . INTEGER
    (14) const_value -> . REAL
    (15) const_value -> . CHAR
    (16) const_value -> . STRING
    (17) const_value -> . SYS_CON

    SYS_FUNCT       shift and go to state 68
    NAME            shift and go to state 70
    NOT             shift and go to state 72
    MINUS           shift and go to state 66
    LP              shift and go to state 69
    INTEGER         shift and go to state 73
    REAL            shift and go to state 74
    CHAR            shift and go to state 75
    STRING          shift and go to state 76
    SYS_CON         shift and go to state 77

    expression                     shift and go to state 99
    expr                           shift and go to state 64
    term                           shift and go to state 65
    factor                         shift and go to state 67
    const_value                    shift and go to state 71

state 58

    (75) assign_stmt -> NAME LB . expression RB ASSIGN expression
    (98) expression -> . expression GE expr
    (99) expression -> . expression GT expr
    (100) expression -> . expression LE expr
    (101) expression -> . expression LT expr
    (102) expression -> . expression EQUAL expr
    (103) expression -> . expression UNEQUAL expr
    (104) expression -> . expr
    (105) expr -> . expr PLUS term
    (106) expr -> . expr MINUS term
    (107) expr -> . expr OR term
    (108) expr -> . term
    (109) term -> . term MUL factor
    (110) term -> . term DIV factor
    (111) term -> . term MOD factor
    (112) term -> . term AND factor
    (113) term -> . factor
    (114) factor -> . SYS_FUNCT
    (115) factor -> . SYS_FUNCT LP args_list RP
    (116) factor -> . NAME LP args_list RP
    (117) factor -> . NAME LB expression RB
    (118) factor -> . NAME
    (119) factor -> . const_value
    (120) factor -> . NOT factor
    (121) factor -> . MINUS factor
    (122) factor -> . LP expression RP
    (123) factor -> . NAME DOT NAME
    (13) const_value -> . INTEGER
    (14) const_value -> . REAL
    (15) const_value -> . CHAR
    (16) const_value -> . STRING
    (17) const_value -> . SYS_CON

    SYS_FUNCT       shift and go to state 68
    NAME            shift and go to state 70
    NOT             shift and go to state 72
    MINUS           shift and go to state 66
    LP              shift and go to state 69
    INTEGER         shift and go to state 73
    REAL            shift and go to state 74
    CHAR            shift and go to state 75
    STRING          shift and go to state 76
    SYS_CON         shift and go to state 77

    expression                     shift and go to state 100
    expr                           shift and go to state 64
    term                           shift and go to state 65
    factor                         shift and go to state 67
    const_value                    shift and go to state 71

state 59

    (76) assign_stmt -> NAME DOT . NAME ASSIGN expression

    NAME            shift and go to state 101


state 60

    (78) proc_stmt -> NAME LP . args_list RP
    (124) args_list -> . args_list COMMA expression
    (125) args_list -> . expression
    (98) expression -> . expression GE expr
    (99) expression -> . expression GT expr
    (100) expression -> . expression LE expr
    (101) expression -> . expression LT expr
    (102) expression -> . expression EQUAL expr
    (103) expression -> . expression UNEQUAL expr
    (104) expression -> . expr
    (105) expr -> . expr PLUS term
    (106) expr -> . expr MINUS term
    (107) expr -> . expr OR term
    (108) expr -> . term
    (109) term -> . term MUL factor
    (110) term -> . term DIV factor
    (111) term -> . term MOD factor
    (112) term -> . term AND factor
    (113) term -> . factor
    (114) factor -> . SYS_FUNCT
    (115) factor -> . SYS_FUNCT LP args_list RP
    (116) factor -> . NAME LP args_list RP
    (117) factor -> . NAME LB expression RB
    (118) factor -> . NAME
    (119) factor -> . const_value
    (120) factor -> . NOT factor
    (121) factor -> . MINUS factor
    (122) factor -> . LP expression RP
    (123) factor -> . NAME DOT NAME
    (13) const_value -> . INTEGER
    (14) const_value -> . REAL
    (15) const_value -> . CHAR
    (16) const_value -> . STRING
    (17) const_value -> . SYS_CON

    SYS_FUNCT       shift and go to state 68
    NAME            shift and go to state 70
    NOT             shift and go to state 72
    MINUS           shift and go to state 66
    LP              shift and go to state 69
    INTEGER         shift and go to state 73
    REAL            shift and go to state 74
    CHAR            shift and go to state 75
    STRING          shift and go to state 76
    SYS_CON         shift and go to state 77

    args_list                      shift and go to state 102
    expression                     shift and go to state 103
    expr                           shift and go to state 64
    term                           shift and go to state 65
    factor                         shift and go to state 67
    const_value                    shift and go to state 71

state 61

    (80) proc_stmt -> SYS_PROC LP . expression_list RP
    (96) expression_list -> . expression_list COMMA expression
    (97) expression_list -> . expression
    (98) expression -> . expression GE expr
    (99) expression -> . expression GT expr
    (100) expression -> . expression LE expr
    (101) expression -> . expression LT expr
    (102) expression -> . expression EQUAL expr
    (103) expression -> . expression UNEQUAL expr
    (104) expression -> . expr
    (105) expr -> . expr PLUS term
    (106) expr -> . expr MINUS term
    (107) expr -> . expr OR term
    (108) expr -> . term
    (109) term -> . term MUL factor
    (110) term -> . term DIV factor
    (111) term -> . term MOD factor
    (112) term -> . term AND factor
    (113) term -> . factor
    (114) factor -> . SYS_FUNCT
    (115) factor -> . SYS_FUNCT LP args_list RP
    (116) factor -> . NAME LP args_list RP
    (117) factor -> . NAME LB expression RB
    (118) factor -> . NAME
    (119) factor -> . const_value
    (120) factor -> . NOT factor
    (121) factor -> . MINUS factor
    (122) factor -> . LP expression RP
    (123) factor -> . NAME DOT NAME
    (13) const_value -> . INTEGER
    (14) const_value -> . REAL
    (15) const_value -> . CHAR
    (16) const_value -> . STRING
    (17) const_value -> . SYS_CON

    SYS_FUNCT       shift and go to state 68
    NAME            shift and go to state 70
    NOT             shift and go to state 72
    MINUS           shift and go to state 66
    LP              shift and go to state 69
    INTEGER         shift and go to state 73
    REAL            shift and go to state 74
    CHAR            shift and go to state 75
    STRING          shift and go to state 76
    SYS_CON         shift and go to state 77

    expression_list                shift and go to state 104
    expression                     shift and go to state 105
    expr                           shift and go to state 64
    term                           shift and go to state 65
    factor                         shift and go to state 67
    const_value                    shift and go to state 71

state 62

    (81) proc_stmt -> READ LP . factor RP
    (114) factor -> . SYS_FUNCT
    (115) factor -> . SYS_FUNCT LP args_list RP
    (116) factor -> . NAME LP args_list RP
    (117) factor -> . NAME LB expression RB
    (118) factor -> . NAME
    (119) factor -> . const_value
    (120) factor -> . NOT factor
    (121) factor -> . MINUS factor
    (122) factor -> . LP expression RP
    (123) factor -> . NAME DOT NAME
    (13) const_value -> . INTEGER
    (14) const_value -> . REAL
    (15) const_value -> . CHAR
    (16) const_value -> . STRING
    (17) const_value -> . SYS_CON

    SYS_FUNCT       shift and go to state 68
    NAME            shift and go to state 70
    NOT             shift and go to state 72
    MINUS           shift and go to state 66
    LP              shift and go to state 69
    INTEGER         shift and go to state 73
    REAL            shift and go to state 74
    CHAR            shift and go to state 75
    STRING          shift and go to state 76
    SYS_CON         shift and go to state 77

    factor                         shift and go to state 106
    const_value                    shift and go to state 71

state 63

    (82) if_stmt -> IF expression . THEN stmt else_clause
    (98) expression -> expression . GE expr
    (99) expression -> expression . GT expr
    (100) expression -> expression . LE expr
    (101) expression -> expression . LT expr
    (102) expression -> expression . EQUAL expr
    (103) expression -> expression . UNEQUAL expr

    THEN            shift and go to state 107
    GE              shift and go to state 108
    GT              shift and go to state 109
    LE              shift and go to state 110
    LT              shift and go to state 111
    EQUAL           shift and go to state 112
    UNEQUAL         shift and go to state 113


state 64

    (104) expression -> expr .
    (105) expr -> expr . PLUS term
    (106) expr -> expr . MINUS term
    (107) expr -> expr . OR term

    THEN            reduce using rule 104 (expression -> expr .)
    GE              reduce using rule 104 (expression -> expr .)
    GT              reduce using rule 104 (expression -> expr .)
    LE              reduce using rule 104 (expression -> expr .)
    LT              reduce using rule 104 (expression -> expr .)
    EQUAL           reduce using rule 104 (expression -> expr .)
    UNEQUAL         reduce using rule 104 (expression -> expr .)
    DO              reduce using rule 104 (expression -> expr .)
    OF              reduce using rule 104 (expression -> expr .)
    SEMI            reduce using rule 104 (expression -> expr .)
    ELSE            reduce using rule 104 (expression -> expr .)
    RB              reduce using rule 104 (expression -> expr .)
    RP              reduce using rule 104 (expression -> expr .)
    COMMA           reduce using rule 104 (expression -> expr .)
    TO              reduce using rule 104 (expression -> expr .)
    DOWNTO          reduce using rule 104 (expression -> expr .)
    PLUS            shift and go to state 114
    MINUS           shift and go to state 115
    OR              shift and go to state 116


state 65

    (108) expr -> term .
    (109) term -> term . MUL factor
    (110) term -> term . DIV factor
    (111) term -> term . MOD factor
    (112) term -> term . AND factor

    PLUS            reduce using rule 108 (expr -> term .)
    MINUS           reduce using rule 108 (expr -> term .)
    OR              reduce using rule 108 (expr -> term .)
    THEN            reduce using rule 108 (expr -> term .)
    GE              reduce using rule 108 (expr -> term .)
    GT              reduce using rule 108 (expr -> term .)
    LE              reduce using rule 108 (expr -> term .)
    LT              reduce using rule 108 (expr -> term .)
    EQUAL           reduce using rule 108 (expr -> term .)
    UNEQUAL         reduce using rule 108 (expr -> term .)
    DO              reduce using rule 108 (expr -> term .)
    OF              reduce using rule 108 (expr -> term .)
    SEMI            reduce using rule 108 (expr -> term .)
    ELSE            reduce using rule 108 (expr -> term .)
    RB              reduce using rule 108 (expr -> term .)
    RP              reduce using rule 108 (expr -> term .)
    COMMA           reduce using rule 108 (expr -> term .)
    TO              reduce using rule 108 (expr -> term .)
    DOWNTO          reduce using rule 108 (expr -> term .)
    MUL             shift and go to state 117
    DIV             shift and go to state 118
    MOD             shift and go to state 119
    AND             shift and go to state 120


state 66

    (121) factor -> MINUS . factor
    (114) factor -> . SYS_FUNCT
    (115) factor -> . SYS_FUNCT LP args_list RP
    (116) factor -> . NAME LP args_list RP
    (117) factor -> . NAME LB expression RB
    (118) factor -> . NAME
    (119) factor -> . const_value
    (120) factor -> . NOT factor
    (121) factor -> . MINUS factor
    (122) factor -> . LP expression RP
    (123) factor -> . NAME DOT NAME
    (13) const_value -> . INTEGER
    (14) const_value -> . REAL
    (15) const_value -> . CHAR
    (16) const_value -> . STRING
    (17) const_value -> . SYS_CON

    SYS_FUNCT       shift and go to state 68
    NAME            shift and go to state 70
    NOT             shift and go to state 72
    MINUS           shift and go to state 66
    LP              shift and go to state 69
    INTEGER         shift and go to state 73
    REAL            shift and go to state 74
    CHAR            shift and go to state 75
    STRING          shift and go to state 76
    SYS_CON         shift and go to state 77

    factor                         shift and go to state 121
    const_value                    shift and go to state 71

state 67

    (113) term -> factor .

    MUL             reduce using rule 113 (term -> factor .)
    DIV             reduce using rule 113 (term -> factor .)
    MOD             reduce using rule 113 (term -> factor .)
    AND             reduce using rule 113 (term -> factor .)
    PLUS            reduce using rule 113 (term -> factor .)
    MINUS           reduce using rule 113 (term -> factor .)
    OR              reduce using rule 113 (term -> factor .)
    THEN            reduce using rule 113 (term -> factor .)
    GE              reduce using rule 113 (term -> factor .)
    GT              reduce using rule 113 (term -> factor .)
    LE              reduce using rule 113 (term -> factor .)
    LT              reduce using rule 113 (term -> factor .)
    EQUAL           reduce using rule 113 (term -> factor .)
    UNEQUAL         reduce using rule 113 (term -> factor .)
    DO              reduce using rule 113 (term -> factor .)
    OF              reduce using rule 113 (term -> factor .)
    SEMI            reduce using rule 113 (term -> factor .)
    ELSE            reduce using rule 113 (term -> factor .)
    RB              reduce using rule 113 (term -> factor .)
    RP              reduce using rule 113 (term -> factor .)
    COMMA           reduce using rule 113 (term -> factor .)
    TO              reduce using rule 113 (term -> factor .)
    DOWNTO          reduce using rule 113 (term -> factor .)


state 68

    (114) factor -> SYS_FUNCT .
    (115) factor -> SYS_FUNCT . LP args_list RP

    MUL             reduce using rule 114 (factor -> SYS_FUNCT .)
    DIV             reduce using rule 114 (factor -> SYS_FUNCT .)
    MOD             reduce using rule 114 (factor -> SYS_FUNCT .)
    AND             reduce using rule 114 (factor -> SYS_FUNCT .)
    PLUS            reduce using rule 114 (factor -> SYS_FUNCT .)
    MINUS           reduce using rule 114 (factor -> SYS_FUNCT .)
    OR              reduce using rule 114 (factor -> SYS_FUNCT .)
    THEN            reduce using rule 114 (factor -> SYS_FUNCT .)
    GE              reduce using rule 114 (factor -> SYS_FUNCT .)
    GT              reduce using rule 114 (factor -> SYS_FUNCT .)
    LE              reduce using rule 114 (factor -> SYS_FUNCT .)
    LT              reduce using rule 114 (factor -> SYS_FUNCT .)
    EQUAL           reduce using rule 114 (factor -> SYS_FUNCT .)
    UNEQUAL         reduce using rule 114 (factor -> SYS_FUNCT .)
    DO              reduce using rule 114 (factor -> SYS_FUNCT .)
    OF              reduce using rule 114 (factor -> SYS_FUNCT .)
    SEMI            reduce using rule 114 (factor -> SYS_FUNCT .)
    ELSE            reduce using rule 114 (factor -> SYS_FUNCT .)
    RB              reduce using rule 114 (factor -> SYS_FUNCT .)
    RP              reduce using rule 114 (factor -> SYS_FUNCT .)
    COMMA           reduce using rule 114 (factor -> SYS_FUNCT .)
    TO              reduce using rule 114 (factor -> SYS_FUNCT .)
    DOWNTO          reduce using rule 114 (factor -> SYS_FUNCT .)
    LP              shift and go to state 122


state 69

    (122) factor -> LP . expression RP
    (98) expression -> . expression GE expr
    (99) expression -> . expression GT expr
    (100) expression -> . expression LE expr
    (101) expression -> . expression LT expr
    (102) expression -> . expression EQUAL expr
    (103) expression -> . expression UNEQUAL expr
    (104) expression -> . expr
    (105) expr -> . expr PLUS term
    (106) expr -> . expr MINUS term
    (107) expr -> . expr OR term
    (108) expr -> . term
    (109) term -> . term MUL factor
    (110) term -> . term DIV factor
    (111) term -> . term MOD factor
    (112) term -> . term AND factor
    (113) term -> . factor
    (114) factor -> . SYS_FUNCT
    (115) factor -> . SYS_FUNCT LP args_list RP
    (116) factor -> . NAME LP args_list RP
    (117) factor -> . NAME LB expression RB
    (118) factor -> . NAME
    (119) factor -> . const_value
    (120) factor -> . NOT factor
    (121) factor -> . MINUS factor
    (122) factor -> . LP expression RP
    (123) factor -> . NAME DOT NAME
    (13) const_value -> . INTEGER
    (14) const_value -> . REAL
    (15) const_value -> . CHAR
    (16) const_value -> . STRING
    (17) const_value -> . SYS_CON

    SYS_FUNCT       shift and go to state 68
    NAME            shift and go to state 70
    NOT             shift and go to state 72
    MINUS           shift and go to state 66
    LP              shift and go to state 69
    INTEGER         shift and go to state 73
    REAL            shift and go to state 74
    CHAR            shift and go to state 75
    STRING          shift and go to state 76
    SYS_CON         shift and go to state 77

    expression                     shift and go to state 123
    expr                           shift and go to state 64
    term                           shift and go to state 65
    factor                         shift and go to state 67
    const_value                    shift and go to state 71

state 70

    (116) factor -> NAME . LP args_list RP
    (117) factor -> NAME . LB expression RB
    (118) factor -> NAME .
    (123) factor -> NAME . DOT NAME

    LP              shift and go to state 124
    LB              shift and go to state 125
    MUL             reduce using rule 118 (factor -> NAME .)
    DIV             reduce using rule 118 (factor -> NAME .)
    MOD             reduce using rule 118 (factor -> NAME .)
    AND             reduce using rule 118 (factor -> NAME .)
    PLUS            reduce using rule 118 (factor -> NAME .)
    MINUS           reduce using rule 118 (factor -> NAME .)
    OR              reduce using rule 118 (factor -> NAME .)
    THEN            reduce using rule 118 (factor -> NAME .)
    GE              reduce using rule 118 (factor -> NAME .)
    GT              reduce using rule 118 (factor -> NAME .)
    LE              reduce using rule 118 (factor -> NAME .)
    LT              reduce using rule 118 (factor -> NAME .)
    EQUAL           reduce using rule 118 (factor -> NAME .)
    UNEQUAL         reduce using rule 118 (factor -> NAME .)
    DO              reduce using rule 118 (factor -> NAME .)
    OF              reduce using rule 118 (factor -> NAME .)
    SEMI            reduce using rule 118 (factor -> NAME .)
    ELSE            reduce using rule 118 (factor -> NAME .)
    RB              reduce using rule 118 (factor -> NAME .)
    RP              reduce using rule 118 (factor -> NAME .)
    COMMA           reduce using rule 118 (factor -> NAME .)
    TO              reduce using rule 118 (factor -> NAME .)
    DOWNTO          reduce using rule 118 (factor -> NAME .)
    DOT             shift and go to state 126


state 71

    (119) factor -> const_value .

    MUL             reduce using rule 119 (factor -> const_value .)
    DIV             reduce using rule 119 (factor -> const_value .)
    MOD             reduce using rule 119 (factor -> const_value .)
    AND             reduce using rule 119 (factor -> const_value .)
    PLUS            reduce using rule 119 (factor -> const_value .)
    MINUS           reduce using rule 119 (factor -> const_value .)
    OR              reduce using rule 119 (factor -> const_value .)
    THEN            reduce using rule 119 (factor -> const_value .)
    GE              reduce using rule 119 (factor -> const_value .)
    GT              reduce using rule 119 (factor -> const_value .)
    LE              reduce using rule 119 (factor -> const_value .)
    LT              reduce using rule 119 (factor -> const_value .)
    EQUAL           reduce using rule 119 (factor -> const_value .)
    UNEQUAL         reduce using rule 119 (factor -> const_value .)
    DO              reduce using rule 119 (factor -> const_value .)
    OF              reduce using rule 119 (factor -> const_value .)
    SEMI            reduce using rule 119 (factor -> const_value .)
    ELSE            reduce using rule 119 (factor -> const_value .)
    RB              reduce using rule 119 (factor -> const_value .)
    RP              reduce using rule 119 (factor -> const_value .)
    COMMA           reduce using rule 119 (factor -> const_value .)
    TO              reduce using rule 119 (factor -> const_value .)
    DOWNTO          reduce using rule 119 (factor -> const_value .)


state 72

    (120) factor -> NOT . factor
    (114) factor -> . SYS_FUNCT
    (115) factor -> . SYS_FUNCT LP args_list RP
    (116) factor -> . NAME LP args_list RP
    (117) factor -> . NAME LB expression RB
    (118) factor -> . NAME
    (119) factor -> . const_value
    (120) factor -> . NOT factor
    (121) factor -> . MINUS factor
    (122) factor -> . LP expression RP
    (123) factor -> . NAME DOT NAME
    (13) const_value -> . INTEGER
    (14) const_value -> . REAL
    (15) const_value -> . CHAR
    (16) const_value -> . STRING
    (17) const_value -> . SYS_CON

    SYS_FUNCT       shift and go to state 68
    NAME            shift and go to state 70
    NOT             shift and go to state 72
    MINUS           shift and go to state 66
    LP              shift and go to state 69
    INTEGER         shift and go to state 73
    REAL            shift and go to state 74
    CHAR            shift and go to state 75
    STRING          shift and go to state 76
    SYS_CON         shift and go to state 77

    factor                         shift and go to state 127
    const_value                    shift and go to state 71

state 73

    (13) const_value -> INTEGER .

    MUL             reduce using rule 13 (const_value -> INTEGER .)
    DIV             reduce using rule 13 (const_value -> INTEGER .)
    MOD             reduce using rule 13 (const_value -> INTEGER .)
    AND             reduce using rule 13 (const_value -> INTEGER .)
    PLUS            reduce using rule 13 (const_value -> INTEGER .)
    MINUS           reduce using rule 13 (const_value -> INTEGER .)
    OR              reduce using rule 13 (const_value -> INTEGER .)
    THEN            reduce using rule 13 (const_value -> INTEGER .)
    GE              reduce using rule 13 (const_value -> INTEGER .)
    GT              reduce using rule 13 (const_value -> INTEGER .)
    LE              reduce using rule 13 (const_value -> INTEGER .)
    LT              reduce using rule 13 (const_value -> INTEGER .)
    EQUAL           reduce using rule 13 (const_value -> INTEGER .)
    UNEQUAL         reduce using rule 13 (const_value -> INTEGER .)
    DO              reduce using rule 13 (const_value -> INTEGER .)
    OF              reduce using rule 13 (const_value -> INTEGER .)
    SEMI            reduce using rule 13 (const_value -> INTEGER .)
    ELSE            reduce using rule 13 (const_value -> INTEGER .)
    RB              reduce using rule 13 (const_value -> INTEGER .)
    RP              reduce using rule 13 (const_value -> INTEGER .)
    COMMA           reduce using rule 13 (const_value -> INTEGER .)
    TO              reduce using rule 13 (const_value -> INTEGER .)
    DOWNTO          reduce using rule 13 (const_value -> INTEGER .)
    DOTDOT          reduce using rule 13 (const_value -> INTEGER .)
    COLON           reduce using rule 13 (const_value -> INTEGER .)


state 74

    (14) const_value -> REAL .

    MUL             reduce using rule 14 (const_value -> REAL .)
    DIV             reduce using rule 14 (const_value -> REAL .)
    MOD             reduce using rule 14 (const_value -> REAL .)
    AND             reduce using rule 14 (const_value -> REAL .)
    PLUS            reduce using rule 14 (const_value -> REAL .)
    MINUS           reduce using rule 14 (const_value -> REAL .)
    OR              reduce using rule 14 (const_value -> REAL .)
    THEN            reduce using rule 14 (const_value -> REAL .)
    GE              reduce using rule 14 (const_value -> REAL .)
    GT              reduce using rule 14 (const_value -> REAL .)
    LE              reduce using rule 14 (const_value -> REAL .)
    LT              reduce using rule 14 (const_value -> REAL .)
    EQUAL           reduce using rule 14 (const_value -> REAL .)
    UNEQUAL         reduce using rule 14 (const_value -> REAL .)
    DO              reduce using rule 14 (const_value -> REAL .)
    OF              reduce using rule 14 (const_value -> REAL .)
    SEMI            reduce using rule 14 (const_value -> REAL .)
    ELSE            reduce using rule 14 (const_value -> REAL .)
    RB              reduce using rule 14 (const_value -> REAL .)
    RP              reduce using rule 14 (const_value -> REAL .)
    COMMA           reduce using rule 14 (const_value -> REAL .)
    TO              reduce using rule 14 (const_value -> REAL .)
    DOWNTO          reduce using rule 14 (const_value -> REAL .)
    DOTDOT          reduce using rule 14 (const_value -> REAL .)
    COLON           reduce using rule 14 (const_value -> REAL .)


state 75

    (15) const_value -> CHAR .

    MUL             reduce using rule 15 (const_value -> CHAR .)
    DIV             reduce using rule 15 (const_value -> CHAR .)
    MOD             reduce using rule 15 (const_value -> CHAR .)
    AND             reduce using rule 15 (const_value -> CHAR .)
    PLUS            reduce using rule 15 (const_value -> CHAR .)
    MINUS           reduce using rule 15 (const_value -> CHAR .)
    OR              reduce using rule 15 (const_value -> CHAR .)
    THEN            reduce using rule 15 (const_value -> CHAR .)
    GE              reduce using rule 15 (const_value -> CHAR .)
    GT              reduce using rule 15 (const_value -> CHAR .)
    LE              reduce using rule 15 (const_value -> CHAR .)
    LT              reduce using rule 15 (const_value -> CHAR .)
    EQUAL           reduce using rule 15 (const_value -> CHAR .)
    UNEQUAL         reduce using rule 15 (const_value -> CHAR .)
    DO              reduce using rule 15 (const_value -> CHAR .)
    OF              reduce using rule 15 (const_value -> CHAR .)
    SEMI            reduce using rule 15 (const_value -> CHAR .)
    ELSE            reduce using rule 15 (const_value -> CHAR .)
    RB              reduce using rule 15 (const_value -> CHAR .)
    RP              reduce using rule 15 (const_value -> CHAR .)
    COMMA           reduce using rule 15 (const_value -> CHAR .)
    TO              reduce using rule 15 (const_value -> CHAR .)
    DOWNTO          reduce using rule 15 (const_value -> CHAR .)
    DOTDOT          reduce using rule 15 (const_value -> CHAR .)
    COLON           reduce using rule 15 (const_value -> CHAR .)


state 76

    (16) const_value -> STRING .

    MUL             reduce using rule 16 (const_value -> STRING .)
    DIV             reduce using rule 16 (const_value -> STRING .)
    MOD             reduce using rule 16 (const_value -> STRING .)
    AND             reduce using rule 16 (const_value -> STRING .)
    PLUS            reduce using rule 16 (const_value -> STRING .)
    MINUS           reduce using rule 16 (const_value -> STRING .)
    OR              reduce using rule 16 (const_value -> STRING .)
    THEN            reduce using rule 16 (const_value -> STRING .)
    GE              reduce using rule 16 (const_value -> STRING .)
    GT              reduce using rule 16 (const_value -> STRING .)
    LE              reduce using rule 16 (const_value -> STRING .)
    LT              reduce using rule 16 (const_value -> STRING .)
    EQUAL           reduce using rule 16 (const_value -> STRING .)
    UNEQUAL         reduce using rule 16 (const_value -> STRING .)
    DO              reduce using rule 16 (const_value -> STRING .)
    OF              reduce using rule 16 (const_value -> STRING .)
    SEMI            reduce using rule 16 (const_value -> STRING .)
    ELSE            reduce using rule 16 (const_value -> STRING .)
    RB              reduce using rule 16 (const_value -> STRING .)
    RP              reduce using rule 16 (const_value -> STRING .)
    COMMA           reduce using rule 16 (const_value -> STRING .)
    TO              reduce using rule 16 (const_value -> STRING .)
    DOWNTO          reduce using rule 16 (const_value -> STRING .)
    DOTDOT          reduce using rule 16 (const_value -> STRING .)
    COLON           reduce using rule 16 (const_value -> STRING .)


state 77

    (17) const_value -> SYS_CON .

    MUL             reduce using rule 17 (const_value -> SYS_CON .)
    DIV             reduce using rule 17 (const_value -> SYS_CON .)
    MOD             reduce using rule 17 (const_value -> SYS_CON .)
    AND             reduce using rule 17 (const_value -> SYS_CON .)
    PLUS            reduce using rule 17 (const_value -> SYS_CON .)
    MINUS           reduce using rule 17 (const_value -> SYS_CON .)
    OR              reduce using rule 17 (const_value -> SYS_CON .)
    THEN            reduce using rule 17 (const_value -> SYS_CON .)
    GE              reduce using rule 17 (const_value -> SYS_CON .)
    GT              reduce using rule 17 (const_value -> SYS_CON .)
    LE              reduce using rule 17 (const_value -> SYS_CON .)
    LT              reduce using rule 17 (const_value -> SYS_CON .)
    EQUAL           reduce using rule 17 (const_value -> SYS_CON .)
    UNEQUAL         reduce using rule 17 (const_value -> SYS_CON .)
    DO              reduce using rule 17 (const_value -> SYS_CON .)
    OF              reduce using rule 17 (const_value -> SYS_CON .)
    SEMI            reduce using rule 17 (const_value -> SYS_CON .)
    ELSE            reduce using rule 17 (const_value -> SYS_CON .)
    RB              reduce using rule 17 (const_value -> SYS_CON .)
    RP              reduce using rule 17 (const_value -> SYS_CON .)
    COMMA           reduce using rule 17 (const_value -> SYS_CON .)
    TO              reduce using rule 17 (const_value -> SYS_CON .)
    DOWNTO          reduce using rule 17 (const_value -> SYS_CON .)
    DOTDOT          reduce using rule 17 (const_value -> SYS_CON .)
    COLON           reduce using rule 17 (const_value -> SYS_CON .)


state 78

    (85) repeat_stmt -> REPEAT stmt_list . UNTIL expression
    (61) stmt_list -> stmt_list . stmt SEMI
    (63) stmt -> . INTEGER COLON non_label_stmt
    (64) stmt -> . non_label_stmt
    (65) non_label_stmt -> . assign_stmt
    (66) non_label_stmt -> . proc_stmt
    (67) non_label_stmt -> . compound_stmt
    (68) non_label_stmt -> . if_stmt
    (69) non_label_stmt -> . repeat_stmt
    (70) non_label_stmt -> . while_stmt
    (71) non_label_stmt -> . for_stmt
    (72) non_label_stmt -> . case_stmt
    (73) non_label_stmt -> . goto_stmt
    (74) assign_stmt -> . NAME ASSIGN expression
    (75) assign_stmt -> . NAME LB expression RB ASSIGN expression
    (76) assign_stmt -> . NAME DOT NAME ASSIGN expression
    (77) proc_stmt -> . NAME
    (78) proc_stmt -> . NAME LP args_list RP
    (79) proc_stmt -> . SYS_PROC
    (80) proc_stmt -> . SYS_PROC LP expression_list RP
    (81) proc_stmt -> . READ LP factor RP
    (60) compound_stmt -> . BEGIN stmt_list END
    (82) if_stmt -> . IF expression THEN stmt else_clause
    (85) repeat_stmt -> . REPEAT stmt_list UNTIL expression
    (86) while_stmt -> . WHILE expression DO stmt
    (87) for_stmt -> . FOR NAME ASSIGN expression direction expression DO stmt
    (90) case_stmt -> . CASE expression OF case_expr_list END
    (95) goto_stmt -> . GOTO INTEGER

    UNTIL           shift and go to state 128
    INTEGER         shift and go to state 27
    NAME            shift and go to state 38
    SYS_PROC        shift and go to state 39
    READ            shift and go to state 40
    BEGIN           shift and go to state 12
    IF              shift and go to state 41
    REPEAT          shift and go to state 42
    WHILE           shift and go to state 43
    FOR             shift and go to state 44
    CASE            shift and go to state 45
    GOTO            shift and go to state 46

    stmt                           shift and go to state 26
    non_label_stmt                 shift and go to state 28
    assign_stmt                    shift and go to state 29
    proc_stmt                      shift and go to state 30
    compound_stmt                  shift and go to state 31
    if_stmt                        shift and go to state 32
    repeat_stmt                    shift and go to state 33
    while_stmt                     shift and go to state 34
    for_stmt                       shift and go to state 35
    case_stmt                      shift and go to state 36
    goto_stmt                      shift and go to state 37

state 79

    (86) while_stmt -> WHILE expression . DO stmt
    (98) expression -> expression . GE expr
    (99) expression -> expression . GT expr
    (100) expression -> expression . LE expr
    (101) expression -> expression . LT expr
    (102) expression -> expression . EQUAL expr
    (103) expression -> expression . UNEQUAL expr

    DO              shift and go to state 129
    GE              shift and go to state 108
    GT              shift and go to state 109
    LE              shift and go to state 110
    LT              shift and go to state 111
    EQUAL           shift and go to state 112
    UNEQUAL         shift and go to state 113


state 80

    (87) for_stmt -> FOR NAME . ASSIGN expression direction expression DO stmt

    ASSIGN          shift and go to state 130


state 81

    (90) case_stmt -> CASE expression . OF case_expr_list END
    (98) expression -> expression . GE expr
    (99) expression -> expression . GT expr
    (100) expression -> expression . LE expr
    (101) expression -> expression . LT expr
    (102) expression -> expression . EQUAL expr
    (103) expression -> expression . UNEQUAL expr

    OF              shift and go to state 131
    GE              shift and go to state 108
    GT              shift and go to state 109
    LE              shift and go to state 110
    LT              shift and go to state 111
    EQUAL           shift and go to state 112
    UNEQUAL         shift and go to state 113


state 82

    (95) goto_stmt -> GOTO INTEGER .

    SEMI            reduce using rule 95 (goto_stmt -> GOTO INTEGER .)
    ELSE            reduce using rule 95 (goto_stmt -> GOTO INTEGER .)


state 83

    (5) routine_head -> label_part const_part type_part var_part routine_part .
    (42) routine_part -> routine_part . function_decl
    (43) routine_part -> routine_part . procedure_decl
    (47) function_decl -> . function_head SEMI sub_routine SEMI
    (49) procedure_decl -> . procedure_head SEMI sub_routine SEMI
    (48) function_head -> . FUNCTION NAME parameters COLON simple_type_decl
    (50) procedure_head -> . PROCEDURE NAME parameters

    BEGIN           reduce using rule 5 (routine_head -> label_part const_part type_part var_part routine_part .)
    FUNCTION        shift and go to state 89
    PROCEDURE       shift and go to state 90

    function_decl                  shift and go to state 132
    procedure_decl                 shift and go to state 133
    function_head                  shift and go to state 87
    procedure_head                 shift and go to state 88

state 84

    (44) routine_part -> function_decl .

    FUNCTION        reduce using rule 44 (routine_part -> function_decl .)
    PROCEDURE       reduce using rule 44 (routine_part -> function_decl .)
    BEGIN           reduce using rule 44 (routine_part -> function_decl .)


state 85

    (45) routine_part -> procedure_decl .

    FUNCTION        reduce using rule 45 (routine_part -> procedure_decl .)
    PROCEDURE       reduce using rule 45 (routine_part -> procedure_decl .)
    BEGIN           reduce using rule 45 (routine_part -> procedure_decl .)


state 86

    (46) routine_part -> empty .

    FUNCTION        reduce using rule 46 (routine_part -> empty .)
    PROCEDURE       reduce using rule 46 (routine_part -> empty .)
    BEGIN           reduce using rule 46 (routine_part -> empty .)


state 87

    (47) function_decl -> function_head . SEMI sub_routine SEMI

    SEMI            shift and go to state 134


state 88

    (49) procedure_decl -> procedure_head . SEMI sub_routine SEMI

    SEMI            shift and go to state 135


state 89

    (48) function_head -> FUNCTION . NAME parameters COLON simple_type_decl

    NAME            shift and go to state 136


state 90

    (50) procedure_head -> PROCEDURE . NAME parameters

    NAME            shift and go to state 137


state 91

    (37) var_part -> VAR var_decl_list .
    (39) var_decl_list -> var_decl_list . var_decl
    (41) var_decl -> . name_list COLON type_decl SEMI
    (35) name_list -> . name_list COMMA NAME
    (36) name_list -> . NAME

    FUNCTION        reduce using rule 37 (var_part -> VAR var_decl_list .)
    PROCEDURE       reduce using rule 37 (var_part -> VAR var_decl_list .)
    BEGIN           reduce using rule 37 (var_part -> VAR var_decl_list .)
    NAME            shift and go to state 94

    var_decl                       shift and go to state 138
    name_list                      shift and go to state 93

state 92

    (40) var_decl_list -> var_decl .

    NAME            reduce using rule 40 (var_decl_list -> var_decl .)
    FUNCTION        reduce using rule 40 (var_decl_list -> var_decl .)
    PROCEDURE       reduce using rule 40 (var_decl_list -> var_decl .)
    BEGIN           reduce using rule 40 (var_decl_list -> var_decl .)


state 93

    (41) var_decl -> name_list . COLON type_decl SEMI
    (35) name_list -> name_list . COMMA NAME

    COLON           shift and go to state 139
    COMMA           shift and go to state 140


state 94

    (36) name_list -> NAME .

    COLON           reduce using rule 36 (name_list -> NAME .)
    COMMA           reduce using rule 36 (name_list -> NAME .)
    RP              reduce using rule 36 (name_list -> NAME .)


state 95

    (20) type_decl_list -> type_decl_list type_definition .

    NAME            reduce using rule 20 (type_decl_list -> type_decl_list type_definition .)
    VAR             reduce using rule 20 (type_decl_list -> type_decl_list type_definition .)
    FUNCTION        reduce using rule 20 (type_decl_list -> type_decl_list type_definition .)
    PROCEDURE       reduce using rule 20 (type_decl_list -> type_decl_list type_definition .)
    BEGIN           reduce using rule 20 (type_decl_list -> type_decl_list type_definition .)


state 96

    (22) type_definition -> NAME EQUAL . type_decl SEMI
    (23) type_decl -> . simple_type_decl
    (24) type_decl -> . array_type_decl
    (25) type_decl -> . record_type_decl
    (26) simple_type_decl -> . SYS_TYPE
    (27) simple_type_decl -> . NAME
    (28) simple_type_decl -> . LP name_list RP
    (29) simple_type_decl -> . const_value DOTDOT const_value
    (30) array_type_decl -> . ARRAY LB simple_type_decl RB OF type_decl
    (31) record_type_decl -> . RECORD field_decl_list END
    (13) const_value -> . INTEGER
    (14) const_value -> . REAL
    (15) const_value -> . CHAR
    (16) const_value -> . STRING
    (17) const_value -> . SYS_CON

    SYS_TYPE        shift and go to state 146
    NAME            shift and go to state 141
    LP              shift and go to state 147
    ARRAY           shift and go to state 149
    RECORD          shift and go to state 150
    INTEGER         shift and go to state 73
    REAL            shift and go to state 74
    CHAR            shift and go to state 75
    STRING          shift and go to state 76
    SYS_CON         shift and go to state 77

    type_decl                      shift and go to state 142
    simple_type_decl               shift and go to state 143
    array_type_decl                shift and go to state 144
    record_type_decl               shift and go to state 145
    const_value                    shift and go to state 148

state 97

    (12) const_expr -> NAME EQUAL const_value . SEMI

    SEMI            shift and go to state 151


state 98

    (63) stmt -> INTEGER COLON non_label_stmt .

    SEMI            reduce using rule 63 (stmt -> INTEGER COLON non_label_stmt .)
    ELSE            reduce using rule 63 (stmt -> INTEGER COLON non_label_stmt .)


state 99

    (74) assign_stmt -> NAME ASSIGN expression .
    (98) expression -> expression . GE expr
    (99) expression -> expression . GT expr
    (100) expression -> expression . LE expr
    (101) expression -> expression . LT expr
    (102) expression -> expression . EQUAL expr
    (103) expression -> expression . UNEQUAL expr

    SEMI            reduce using rule 74 (assign_stmt -> NAME ASSIGN expression .)
    ELSE            reduce using rule 74 (assign_stmt -> NAME ASSIGN expression .)
    GE              shift and go to state 108
    GT              shift and go to state 109
    LE              shift and go to state 110
    LT              shift and go to state 111
    EQUAL           shift and go to state 112
    UNEQUAL         shift and go to state 113


state 100

    (75) assign_stmt -> NAME LB expression . RB ASSIGN expression
    (98) expression -> expression . GE expr
    (99) expression -> expression . GT expr
    (100) expression -> expression . LE expr
    (101) expression -> expression . LT expr
    (102) expression -> expression . EQUAL expr
    (103) expression -> expression . UNEQUAL expr

    RB              shift and go to state 152
    GE              shift and go to state 108
    GT              shift and go to state 109
    LE              shift and go to state 110
    LT              shift and go to state 111
    EQUAL           shift and go to state 112
    UNEQUAL         shift and go to state 113


state 101

    (76) assign_stmt -> NAME DOT NAME . ASSIGN expression

    ASSIGN          shift and go to state 153


state 102

    (78) proc_stmt -> NAME LP args_list . RP
    (124) args_list -> args_list . COMMA expression

    RP              shift and go to state 154
    COMMA           shift and go to state 155


state 103

    (125) args_list -> expression .
    (98) expression -> expression . GE expr
    (99) expression -> expression . GT expr
    (100) expression -> expression . LE expr
    (101) expression -> expression . LT expr
    (102) expression -> expression . EQUAL expr
    (103) expression -> expression . UNEQUAL expr

    RP              reduce using rule 125 (args_list -> expression .)
    COMMA           reduce using rule 125 (args_list -> expression .)
    GE              shift and go to state 108
    GT              shift and go to state 109
    LE              shift and go to state 110
    LT              shift and go to state 111
    EQUAL           shift and go to state 112
    UNEQUAL         shift and go to state 113


state 104

    (80) proc_stmt -> SYS_PROC LP expression_list . RP
    (96) expression_list -> expression_list . COMMA expression

    RP              shift and go to state 156
    COMMA           shift and go to state 157


state 105

    (97) expression_list -> expression .
    (98) expression -> expression . GE expr
    (99) expression -> expression . GT expr
    (100) expression -> expression . LE expr
    (101) expression -> expression . LT expr
    (102) expression -> expression . EQUAL expr
    (103) expression -> expression . UNEQUAL expr

    RP              reduce using rule 97 (expression_list -> expression .)
    COMMA           reduce using rule 97 (expression_list -> expression .)
    GE              shift and go to state 108
    GT              shift and go to state 109
    LE              shift and go to state 110
    LT              shift and go to state 111
    EQUAL           shift and go to state 112
    UNEQUAL         shift and go to state 113


state 106

    (81) proc_stmt -> READ LP factor . RP

    RP              shift and go to state 158


state 107

    (82) if_stmt -> IF expression THEN . stmt else_clause
    (63) stmt -> . INTEGER COLON non_label_stmt
    (64) stmt -> . non_label_stmt
    (65) non_label_stmt -> . assign_stmt
    (66) non_label_stmt -> . proc_stmt
    (67) non_label_stmt -> . compound_stmt
    (68) non_label_stmt -> . if_stmt
    (69) non_label_stmt -> . repeat_stmt
    (70) non_label_stmt -> . while_stmt
    (71) non_label_stmt -> . for_stmt
    (72) non_label_stmt -> . case_stmt
    (73) non_label_stmt -> . goto_stmt
    (74) assign_stmt -> . NAME ASSIGN expression
    (75) assign_stmt -> . NAME LB expression RB ASSIGN expression
    (76) assign_stmt -> . NAME DOT NAME ASSIGN expression
    (77) proc_stmt -> . NAME
    (78) proc_stmt -> . NAME LP args_list RP
    (79) proc_stmt -> . SYS_PROC
    (80) proc_stmt -> . SYS_PROC LP expression_list RP
    (81) proc_stmt -> . READ LP factor RP
    (60) compound_stmt -> . BEGIN stmt_list END
    (82) if_stmt -> . IF expression THEN stmt else_clause
    (85) repeat_stmt -> . REPEAT stmt_list UNTIL expression
    (86) while_stmt -> . WHILE expression DO stmt
    (87) for_stmt -> . FOR NAME ASSIGN expression direction expression DO stmt
    (90) case_stmt -> . CASE expression OF case_expr_list END
    (95) goto_stmt -> . GOTO INTEGER

    INTEGER         shift and go to state 27
    NAME            shift and go to state 38
    SYS_PROC        shift and go to state 39
    READ            shift and go to state 40
    BEGIN           shift and go to state 12
    IF              shift and go to state 41
    REPEAT          shift and go to state 42
    WHILE           shift and go to state 43
    FOR             shift and go to state 44
    CASE            shift and go to state 45
    GOTO            shift and go to state 46

    stmt                           shift and go to state 159
    non_label_stmt                 shift and go to state 28
    assign_stmt                    shift and go to state 29
    proc_stmt                      shift and go to state 30
    compound_stmt                  shift and go to state 31
    if_stmt                        shift and go to state 32
    repeat_stmt                    shift and go to state 33
    while_stmt                     shift and go to state 34
    for_stmt                       shift and go to state 35
    case_stmt                      shift and go to state 36
    goto_stmt                      shift and go to state 37

state 108

    (98) expression -> expression GE . expr
    (105) expr -> . expr PLUS term
    (106) expr -> . expr MINUS term
    (107) expr -> . expr OR term
    (108) expr -> . term
    (109) term -> . term MUL factor
    (110) term -> . term DIV factor
    (111) term -> . term MOD factor
    (112) term -> . term AND factor
    (113) term -> . factor
    (114) factor -> . SYS_FUNCT
    (115) factor -> . SYS_FUNCT LP args_list RP
    (116) factor -> . NAME LP args_list RP
    (117) factor -> . NAME LB expression RB
    (118) factor -> . NAME
    (119) factor -> . const_value
    (120) factor -> . NOT factor
    (121) factor -> . MINUS factor
    (122) factor -> . LP expression RP
    (123) factor -> . NAME DOT NAME
    (13) const_value -> . INTEGER
    (14) const_value -> . REAL
    (15) const_value -> . CHAR
    (16) const_value -> . STRING
    (17) const_value -> . SYS_CON

    SYS_FUNCT       shift and go to state 68
    NAME            shift and go to state 70
    NOT             shift and go to state 72
    MINUS           shift and go to state 66
    LP              shift and go to state 69
    INTEGER         shift and go to state 73
    REAL            shift and go to state 74
    CHAR            shift and go to state 75
    STRING          shift and go to state 76
    SYS_CON         shift and go to state 77

    expr                           shift and go to state 160
    term                           shift and go to state 65
    factor                         shift and go to state 67
    const_value                    shift and go to state 71

state 109

    (99) expression -> expression GT . expr
    (105) expr -> . expr PLUS term
    (106) expr -> . expr MINUS term
    (107) expr -> . expr OR term
    (108) expr -> . term
    (109) term -> . term MUL factor
    (110) term -> . term DIV factor
    (111) term -> . term MOD factor
    (112) term -> . term AND factor
    (113) term -> . factor
    (114) factor -> . SYS_FUNCT
    (115) factor -> . SYS_FUNCT LP args_list RP
    (116) factor -> . NAME LP args_list RP
    (117) factor -> . NAME LB expression RB
    (118) factor -> . NAME
    (119) factor -> . const_value
    (120) factor -> . NOT factor
    (121) factor -> . MINUS factor
    (122) factor -> . LP expression RP
    (123) factor -> . NAME DOT NAME
    (13) const_value -> . INTEGER
    (14) const_value -> . REAL
    (15) const_value -> . CHAR
    (16) const_value -> . STRING
    (17) const_value -> . SYS_CON

    SYS_FUNCT       shift and go to state 68
    NAME            shift and go to state 70
    NOT             shift and go to state 72
    MINUS           shift and go to state 66
    LP              shift and go to state 69
    INTEGER         shift and go to state 73
    REAL            shift and go to state 74
    CHAR            shift and go to state 75
    STRING          shift and go to state 76
    SYS_CON         shift and go to state 77

    expr                           shift and go to state 161
    term                           shift and go to state 65
    factor                         shift and go to state 67
    const_value                    shift and go to state 71

state 110

    (100) expression -> expression LE . expr
    (105) expr -> . expr PLUS term
    (106) expr -> . expr MINUS term
    (107) expr -> . expr OR term
    (108) expr -> . term
    (109) term -> . term MUL factor
    (110) term -> . term DIV factor
    (111) term -> . term MOD factor
    (112) term -> . term AND factor
    (113) term -> . factor
    (114) factor -> . SYS_FUNCT
    (115) factor -> . SYS_FUNCT LP args_list RP
    (116) factor -> . NAME LP args_list RP
    (117) factor -> . NAME LB expression RB
    (118) factor -> . NAME
    (119) factor -> . const_value
    (120) factor -> . NOT factor
    (121) factor -> . MINUS factor
    (122) factor -> . LP expression RP
    (123) factor -> . NAME DOT NAME
    (13) const_value -> . INTEGER
    (14) const_value -> . REAL
    (15) const_value -> . CHAR
    (16) const_value -> . STRING
    (17) const_value -> . SYS_CON

    SYS_FUNCT       shift and go to state 68
    NAME            shift and go to state 70
    NOT             shift and go to state 72
    MINUS           shift and go to state 66
    LP              shift and go to state 69
    INTEGER         shift and go to state 73
    REAL            shift and go to state 74
    CHAR            shift and go to state 75
    STRING          shift and go to state 76
    SYS_CON         shift and go to state 77

    expr                           shift and go to state 162
    term                           shift and go to state 65
    factor                         shift and go to state 67
    const_value                    shift and go to state 71

state 111

    (101) expression -> expression LT . expr
    (105) expr -> . expr PLUS term
    (106) expr -> . expr MINUS term
    (107) expr -> . expr OR term
    (108) expr -> . term
    (109) term -> . term MUL factor
    (110) term -> . term DIV factor
    (111) term -> . term MOD factor
    (112) term -> . term AND factor
    (113) term -> . factor
    (114) factor -> . SYS_FUNCT
    (115) factor -> . SYS_FUNCT LP args_list RP
    (116) factor -> . NAME LP args_list RP
    (117) factor -> . NAME LB expression RB
    (118) factor -> . NAME
    (119) factor -> . const_value
    (120) factor -> . NOT factor
    (121) factor -> . MINUS factor
    (122) factor -> . LP expression RP
    (123) factor -> . NAME DOT NAME
    (13) const_value -> . INTEGER
    (14) const_value -> . REAL
    (15) const_value -> . CHAR
    (16) const_value -> . STRING
    (17) const_value -> . SYS_CON

    SYS_FUNCT       shift and go to state 68
    NAME            shift and go to state 70
    NOT             shift and go to state 72
    MINUS           shift and go to state 66
    LP              shift and go to state 69
    INTEGER         shift and go to state 73
    REAL            shift and go to state 74
    CHAR            shift and go to state 75
    STRING          shift and go to state 76
    SYS_CON         shift and go to state 77

    expr                           shift and go to state 163
    term                           shift and go to state 65
    factor                         shift and go to state 67
    const_value                    shift and go to state 71

state 112

    (102) expression -> expression EQUAL . expr
    (105) expr -> . expr PLUS term
    (106) expr -> . expr MINUS term
    (107) expr -> . expr OR term
    (108) expr -> . term
    (109) term -> . term MUL factor
    (110) term -> . term DIV factor
    (111) term -> . term MOD factor
    (112) term -> . term AND factor
    (113) term -> . factor
    (114) factor -> . SYS_FUNCT
    (115) factor -> . SYS_FUNCT LP args_list RP
    (116) factor -> . NAME LP args_list RP
    (117) factor -> . NAME LB expression RB
    (118) factor -> . NAME
    (119) factor -> . const_value
    (120) factor -> . NOT factor
    (121) factor -> . MINUS factor
    (122) factor -> . LP expression RP
    (123) factor -> . NAME DOT NAME
    (13) const_value -> . INTEGER
    (14) const_value -> . REAL
    (15) const_value -> . CHAR
    (16) const_value -> . STRING
    (17) const_value -> . SYS_CON

    SYS_FUNCT       shift and go to state 68
    NAME            shift and go to state 70
    NOT             shift and go to state 72
    MINUS           shift and go to state 66
    LP              shift and go to state 69
    INTEGER         shift and go to state 73
    REAL            shift and go to state 74
    CHAR            shift and go to state 75
    STRING          shift and go to state 76
    SYS_CON         shift and go to state 77

    expr                           shift and go to state 164
    term                           shift and go to state 65
    factor                         shift and go to state 67
    const_value                    shift and go to state 71

state 113

    (103) expression -> expression UNEQUAL . expr
    (105) expr -> . expr PLUS term
    (106) expr -> . expr MINUS term
    (107) expr -> . expr OR term
    (108) expr -> . term
    (109) term -> . term MUL factor
    (110) term -> . term DIV factor
    (111) term -> . term MOD factor
    (112) term -> . term AND factor
    (113) term -> . factor
    (114) factor -> . SYS_FUNCT
    (115) factor -> . SYS_FUNCT LP args_list RP
    (116) factor -> . NAME LP args_list RP
    (117) factor -> . NAME LB expression RB
    (118) factor -> . NAME
    (119) factor -> . const_value
    (120) factor -> . NOT factor
    (121) factor -> . MINUS factor
    (122) factor -> . LP expression RP
    (123) factor -> . NAME DOT NAME
    (13) const_value -> . INTEGER
    (14) const_value -> . REAL
    (15) const_value -> . CHAR
    (16) const_value -> . STRING
    (17) const_value -> . SYS_CON

    SYS_FUNCT       shift and go to state 68
    NAME            shift and go to state 70
    NOT             shift and go to state 72
    MINUS           shift and go to state 66
    LP              shift and go to state 69
    INTEGER         shift and go to state 73
    REAL            shift and go to state 74
    CHAR            shift and go to state 75
    STRING          shift and go to state 76
    SYS_CON         shift and go to state 77

    expr                           shift and go to state 165
    term                           shift and go to state 65
    factor                         shift and go to state 67
    const_value                    shift and go to state 71

state 114

    (105) expr -> expr PLUS . term
    (109) term -> . term MUL factor
    (110) term -> . term DIV factor
    (111) term -> . term MOD factor
    (112) term -> . term AND factor
    (113) term -> . factor
    (114) factor -> . SYS_FUNCT
    (115) factor -> . SYS_FUNCT LP args_list RP
    (116) factor -> . NAME LP args_list RP
    (117) factor -> . NAME LB expression RB
    (118) factor -> . NAME
    (119) factor -> . const_value
    (120) factor -> . NOT factor
    (121) factor -> . MINUS factor
    (122) factor -> . LP expression RP
    (123) factor -> . NAME DOT NAME
    (13) const_value -> . INTEGER
    (14) const_value -> . REAL
    (15) const_value -> . CHAR
    (16) const_value -> . STRING
    (17) const_value -> . SYS_CON

    SYS_FUNCT       shift and go to state 68
    NAME            shift and go to state 70
    NOT             shift and go to state 72
    MINUS           shift and go to state 66
    LP              shift and go to state 69
    INTEGER         shift and go to state 73
    REAL            shift and go to state 74
    CHAR            shift and go to state 75
    STRING          shift and go to state 76
    SYS_CON         shift and go to state 77

    term                           shift and go to state 166
    factor                         shift and go to state 67
    const_value                    shift and go to state 71

state 115

    (106) expr -> expr MINUS . term
    (109) term -> . term MUL factor
    (110) term -> . term DIV factor
    (111) term -> . term MOD factor
    (112) term -> . term AND factor
    (113) term -> . factor
    (114) factor -> . SYS_FUNCT
    (115) factor -> . SYS_FUNCT LP args_list RP
    (116) factor -> . NAME LP args_list RP
    (117) factor -> . NAME LB expression RB
    (118) factor -> . NAME
    (119) factor -> . const_value
    (120) factor -> . NOT factor
    (121) factor -> . MINUS factor
    (122) factor -> . LP expression RP
    (123) factor -> . NAME DOT NAME
    (13) const_value -> . INTEGER
    (14) const_value -> . REAL
    (15) const_value -> . CHAR
    (16) const_value -> . STRING
    (17) const_value -> . SYS_CON

    SYS_FUNCT       shift and go to state 68
    NAME            shift and go to state 70
    NOT             shift and go to state 72
    MINUS           shift and go to state 66
    LP              shift and go to state 69
    INTEGER         shift and go to state 73
    REAL            shift and go to state 74
    CHAR            shift and go to state 75
    STRING          shift and go to state 76
    SYS_CON         shift and go to state 77

    term                           shift and go to state 167
    factor                         shift and go to state 67
    const_value                    shift and go to state 71

state 116

    (107) expr -> expr OR . term
    (109) term -> . term MUL factor
    (110) term -> . term DIV factor
    (111) term -> . term MOD factor
    (112) term -> . term AND factor
    (113) term -> . factor
    (114) factor -> . SYS_FUNCT
    (115) factor -> . SYS_FUNCT LP args_list RP
    (116) factor -> . NAME LP args_list RP
    (117) factor -> . NAME LB expression RB
    (118) factor -> . NAME
    (119) factor -> . const_value
    (120) factor -> . NOT factor
    (121) factor -> . MINUS factor
    (122) factor -> . LP expression RP
    (123) factor -> . NAME DOT NAME
    (13) const_value -> . INTEGER
    (14) const_value -> . REAL
    (15) const_value -> . CHAR
    (16) const_value -> . STRING
    (17) const_value -> . SYS_CON

    SYS_FUNCT       shift and go to state 68
    NAME            shift and go to state 70
    NOT             shift and go to state 72
    MINUS           shift and go to state 66
    LP              shift and go to state 69
    INTEGER         shift and go to state 73
    REAL            shift and go to state 74
    CHAR            shift and go to state 75
    STRING          shift and go to state 76
    SYS_CON         shift and go to state 77

    term                           shift and go to state 168
    factor                         shift and go to state 67
    const_value                    shift and go to state 71

state 117

    (109) term -> term MUL . factor
    (114) factor -> . SYS_FUNCT
    (115) factor -> . SYS_FUNCT LP args_list RP
    (116) factor -> . NAME LP args_list RP
    (117) factor -> . NAME LB expression RB
    (118) factor -> . NAME
    (119) factor -> . const_value
    (120) factor -> . NOT factor
    (121) factor -> . MINUS factor
    (122) factor -> . LP expression RP
    (123) factor -> . NAME DOT NAME
    (13) const_value -> . INTEGER
    (14) const_value -> . REAL
    (15) const_value -> . CHAR
    (16) const_value -> . STRING
    (17) const_value -> . SYS_CON

    SYS_FUNCT       shift and go to state 68
    NAME            shift and go to state 70
    NOT             shift and go to state 72
    MINUS           shift and go to state 66
    LP              shift and go to state 69
    INTEGER         shift and go to state 73
    REAL            shift and go to state 74
    CHAR            shift and go to state 75
    STRING          shift and go to state 76
    SYS_CON         shift and go to state 77

    factor                         shift and go to state 169
    const_value                    shift and go to state 71

state 118

    (110) term -> term DIV . factor
    (114) factor -> . SYS_FUNCT
    (115) factor -> . SYS_FUNCT LP args_list RP
    (116) factor -> . NAME LP args_list RP
    (117) factor -> . NAME LB expression RB
    (118) factor -> . NAME
    (119) factor -> . const_value
    (120) factor -> . NOT factor
    (121) factor -> . MINUS factor
    (122) factor -> . LP expression RP
    (123) factor -> . NAME DOT NAME
    (13) const_value -> . INTEGER
    (14) const_value -> . REAL
    (15) const_value -> . CHAR
    (16) const_value -> . STRING
    (17) const_value -> . SYS_CON

    SYS_FUNCT       shift and go to state 68
    NAME            shift and go to state 70
    NOT             shift and go to state 72
    MINUS           shift and go to state 66
    LP              shift and go to state 69
    INTEGER         shift and go to state 73
    REAL            shift and go to state 74
    CHAR            shift and go to state 75
    STRING          shift and go to state 76
    SYS_CON         shift and go to state 77

    factor                         shift and go to state 170
    const_value                    shift and go to state 71

state 119

    (111) term -> term MOD . factor
    (114) factor -> . SYS_FUNCT
    (115) factor -> . SYS_FUNCT LP args_list RP
    (116) factor -> . NAME LP args_list RP
    (117) factor -> . NAME LB expression RB
    (118) factor -> . NAME
    (119) factor -> . const_value
    (120) factor -> . NOT factor
    (121) factor -> . MINUS factor
    (122) factor -> . LP expression RP
    (123) factor -> . NAME DOT NAME
    (13) const_value -> . INTEGER
    (14) const_value -> . REAL
    (15) const_value -> . CHAR
    (16) const_value -> . STRING
    (17) const_value -> . SYS_CON

    SYS_FUNCT       shift and go to state 68
    NAME            shift and go to state 70
    NOT             shift and go to state 72
    MINUS           shift and go to state 66
    LP              shift and go to state 69
    INTEGER         shift and go to state 73
    REAL            shift and go to state 74
    CHAR            shift and go to state 75
    STRING          shift and go to state 76
    SYS_CON         shift and go to state 77

    factor                         shift and go to state 171
    const_value                    shift and go to state 71

state 120

    (112) term -> term AND . factor
    (114) factor -> . SYS_FUNCT
    (115) factor -> . SYS_FUNCT LP args_list RP
    (116) factor -> . NAME LP args_list RP
    (117) factor -> . NAME LB expression RB
    (118) factor -> . NAME
    (119) factor -> . const_value
    (120) factor -> . NOT factor
    (121) factor -> . MINUS factor
    (122) factor -> . LP expression RP
    (123) factor -> . NAME DOT NAME
    (13) const_value -> . INTEGER
    (14) const_value -> . REAL
    (15) const_value -> . CHAR
    (16) const_value -> . STRING
    (17) const_value -> . SYS_CON

    SYS_FUNCT       shift and go to state 68
    NAME            shift and go to state 70
    NOT             shift and go to state 72
    MINUS           shift and go to state 66
    LP              shift and go to state 69
    INTEGER         shift and go to state 73
    REAL            shift and go to state 74
    CHAR            shift and go to state 75
    STRING          shift and go to state 76
    SYS_CON         shift and go to state 77

    factor                         shift and go to state 172
    const_value                    shift and go to state 71

state 121

    (121) factor -> MINUS factor .

    MUL             reduce using rule 121 (factor -> MINUS factor .)
    DIV             reduce using rule 121 (factor -> MINUS factor .)
    MOD             reduce using rule 121 (factor -> MINUS factor .)
    AND             reduce using rule 121 (factor -> MINUS factor .)
    PLUS            reduce using rule 121 (factor -> MINUS factor .)
    MINUS           reduce using rule 121 (factor -> MINUS factor .)
    OR              reduce using rule 121 (factor -> MINUS factor .)
    THEN            reduce using rule 121 (factor -> MINUS factor .)
    GE              reduce using rule 121 (factor -> MINUS factor .)
    GT              reduce using rule 121 (factor -> MINUS factor .)
    LE              reduce using rule 121 (factor -> MINUS factor .)
    LT              reduce using rule 121 (factor -> MINUS factor .)
    EQUAL           reduce using rule 121 (factor -> MINUS factor .)
    UNEQUAL         reduce using rule 121 (factor -> MINUS factor .)
    DO              reduce using rule 121 (factor -> MINUS factor .)
    OF              reduce using rule 121 (factor -> MINUS factor .)
    SEMI            reduce using rule 121 (factor -> MINUS factor .)
    ELSE            reduce using rule 121 (factor -> MINUS factor .)
    RB              reduce using rule 121 (factor -> MINUS factor .)
    RP              reduce using rule 121 (factor -> MINUS factor .)
    COMMA           reduce using rule 121 (factor -> MINUS factor .)
    TO              reduce using rule 121 (factor -> MINUS factor .)
    DOWNTO          reduce using rule 121 (factor -> MINUS factor .)


state 122

    (115) factor -> SYS_FUNCT LP . args_list RP
    (124) args_list -> . args_list COMMA expression
    (125) args_list -> . expression
    (98) expression -> . expression GE expr
    (99) expression -> . expression GT expr
    (100) expression -> . expression LE expr
    (101) expression -> . expression LT expr
    (102) expression -> . expression EQUAL expr
    (103) expression -> . expression UNEQUAL expr
    (104) expression -> . expr
    (105) expr -> . expr PLUS term
    (106) expr -> . expr MINUS term
    (107) expr -> . expr OR term
    (108) expr -> . term
    (109) term -> . term MUL factor
    (110) term -> . term DIV factor
    (111) term -> . term MOD factor
    (112) term -> . term AND factor
    (113) term -> . factor
    (114) factor -> . SYS_FUNCT
    (115) factor -> . SYS_FUNCT LP args_list RP
    (116) factor -> . NAME LP args_list RP
    (117) factor -> . NAME LB expression RB
    (118) factor -> . NAME
    (119) factor -> . const_value
    (120) factor -> . NOT factor
    (121) factor -> . MINUS factor
    (122) factor -> . LP expression RP
    (123) factor -> . NAME DOT NAME
    (13) const_value -> . INTEGER
    (14) const_value -> . REAL
    (15) const_value -> . CHAR
    (16) const_value -> . STRING
    (17) const_value -> . SYS_CON

    SYS_FUNCT       shift and go to state 68
    NAME            shift and go to state 70
    NOT             shift and go to state 72
    MINUS           shift and go to state 66
    LP              shift and go to state 69
    INTEGER         shift and go to state 73
    REAL            shift and go to state 74
    CHAR            shift and go to state 75
    STRING          shift and go to state 76
    SYS_CON         shift and go to state 77

    args_list                      shift and go to state 173
    expression                     shift and go to state 103
    expr                           shift and go to state 64
    term                           shift and go to state 65
    factor                         shift and go to state 67
    const_value                    shift and go to state 71

state 123

    (122) factor -> LP expression . RP
    (98) expression -> expression . GE expr
    (99) expression -> expression . GT expr
    (100) expression -> expression . LE expr
    (101) expression -> expression . LT expr
    (102) expression -> expression . EQUAL expr
    (103) expression -> expression . UNEQUAL expr

    RP              shift and go to state 174
    GE              shift and go to state 108
    GT              shift and go to state 109
    LE              shift and go to state 110
    LT              shift and go to state 111
    EQUAL           shift and go to state 112
    UNEQUAL         shift and go to state 113


state 124

    (116) factor -> NAME LP . args_list RP
    (124) args_list -> . args_list COMMA expression
    (125) args_list -> . expression
    (98) expression -> . expression GE expr
    (99) expression -> . expression GT expr
    (100) expression -> . expression LE expr
    (101) expression -> . expression LT expr
    (102) expression -> . expression EQUAL expr
    (103) expression -> . expression UNEQUAL expr
    (104) expression -> . expr
    (105) expr -> . expr PLUS term
    (106) expr -> . expr MINUS term
    (107) expr -> . expr OR term
    (108) expr -> . term
    (109) term -> . term MUL factor
    (110) term -> . term DIV factor
    (111) term -> . term MOD factor
    (112) term -> . term AND factor
    (113) term -> . factor
    (114) factor -> . SYS_FUNCT
    (115) factor -> . SYS_FUNCT LP args_list RP
    (116) factor -> . NAME LP args_list RP
    (117) factor -> . NAME LB expression RB
    (118) factor -> . NAME
    (119) factor -> . const_value
    (120) factor -> . NOT factor
    (121) factor -> . MINUS factor
    (122) factor -> . LP expression RP
    (123) factor -> . NAME DOT NAME
    (13) const_value -> . INTEGER
    (14) const_value -> . REAL
    (15) const_value -> . CHAR
    (16) const_value -> . STRING
    (17) const_value -> . SYS_CON

    SYS_FUNCT       shift and go to state 68
    NAME            shift and go to state 70
    NOT             shift and go to state 72
    MINUS           shift and go to state 66
    LP              shift and go to state 69
    INTEGER         shift and go to state 73
    REAL            shift and go to state 74
    CHAR            shift and go to state 75
    STRING          shift and go to state 76
    SYS_CON         shift and go to state 77

    args_list                      shift and go to state 175
    expression                     shift and go to state 103
    expr                           shift and go to state 64
    term                           shift and go to state 65
    factor                         shift and go to state 67
    const_value                    shift and go to state 71

state 125

    (117) factor -> NAME LB . expression RB
    (98) expression -> . expression GE expr
    (99) expression -> . expression GT expr
    (100) expression -> . expression LE expr
    (101) expression -> . expression LT expr
    (102) expression -> . expression EQUAL expr
    (103) expression -> . expression UNEQUAL expr
    (104) expression -> . expr
    (105) expr -> . expr PLUS term
    (106) expr -> . expr MINUS term
    (107) expr -> . expr OR term
    (108) expr -> . term
    (109) term -> . term MUL factor
    (110) term -> . term DIV factor
    (111) term -> . term MOD factor
    (112) term -> . term AND factor
    (113) term -> . factor
    (114) factor -> . SYS_FUNCT
    (115) factor -> . SYS_FUNCT LP args_list RP
    (116) factor -> . NAME LP args_list RP
    (117) factor -> . NAME LB expression RB
    (118) factor -> . NAME
    (119) factor -> . const_value
    (120) factor -> . NOT factor
    (121) factor -> . MINUS factor
    (122) factor -> . LP expression RP
    (123) factor -> . NAME DOT NAME
    (13) const_value -> . INTEGER
    (14) const_value -> . REAL
    (15) const_value -> . CHAR
    (16) const_value -> . STRING
    (17) const_value -> . SYS_CON

    SYS_FUNCT       shift and go to state 68
    NAME            shift and go to state 70
    NOT             shift and go to state 72
    MINUS           shift and go to state 66
    LP              shift and go to state 69
    INTEGER         shift and go to state 73
    REAL            shift and go to state 74
    CHAR            shift and go to state 75
    STRING          shift and go to state 76
    SYS_CON         shift and go to state 77

    expression                     shift and go to state 176
    expr                           shift and go to state 64
    term                           shift and go to state 65
    factor                         shift and go to state 67
    const_value                    shift and go to state 71

state 126

    (123) factor -> NAME DOT . NAME

    NAME            shift and go to state 177


state 127

    (120) factor -> NOT factor .

    MUL             reduce using rule 120 (factor -> NOT factor .)
    DIV             reduce using rule 120 (factor -> NOT factor .)
    MOD             reduce using rule 120 (factor -> NOT factor .)
    AND             reduce using rule 120 (factor -> NOT factor .)
    PLUS            reduce using rule 120 (factor -> NOT factor .)
    MINUS           reduce using rule 120 (factor -> NOT factor .)
    OR              reduce using rule 120 (factor -> NOT factor .)
    THEN            reduce using rule 120 (factor -> NOT factor .)
    GE              reduce using rule 120 (factor -> NOT factor .)
    GT              reduce using rule 120 (factor -> NOT factor .)
    LE              reduce using rule 120 (factor -> NOT factor .)
    LT              reduce using rule 120 (factor -> NOT factor .)
    EQUAL           reduce using rule 120 (factor -> NOT factor .)
    UNEQUAL         reduce using rule 120 (factor -> NOT factor .)
    DO              reduce using rule 120 (factor -> NOT factor .)
    OF              reduce using rule 120 (factor -> NOT factor .)
    SEMI            reduce using rule 120 (factor -> NOT factor .)
    ELSE            reduce using rule 120 (factor -> NOT factor .)
    RB              reduce using rule 120 (factor -> NOT factor .)
    RP              reduce using rule 120 (factor -> NOT factor .)
    COMMA           reduce using rule 120 (factor -> NOT factor .)
    TO              reduce using rule 120 (factor -> NOT factor .)
    DOWNTO          reduce using rule 120 (factor -> NOT factor .)


state 128

    (85) repeat_stmt -> REPEAT stmt_list UNTIL . expression
    (98) expression -> . expression GE expr
    (99) expression -> . expression GT expr
    (100) expression -> . expression LE expr
    (101) expression -> . expression LT expr
    (102) expression -> . expression EQUAL expr
    (103) expression -> . expression UNEQUAL expr
    (104) expression -> . expr
    (105) expr -> . expr PLUS term
    (106) expr -> . expr MINUS term
    (107) expr -> . expr OR term
    (108) expr -> . term
    (109) term -> . term MUL factor
    (110) term -> . term DIV factor
    (111) term -> . term MOD factor
    (112) term -> . term AND factor
    (113) term -> . factor
    (114) factor -> . SYS_FUNCT
    (115) factor -> . SYS_FUNCT LP args_list RP
    (116) factor -> . NAME LP args_list RP
    (117) factor -> . NAME LB expression RB
    (118) factor -> . NAME
    (119) factor -> . const_value
    (120) factor -> . NOT factor
    (121) factor -> . MINUS factor
    (122) factor -> . LP expression RP
    (123) factor -> . NAME DOT NAME
    (13) const_value -> . INTEGER
    (14) const_value -> . REAL
    (15) const_value -> . CHAR
    (16) const_value -> . STRING
    (17) const_value -> . SYS_CON

    SYS_FUNCT       shift and go to state 68
    NAME            shift and go to state 70
    NOT             shift and go to state 72
    MINUS           shift and go to state 66
    LP              shift and go to state 69
    INTEGER         shift and go to state 73
    REAL            shift and go to state 74
    CHAR            shift and go to state 75
    STRING          shift and go to state 76
    SYS_CON         shift and go to state 77

    expression                     shift and go to state 178
    expr                           shift and go to state 64
    term                           shift and go to state 65
    factor                         shift and go to state 67
    const_value                    shift and go to state 71

state 129

    (86) while_stmt -> WHILE expression DO . stmt
    (63) stmt -> . INTEGER COLON non_label_stmt
    (64) stmt -> . non_label_stmt
    (65) non_label_stmt -> . assign_stmt
    (66) non_label_stmt -> . proc_stmt
    (67) non_label_stmt -> . compound_stmt
    (68) non_label_stmt -> . if_stmt
    (69) non_label_stmt -> . repeat_stmt
    (70) non_label_stmt -> . while_stmt
    (71) non_label_stmt -> . for_stmt
    (72) non_label_stmt -> . case_stmt
    (73) non_label_stmt -> . goto_stmt
    (74) assign_stmt -> . NAME ASSIGN expression
    (75) assign_stmt -> . NAME LB expression RB ASSIGN expression
    (76) assign_stmt -> . NAME DOT NAME ASSIGN expression
    (77) proc_stmt -> . NAME
    (78) proc_stmt -> . NAME LP args_list RP
    (79) proc_stmt -> . SYS_PROC
    (80) proc_stmt -> . SYS_PROC LP expression_list RP
    (81) proc_stmt -> . READ LP factor RP
    (60) compound_stmt -> . BEGIN stmt_list END
    (82) if_stmt -> . IF expression THEN stmt else_clause
    (85) repeat_stmt -> . REPEAT stmt_list UNTIL expression
    (86) while_stmt -> . WHILE expression DO stmt
    (87) for_stmt -> . FOR NAME ASSIGN expression direction expression DO stmt
    (90) case_stmt -> . CASE expression OF case_expr_list END
    (95) goto_stmt -> . GOTO INTEGER

    INTEGER         shift and go to state 27
    NAME            shift and go to state 38
    SYS_PROC        shift and go to state 39
    READ            shift and go to state 40
    BEGIN           shift and go to state 12
    IF              shift and go to state 41
    REPEAT          shift and go to state 42
    WHILE           shift and go to state 43
    FOR             shift and go to state 44
    CASE            shift and go to state 45
    GOTO            shift and go to state 46

    stmt                           shift and go to state 179
    non_label_stmt                 shift and go to state 28
    assign_stmt                    shift and go to state 29
    proc_stmt                      shift and go to state 30
    compound_stmt                  shift and go to state 31
    if_stmt                        shift and go to state 32
    repeat_stmt                    shift and go to state 33
    while_stmt                     shift and go to state 34
    for_stmt                       shift and go to state 35
    case_stmt                      shift and go to state 36
    goto_stmt                      shift and go to state 37

state 130

    (87) for_stmt -> FOR NAME ASSIGN . expression direction expression DO stmt
    (98) expression -> . expression GE expr
    (99) expression -> . expression GT expr
    (100) expression -> . expression LE expr
    (101) expression -> . expression LT expr
    (102) expression -> . expression EQUAL expr
    (103) expression -> . expression UNEQUAL expr
    (104) expression -> . expr
    (105) expr -> . expr PLUS term
    (106) expr -> . expr MINUS term
    (107) expr -> . expr OR term
    (108) expr -> . term
    (109) term -> . term MUL factor
    (110) term -> . term DIV factor
    (111) term -> . term MOD factor
    (112) term -> . term AND factor
    (113) term -> . factor
    (114) factor -> . SYS_FUNCT
    (115) factor -> . SYS_FUNCT LP args_list RP
    (116) factor -> . NAME LP args_list RP
    (117) factor -> . NAME LB expression RB
    (118) factor -> . NAME
    (119) factor -> . const_value
    (120) factor -> . NOT factor
    (121) factor -> . MINUS factor
    (122) factor -> . LP expression RP
    (123) factor -> . NAME DOT NAME
    (13) const_value -> . INTEGER
    (14) const_value -> . REAL
    (15) const_value -> . CHAR
    (16) const_value -> . STRING
    (17) const_value -> . SYS_CON

    SYS_FUNCT       shift and go to state 68
    NAME            shift and go to state 70
    NOT             shift and go to state 72
    MINUS           shift and go to state 66
    LP              shift and go to state 69
    INTEGER         shift and go to state 73
    REAL            shift and go to state 74
    CHAR            shift and go to state 75
    STRING          shift and go to state 76
    SYS_CON         shift and go to state 77

    expression                     shift and go to state 180
    expr                           shift and go to state 64
    term                           shift and go to state 65
    factor                         shift and go to state 67
    const_value                    shift and go to state 71

state 131

    (90) case_stmt -> CASE expression OF . case_expr_list END
    (91) case_expr_list -> . case_expr_list case_expr
    (92) case_expr_list -> . case_expr
    (93) case_expr -> . const_value COLON stmt SEMI
    (94) case_expr -> . NAME COLON stmt SEMI
    (13) const_value -> . INTEGER
    (14) const_value -> . REAL
    (15) const_value -> . CHAR
    (16) const_value -> . STRING
    (17) const_value -> . SYS_CON

    NAME            shift and go to state 184
    INTEGER         shift and go to state 73
    REAL            shift and go to state 74
    CHAR            shift and go to state 75
    STRING          shift and go to state 76
    SYS_CON         shift and go to state 77

    case_expr_list                 shift and go to state 181
    case_expr                      shift and go to state 182
    const_value                    shift and go to state 183

state 132

    (42) routine_part -> routine_part function_decl .

    FUNCTION        reduce using rule 42 (routine_part -> routine_part function_decl .)
    PROCEDURE       reduce using rule 42 (routine_part -> routine_part function_decl .)
    BEGIN           reduce using rule 42 (routine_part -> routine_part function_decl .)


state 133

    (43) routine_part -> routine_part procedure_decl .

    FUNCTION        reduce using rule 43 (routine_part -> routine_part procedure_decl .)
    PROCEDURE       reduce using rule 43 (routine_part -> routine_part procedure_decl .)
    BEGIN           reduce using rule 43 (routine_part -> routine_part procedure_decl .)


state 134

    (47) function_decl -> function_head SEMI . sub_routine SEMI
    (4) sub_routine -> . routine
    (3) routine -> . routine_head routine_body
    (5) routine_head -> . label_part const_part type_part var_part routine_part
    (6) label_part -> . empty
    (7) empty -> .

    CONST           reduce using rule 7 (empty -> .)
    TYPE            reduce using rule 7 (empty -> .)
    VAR             reduce using rule 7 (empty -> .)
    FUNCTION        reduce using rule 7 (empty -> .)
    PROCEDURE       reduce using rule 7 (empty -> .)
    BEGIN           reduce using rule 7 (empty -> .)

    sub_routine                    shift and go to state 185
    routine                        shift and go to state 186
    routine_head                   shift and go to state 5
    label_part                     shift and go to state 6
    empty                          shift and go to state 7

state 135

    (49) procedure_decl -> procedure_head SEMI . sub_routine SEMI
    (4) sub_routine -> . routine
    (3) routine -> . routine_head routine_body
    (5) routine_head -> . label_part const_part type_part var_part routine_part
    (6) label_part -> . empty
    (7) empty -> .

    CONST           reduce using rule 7 (empty -> .)
    TYPE            reduce using rule 7 (empty -> .)
    VAR             reduce using rule 7 (empty -> .)
    FUNCTION        reduce using rule 7 (empty -> .)
    PROCEDURE       reduce using rule 7 (empty -> .)
    BEGIN           reduce using rule 7 (empty -> .)

    sub_routine                    shift and go to state 187
    routine                        shift and go to state 186
    routine_head                   shift and go to state 5
    label_part                     shift and go to state 6
    empty                          shift and go to state 7

state 136

    (48) function_head -> FUNCTION NAME . parameters COLON simple_type_decl
    (51) parameters -> . LP para_decl_list RP
    (52) parameters -> . empty
    (7) empty -> .

    LP              shift and go to state 189
    COLON           reduce using rule 7 (empty -> .)

    parameters                     shift and go to state 188
    empty                          shift and go to state 190

state 137

    (50) procedure_head -> PROCEDURE NAME . parameters
    (51) parameters -> . LP para_decl_list RP
    (52) parameters -> . empty
    (7) empty -> .

    LP              shift and go to state 189
    SEMI            reduce using rule 7 (empty -> .)

    parameters                     shift and go to state 191
    empty                          shift and go to state 190

state 138

    (39) var_decl_list -> var_decl_list var_decl .

    NAME            reduce using rule 39 (var_decl_list -> var_decl_list var_decl .)
    FUNCTION        reduce using rule 39 (var_decl_list -> var_decl_list var_decl .)
    PROCEDURE       reduce using rule 39 (var_decl_list -> var_decl_list var_decl .)
    BEGIN           reduce using rule 39 (var_decl_list -> var_decl_list var_decl .)


state 139

    (41) var_decl -> name_list COLON . type_decl SEMI
    (23) type_decl -> . simple_type_decl
    (24) type_decl -> . array_type_decl
    (25) type_decl -> . record_type_decl
    (26) simple_type_decl -> . SYS_TYPE
    (27) simple_type_decl -> . NAME
    (28) simple_type_decl -> . LP name_list RP
    (29) simple_type_decl -> . const_value DOTDOT const_value
    (30) array_type_decl -> . ARRAY LB simple_type_decl RB OF type_decl
    (31) record_type_decl -> . RECORD field_decl_list END
    (13) const_value -> . INTEGER
    (14) const_value -> . REAL
    (15) const_value -> . CHAR
    (16) const_value -> . STRING
    (17) const_value -> . SYS_CON

    SYS_TYPE        shift and go to state 146
    NAME            shift and go to state 141
    LP              shift and go to state 147
    ARRAY           shift and go to state 149
    RECORD          shift and go to state 150
    INTEGER         shift and go to state 73
    REAL            shift and go to state 74
    CHAR            shift and go to state 75
    STRING          shift and go to state 76
    SYS_CON         shift and go to state 77

    type_decl                      shift and go to state 192
    simple_type_decl               shift and go to state 143
    array_type_decl                shift and go to state 144
    record_type_decl               shift and go to state 145
    const_value                    shift and go to state 148

state 140

    (35) name_list -> name_list COMMA . NAME

    NAME            shift and go to state 193


state 141

    (27) simple_type_decl -> NAME .

    SEMI            reduce using rule 27 (simple_type_decl -> NAME .)
    RB              reduce using rule 27 (simple_type_decl -> NAME .)
    RP              reduce using rule 27 (simple_type_decl -> NAME .)


state 142

    (22) type_definition -> NAME EQUAL type_decl . SEMI

    SEMI            shift and go to state 194


state 143

    (23) type_decl -> simple_type_decl .

    SEMI            reduce using rule 23 (type_decl -> simple_type_decl .)


state 144

    (24) type_decl -> array_type_decl .

    SEMI            reduce using rule 24 (type_decl -> array_type_decl .)


state 145

    (25) type_decl -> record_type_decl .

    SEMI            reduce using rule 25 (type_decl -> record_type_decl .)


state 146

    (26) simple_type_decl -> SYS_TYPE .

    SEMI            reduce using rule 26 (simple_type_decl -> SYS_TYPE .)
    RB              reduce using rule 26 (simple_type_decl -> SYS_TYPE .)
    RP              reduce using rule 26 (simple_type_decl -> SYS_TYPE .)


state 147

    (28) simple_type_decl -> LP . name_list RP
    (35) name_list -> . name_list COMMA NAME
    (36) name_list -> . NAME

    NAME            shift and go to state 94

    name_list                      shift and go to state 195

state 148

    (29) simple_type_decl -> const_value . DOTDOT const_value

    DOTDOT          shift and go to state 196


state 149

    (30) array_type_decl -> ARRAY . LB simple_type_decl RB OF type_decl

    LB              shift and go to state 197


state 150

    (31) record_type_decl -> RECORD . field_decl_list END
    (32) field_decl_list -> . field_decl_list field_decl
    (33) field_decl_list -> . field_decl
    (34) field_decl -> . name_list COLON type_decl SEMI
    (35) name_list -> . name_list COMMA NAME
    (36) name_list -> . NAME

    NAME            shift and go to state 94

    field_decl_list                shift and go to state 198
    field_decl                     shift and go to state 199
    name_list                      shift and go to state 200

state 151

    (12) const_expr -> NAME EQUAL const_value SEMI .

    NAME            reduce using rule 12 (const_expr -> NAME EQUAL const_value SEMI .)
    TYPE            reduce using rule 12 (const_expr -> NAME EQUAL const_value SEMI .)
    VAR             reduce using rule 12 (const_expr -> NAME EQUAL const_value SEMI .)
    FUNCTION        reduce using rule 12 (const_expr -> NAME EQUAL const_value SEMI .)
    PROCEDURE       reduce using rule 12 (const_expr -> NAME EQUAL const_value SEMI .)
    BEGIN           reduce using rule 12 (const_expr -> NAME EQUAL const_value SEMI .)


state 152

    (75) assign_stmt -> NAME LB expression RB . ASSIGN expression

    ASSIGN          shift and go to state 201


state 153

    (76) assign_stmt -> NAME DOT NAME ASSIGN . expression
    (98) expression -> . expression GE expr
    (99) expression -> . expression GT expr
    (100) expression -> . expression LE expr
    (101) expression -> . expression LT expr
    (102) expression -> . expression EQUAL expr
    (103) expression -> . expression UNEQUAL expr
    (104) expression -> . expr
    (105) expr -> . expr PLUS term
    (106) expr -> . expr MINUS term
    (107) expr -> . expr OR term
    (108) expr -> . term
    (109) term -> . term MUL factor
    (110) term -> . term DIV factor
    (111) term -> . term MOD factor
    (112) term -> . term AND factor
    (113) term -> . factor
    (114) factor -> . SYS_FUNCT
    (115) factor -> . SYS_FUNCT LP args_list RP
    (116) factor -> . NAME LP args_list RP
    (117) factor -> . NAME LB expression RB
    (118) factor -> . NAME
    (119) factor -> . const_value
    (120) factor -> . NOT factor
    (121) factor -> . MINUS factor
    (122) factor -> . LP expression RP
    (123) factor -> . NAME DOT NAME
    (13) const_value -> . INTEGER
    (14) const_value -> . REAL
    (15) const_value -> . CHAR
    (16) const_value -> . STRING
    (17) const_value -> . SYS_CON

    SYS_FUNCT       shift and go to state 68
    NAME            shift and go to state 70
    NOT             shift and go to state 72
    MINUS           shift and go to state 66
    LP              shift and go to state 69
    INTEGER         shift and go to state 73
    REAL            shift and go to state 74
    CHAR            shift and go to state 75
    STRING          shift and go to state 76
    SYS_CON         shift and go to state 77

    expression                     shift and go to state 202
    expr                           shift and go to state 64
    term                           shift and go to state 65
    factor                         shift and go to state 67
    const_value                    shift and go to state 71

state 154

    (78) proc_stmt -> NAME LP args_list RP .

    SEMI            reduce using rule 78 (proc_stmt -> NAME LP args_list RP .)
    ELSE            reduce using rule 78 (proc_stmt -> NAME LP args_list RP .)


state 155

    (124) args_list -> args_list COMMA . expression
    (98) expression -> . expression GE expr
    (99) expression -> . expression GT expr
    (100) expression -> . expression LE expr
    (101) expression -> . expression LT expr
    (102) expression -> . expression EQUAL expr
    (103) expression -> . expression UNEQUAL expr
    (104) expression -> . expr
    (105) expr -> . expr PLUS term
    (106) expr -> . expr MINUS term
    (107) expr -> . expr OR term
    (108) expr -> . term
    (109) term -> . term MUL factor
    (110) term -> . term DIV factor
    (111) term -> . term MOD factor
    (112) term -> . term AND factor
    (113) term -> . factor
    (114) factor -> . SYS_FUNCT
    (115) factor -> . SYS_FUNCT LP args_list RP
    (116) factor -> . NAME LP args_list RP
    (117) factor -> . NAME LB expression RB
    (118) factor -> . NAME
    (119) factor -> . const_value
    (120) factor -> . NOT factor
    (121) factor -> . MINUS factor
    (122) factor -> . LP expression RP
    (123) factor -> . NAME DOT NAME
    (13) const_value -> . INTEGER
    (14) const_value -> . REAL
    (15) const_value -> . CHAR
    (16) const_value -> . STRING
    (17) const_value -> . SYS_CON

    SYS_FUNCT       shift and go to state 68
    NAME            shift and go to state 70
    NOT             shift and go to state 72
    MINUS           shift and go to state 66
    LP              shift and go to state 69
    INTEGER         shift and go to state 73
    REAL            shift and go to state 74
    CHAR            shift and go to state 75
    STRING          shift and go to state 76
    SYS_CON         shift and go to state 77

    expression                     shift and go to state 203
    expr                           shift and go to state 64
    term                           shift and go to state 65
    factor                         shift and go to state 67
    const_value                    shift and go to state 71

state 156

    (80) proc_stmt -> SYS_PROC LP expression_list RP .

    SEMI            reduce using rule 80 (proc_stmt -> SYS_PROC LP expression_list RP .)
    ELSE            reduce using rule 80 (proc_stmt -> SYS_PROC LP expression_list RP .)


state 157

    (96) expression_list -> expression_list COMMA . expression
    (98) expression -> . expression GE expr
    (99) expression -> . expression GT expr
    (100) expression -> . expression LE expr
    (101) expression -> . expression LT expr
    (102) expression -> . expression EQUAL expr
    (103) expression -> . expression UNEQUAL expr
    (104) expression -> . expr
    (105) expr -> . expr PLUS term
    (106) expr -> . expr MINUS term
    (107) expr -> . expr OR term
    (108) expr -> . term
    (109) term -> . term MUL factor
    (110) term -> . term DIV factor
    (111) term -> . term MOD factor
    (112) term -> . term AND factor
    (113) term -> . factor
    (114) factor -> . SYS_FUNCT
    (115) factor -> . SYS_FUNCT LP args_list RP
    (116) factor -> . NAME LP args_list RP
    (117) factor -> . NAME LB expression RB
    (118) factor -> . NAME
    (119) factor -> . const_value
    (120) factor -> . NOT factor
    (121) factor -> . MINUS factor
    (122) factor -> . LP expression RP
    (123) factor -> . NAME DOT NAME
    (13) const_value -> . INTEGER
    (14) const_value -> . REAL
    (15) const_value -> . CHAR
    (16) const_value -> . STRING
    (17) const_value -> . SYS_CON

    SYS_FUNCT       shift and go to state 68
    NAME            shift and go to state 70
    NOT             shift and go to state 72
    MINUS           shift and go to state 66
    LP              shift and go to state 69
    INTEGER         shift and go to state 73
    REAL            shift and go to state 74
    CHAR            shift and go to state 75
    STRING          shift and go to state 76
    SYS_CON         shift and go to state 77

    expression                     shift and go to state 204
    expr                           shift and go to state 64
    term                           shift and go to state 65
    factor                         shift and go to state 67
    const_value                    shift and go to state 71

state 158

    (81) proc_stmt -> READ LP factor RP .

    SEMI            reduce using rule 81 (proc_stmt -> READ LP factor RP .)
    ELSE            reduce using rule 81 (proc_stmt -> READ LP factor RP .)


state 159

    (82) if_stmt -> IF expression THEN stmt . else_clause
    (83) else_clause -> . ELSE stmt
    (84) else_clause -> . empty
    (7) empty -> .

  ! shift/reduce conflict for ELSE resolved as shift
    ELSE            shift and go to state 206
    SEMI            reduce using rule 7 (empty -> .)

  ! ELSE            [ reduce using rule 7 (empty -> .) ]

    else_clause                    shift and go to state 205
    empty                          shift and go to state 207

state 160

    (98) expression -> expression GE expr .
    (105) expr -> expr . PLUS term
    (106) expr -> expr . MINUS term
    (107) expr -> expr . OR term

    THEN            reduce using rule 98 (expression -> expression GE expr .)
    GE              reduce using rule 98 (expression -> expression GE expr .)
    GT              reduce using rule 98 (expression -> expression GE expr .)
    LE              reduce using rule 98 (expression -> expression GE expr .)
    LT              reduce using rule 98 (expression -> expression GE expr .)
    EQUAL           reduce using rule 98 (expression -> expression GE expr .)
    UNEQUAL         reduce using rule 98 (expression -> expression GE expr .)
    DO              reduce using rule 98 (expression -> expression GE expr .)
    OF              reduce using rule 98 (expression -> expression GE expr .)
    SEMI            reduce using rule 98 (expression -> expression GE expr .)
    ELSE            reduce using rule 98 (expression -> expression GE expr .)
    RB              reduce using rule 98 (expression -> expression GE expr .)
    RP              reduce using rule 98 (expression -> expression GE expr .)
    COMMA           reduce using rule 98 (expression -> expression GE expr .)
    TO              reduce using rule 98 (expression -> expression GE expr .)
    DOWNTO          reduce using rule 98 (expression -> expression GE expr .)
    PLUS            shift and go to state 114
    MINUS           shift and go to state 115
    OR              shift and go to state 116


state 161

    (99) expression -> expression GT expr .
    (105) expr -> expr . PLUS term
    (106) expr -> expr . MINUS term
    (107) expr -> expr . OR term

    THEN            reduce using rule 99 (expression -> expression GT expr .)
    GE              reduce using rule 99 (expression -> expression GT expr .)
    GT              reduce using rule 99 (expression -> expression GT expr .)
    LE              reduce using rule 99 (expression -> expression GT expr .)
    LT              reduce using rule 99 (expression -> expression GT expr .)
    EQUAL           reduce using rule 99 (expression -> expression GT expr .)
    UNEQUAL         reduce using rule 99 (expression -> expression GT expr .)
    DO              reduce using rule 99 (expression -> expression GT expr .)
    OF              reduce using rule 99 (expression -> expression GT expr .)
    SEMI            reduce using rule 99 (expression -> expression GT expr .)
    ELSE            reduce using rule 99 (expression -> expression GT expr .)
    RB              reduce using rule 99 (expression -> expression GT expr .)
    RP              reduce using rule 99 (expression -> expression GT expr .)
    COMMA           reduce using rule 99 (expression -> expression GT expr .)
    TO              reduce using rule 99 (expression -> expression GT expr .)
    DOWNTO          reduce using rule 99 (expression -> expression GT expr .)
    PLUS            shift and go to state 114
    MINUS           shift and go to state 115
    OR              shift and go to state 116


state 162

    (100) expression -> expression LE expr .
    (105) expr -> expr . PLUS term
    (106) expr -> expr . MINUS term
    (107) expr -> expr . OR term

    THEN            reduce using rule 100 (expression -> expression LE expr .)
    GE              reduce using rule 100 (expression -> expression LE expr .)
    GT              reduce using rule 100 (expression -> expression LE expr .)
    LE              reduce using rule 100 (expression -> expression LE expr .)
    LT              reduce using rule 100 (expression -> expression LE expr .)
    EQUAL           reduce using rule 100 (expression -> expression LE expr .)
    UNEQUAL         reduce using rule 100 (expression -> expression LE expr .)
    DO              reduce using rule 100 (expression -> expression LE expr .)
    OF              reduce using rule 100 (expression -> expression LE expr .)
    SEMI            reduce using rule 100 (expression -> expression LE expr .)
    ELSE            reduce using rule 100 (expression -> expression LE expr .)
    RB              reduce using rule 100 (expression -> expression LE expr .)
    RP              reduce using rule 100 (expression -> expression LE expr .)
    COMMA           reduce using rule 100 (expression -> expression LE expr .)
    TO              reduce using rule 100 (expression -> expression LE expr .)
    DOWNTO          reduce using rule 100 (expression -> expression LE expr .)
    PLUS            shift and go to state 114
    MINUS           shift and go to state 115
    OR              shift and go to state 116


state 163

    (101) expression -> expression LT expr .
    (105) expr -> expr . PLUS term
    (106) expr -> expr . MINUS term
    (107) expr -> expr . OR term

    THEN            reduce using rule 101 (expression -> expression LT expr .)
    GE              reduce using rule 101 (expression -> expression LT expr .)
    GT              reduce using rule 101 (expression -> expression LT expr .)
    LE              reduce using rule 101 (expression -> expression LT expr .)
    LT              reduce using rule 101 (expression -> expression LT expr .)
    EQUAL           reduce using rule 101 (expression -> expression LT expr .)
    UNEQUAL         reduce using rule 101 (expression -> expression LT expr .)
    DO              reduce using rule 101 (expression -> expression LT expr .)
    OF              reduce using rule 101 (expression -> expression LT expr .)
    SEMI            reduce using rule 101 (expression -> expression LT expr .)
    ELSE            reduce using rule 101 (expression -> expression LT expr .)
    RB              reduce using rule 101 (expression -> expression LT expr .)
    RP              reduce using rule 101 (expression -> expression LT expr .)
    COMMA           reduce using rule 101 (expression -> expression LT expr .)
    TO              reduce using rule 101 (expression -> expression LT expr .)
    DOWNTO          reduce using rule 101 (expression -> expression LT expr .)
    PLUS            shift and go to state 114
    MINUS           shift and go to state 115
    OR              shift and go to state 116


state 164

    (102) expression -> expression EQUAL expr .
    (105) expr -> expr . PLUS term
    (106) expr -> expr . MINUS term
    (107) expr -> expr . OR term

    THEN            reduce using rule 102 (expression -> expression EQUAL expr .)
    GE              reduce using rule 102 (expression -> expression EQUAL expr .)
    GT              reduce using rule 102 (expression -> expression EQUAL expr .)
    LE              reduce using rule 102 (expression -> expression EQUAL expr .)
    LT              reduce using rule 102 (expression -> expression EQUAL expr .)
    EQUAL           reduce using rule 102 (expression -> expression EQUAL expr .)
    UNEQUAL         reduce using rule 102 (expression -> expression EQUAL expr .)
    DO              reduce using rule 102 (expression -> expression EQUAL expr .)
    OF              reduce using rule 102 (expression -> expression EQUAL expr .)
    SEMI            reduce using rule 102 (expression -> expression EQUAL expr .)
    ELSE            reduce using rule 102 (expression -> expression EQUAL expr .)
    RB              reduce using rule 102 (expression -> expression EQUAL expr .)
    RP              reduce using rule 102 (expression -> expression EQUAL expr .)
    COMMA           reduce using rule 102 (expression -> expression EQUAL expr .)
    TO              reduce using rule 102 (expression -> expression EQUAL expr .)
    DOWNTO          reduce using rule 102 (expression -> expression EQUAL expr .)
    PLUS            shift and go to state 114
    MINUS           shift and go to state 115
    OR              shift and go to state 116


state 165

    (103) expression -> expression UNEQUAL expr .
    (105) expr -> expr . PLUS term
    (106) expr -> expr . MINUS term
    (107) expr -> expr . OR term

    THEN            reduce using rule 103 (expression -> expression UNEQUAL expr .)
    GE              reduce using rule 103 (expression -> expression UNEQUAL expr .)
    GT              reduce using rule 103 (expression -> expression UNEQUAL expr .)
    LE              reduce using rule 103 (expression -> expression UNEQUAL expr .)
    LT              reduce using rule 103 (expression -> expression UNEQUAL expr .)
    EQUAL           reduce using rule 103 (expression -> expression UNEQUAL expr .)
    UNEQUAL         reduce using rule 103 (expression -> expression UNEQUAL expr .)
    DO              reduce using rule 103 (expression -> expression UNEQUAL expr .)
    OF              reduce using rule 103 (expression -> expression UNEQUAL expr .)
    SEMI            reduce using rule 103 (expression -> expression UNEQUAL expr .)
    ELSE            reduce using rule 103 (expression -> expression UNEQUAL expr .)
    RB              reduce using rule 103 (expression -> expression UNEQUAL expr .)
    RP              reduce using rule 103 (expression -> expression UNEQUAL expr .)
    COMMA           reduce using rule 103 (expression -> expression UNEQUAL expr .)
    TO              reduce using rule 103 (expression -> expression UNEQUAL expr .)
    DOWNTO          reduce using rule 103 (expression -> expression UNEQUAL expr .)
    PLUS            shift and go to state 114
    MINUS           shift and go to state 115
    OR              shift and go to state 116


state 166

    (105) expr -> expr PLUS term .
    (109) term -> term . MUL factor
    (110) term -> term . DIV factor
    (111) term -> term . MOD factor
    (112) term -> term . AND factor

    PLUS            reduce using rule 105 (expr -> expr PLUS term .)
    MINUS           reduce using rule 105 (expr -> expr PLUS term .)
    OR              reduce using rule 105 (expr -> expr PLUS term .)
    THEN            reduce using rule 105 (expr -> expr PLUS term .)
    GE              reduce using rule 105 (expr -> expr PLUS term .)
    GT              reduce using rule 105 (expr -> expr PLUS term .)
    LE              reduce using rule 105 (expr -> expr PLUS term .)
    LT              reduce using rule 105 (expr -> expr PLUS term .)
    EQUAL           reduce using rule 105 (expr -> expr PLUS term .)
    UNEQUAL         reduce using rule 105 (expr -> expr PLUS term .)
    DO              reduce using rule 105 (expr -> expr PLUS term .)
    OF              reduce using rule 105 (expr -> expr PLUS term .)
    SEMI            reduce using rule 105 (expr -> expr PLUS term .)
    ELSE            reduce using rule 105 (expr -> expr PLUS term .)
    RB              reduce using rule 105 (expr -> expr PLUS term .)
    RP              reduce using rule 105 (expr -> expr PLUS term .)
    COMMA           reduce using rule 105 (expr -> expr PLUS term .)
    TO              reduce using rule 105 (expr -> expr PLUS term .)
    DOWNTO          reduce using rule 105 (expr -> expr PLUS term .)
    MUL             shift and go to state 117
    DIV             shift and go to state 118
    MOD             shift and go to state 119
    AND             shift and go to state 120


state 167

    (106) expr -> expr MINUS term .
    (109) term -> term . MUL factor
    (110) term -> term . DIV factor
    (111) term -> term . MOD factor
    (112) term -> term . AND factor

    PLUS            reduce using rule 106 (expr -> expr MINUS term .)
    MINUS           reduce using rule 106 (expr -> expr MINUS term .)
    OR              reduce using rule 106 (expr -> expr MINUS term .)
    THEN            reduce using rule 106 (expr -> expr MINUS term .)
    GE              reduce using rule 106 (expr -> expr MINUS term .)
    GT              reduce using rule 106 (expr -> expr MINUS term .)
    LE              reduce using rule 106 (expr -> expr MINUS term .)
    LT              reduce using rule 106 (expr -> expr MINUS term .)
    EQUAL           reduce using rule 106 (expr -> expr MINUS term .)
    UNEQUAL         reduce using rule 106 (expr -> expr MINUS term .)
    DO              reduce using rule 106 (expr -> expr MINUS term .)
    OF              reduce using rule 106 (expr -> expr MINUS term .)
    SEMI            reduce using rule 106 (expr -> expr MINUS term .)
    ELSE            reduce using rule 106 (expr -> expr MINUS term .)
    RB              reduce using rule 106 (expr -> expr MINUS term .)
    RP              reduce using rule 106 (expr -> expr MINUS term .)
    COMMA           reduce using rule 106 (expr -> expr MINUS term .)
    TO              reduce using rule 106 (expr -> expr MINUS term .)
    DOWNTO          reduce using rule 106 (expr -> expr MINUS term .)
    MUL             shift and go to state 117
    DIV             shift and go to state 118
    MOD             shift and go to state 119
    AND             shift and go to state 120


state 168

    (107) expr -> expr OR term .
    (109) term -> term . MUL factor
    (110) term -> term . DIV factor
    (111) term -> term . MOD factor
    (112) term -> term . AND factor

    PLUS            reduce using rule 107 (expr -> expr OR term .)
    MINUS           reduce using rule 107 (expr -> expr OR term .)
    OR              reduce using rule 107 (expr -> expr OR term .)
    THEN            reduce using rule 107 (expr -> expr OR term .)
    GE              reduce using rule 107 (expr -> expr OR term .)
    GT              reduce using rule 107 (expr -> expr OR term .)
    LE              reduce using rule 107 (expr -> expr OR term .)
    LT              reduce using rule 107 (expr -> expr OR term .)
    EQUAL           reduce using rule 107 (expr -> expr OR term .)
    UNEQUAL         reduce using rule 107 (expr -> expr OR term .)
    DO              reduce using rule 107 (expr -> expr OR term .)
    OF              reduce using rule 107 (expr -> expr OR term .)
    SEMI            reduce using rule 107 (expr -> expr OR term .)
    ELSE            reduce using rule 107 (expr -> expr OR term .)
    RB              reduce using rule 107 (expr -> expr OR term .)
    RP              reduce using rule 107 (expr -> expr OR term .)
    COMMA           reduce using rule 107 (expr -> expr OR term .)
    TO              reduce using rule 107 (expr -> expr OR term .)
    DOWNTO          reduce using rule 107 (expr -> expr OR term .)
    MUL             shift and go to state 117
    DIV             shift and go to state 118
    MOD             shift and go to state 119
    AND             shift and go to state 120


state 169

    (109) term -> term MUL factor .

    MUL             reduce using rule 109 (term -> term MUL factor .)
    DIV             reduce using rule 109 (term -> term MUL factor .)
    MOD             reduce using rule 109 (term -> term MUL factor .)
    AND             reduce using rule 109 (term -> term MUL factor .)
    PLUS            reduce using rule 109 (term -> term MUL factor .)
    MINUS           reduce using rule 109 (term -> term MUL factor .)
    OR              reduce using rule 109 (term -> term MUL factor .)
    THEN            reduce using rule 109 (term -> term MUL factor .)
    GE              reduce using rule 109 (term -> term MUL factor .)
    GT              reduce using rule 109 (term -> term MUL factor .)
    LE              reduce using rule 109 (term -> term MUL factor .)
    LT              reduce using rule 109 (term -> term MUL factor .)
    EQUAL           reduce using rule 109 (term -> term MUL factor .)
    UNEQUAL         reduce using rule 109 (term -> term MUL factor .)
    DO              reduce using rule 109 (term -> term MUL factor .)
    OF              reduce using rule 109 (term -> term MUL factor .)
    SEMI            reduce using rule 109 (term -> term MUL factor .)
    ELSE            reduce using rule 109 (term -> term MUL factor .)
    RB              reduce using rule 109 (term -> term MUL factor .)
    RP              reduce using rule 109 (term -> term MUL factor .)
    COMMA           reduce using rule 109 (term -> term MUL factor .)
    TO              reduce using rule 109 (term -> term MUL factor .)
    DOWNTO          reduce using rule 109 (term -> term MUL factor .)


state 170

    (110) term -> term DIV factor .

    MUL             reduce using rule 110 (term -> term DIV factor .)
    DIV             reduce using rule 110 (term -> term DIV factor .)
    MOD             reduce using rule 110 (term -> term DIV factor .)
    AND             reduce using rule 110 (term -> term DIV factor .)
    PLUS            reduce using rule 110 (term -> term DIV factor .)
    MINUS           reduce using rule 110 (term -> term DIV factor .)
    OR              reduce using rule 110 (term -> term DIV factor .)
    THEN            reduce using rule 110 (term -> term DIV factor .)
    GE              reduce using rule 110 (term -> term DIV factor .)
    GT              reduce using rule 110 (term -> term DIV factor .)
    LE              reduce using rule 110 (term -> term DIV factor .)
    LT              reduce using rule 110 (term -> term DIV factor .)
    EQUAL           reduce using rule 110 (term -> term DIV factor .)
    UNEQUAL         reduce using rule 110 (term -> term DIV factor .)
    DO              reduce using rule 110 (term -> term DIV factor .)
    OF              reduce using rule 110 (term -> term DIV factor .)
    SEMI            reduce using rule 110 (term -> term DIV factor .)
    ELSE            reduce using rule 110 (term -> term DIV factor .)
    RB              reduce using rule 110 (term -> term DIV factor .)
    RP              reduce using rule 110 (term -> term DIV factor .)
    COMMA           reduce using rule 110 (term -> term DIV factor .)
    TO              reduce using rule 110 (term -> term DIV factor .)
    DOWNTO          reduce using rule 110 (term -> term DIV factor .)


state 171

    (111) term -> term MOD factor .

    MUL             reduce using rule 111 (term -> term MOD factor .)
    DIV             reduce using rule 111 (term -> term MOD factor .)
    MOD             reduce using rule 111 (term -> term MOD factor .)
    AND             reduce using rule 111 (term -> term MOD factor .)
    PLUS            reduce using rule 111 (term -> term MOD factor .)
    MINUS           reduce using rule 111 (term -> term MOD factor .)
    OR              reduce using rule 111 (term -> term MOD factor .)
    THEN            reduce using rule 111 (term -> term MOD factor .)
    GE              reduce using rule 111 (term -> term MOD factor .)
    GT              reduce using rule 111 (term -> term MOD factor .)
    LE              reduce using rule 111 (term -> term MOD factor .)
    LT              reduce using rule 111 (term -> term MOD factor .)
    EQUAL           reduce using rule 111 (term -> term MOD factor .)
    UNEQUAL         reduce using rule 111 (term -> term MOD factor .)
    DO              reduce using rule 111 (term -> term MOD factor .)
    OF              reduce using rule 111 (term -> term MOD factor .)
    SEMI            reduce using rule 111 (term -> term MOD factor .)
    ELSE            reduce using rule 111 (term -> term MOD factor .)
    RB              reduce using rule 111 (term -> term MOD factor .)
    RP              reduce using rule 111 (term -> term MOD factor .)
    COMMA           reduce using rule 111 (term -> term MOD factor .)
    TO              reduce using rule 111 (term -> term MOD factor .)
    DOWNTO          reduce using rule 111 (term -> term MOD factor .)


state 172

    (112) term -> term AND factor .

    MUL             reduce using rule 112 (term -> term AND factor .)
    DIV             reduce using rule 112 (term -> term AND factor .)
    MOD             reduce using rule 112 (term -> term AND factor .)
    AND             reduce using rule 112 (term -> term AND factor .)
    PLUS            reduce using rule 112 (term -> term AND factor .)
    MINUS           reduce using rule 112 (term -> term AND factor .)
    OR              reduce using rule 112 (term -> term AND factor .)
    THEN            reduce using rule 112 (term -> term AND factor .)
    GE              reduce using rule 112 (term -> term AND factor .)
    GT              reduce using rule 112 (term -> term AND factor .)
    LE              reduce using rule 112 (term -> term AND factor .)
    LT              reduce using rule 112 (term -> term AND factor .)
    EQUAL           reduce using rule 112 (term -> term AND factor .)
    UNEQUAL         reduce using rule 112 (term -> term AND factor .)
    DO              reduce using rule 112 (term -> term AND factor .)
    OF              reduce using rule 112 (term -> term AND factor .)
    SEMI            reduce using rule 112 (term -> term AND factor .)
    ELSE            reduce using rule 112 (term -> term AND factor .)
    RB              reduce using rule 112 (term -> term AND factor .)
    RP              reduce using rule 112 (term -> term AND factor .)
    COMMA           reduce using rule 112 (term -> term AND factor .)
    TO              reduce using rule 112 (term -> term AND factor .)
    DOWNTO          reduce using rule 112 (term -> term AND factor .)


state 173

    (115) factor -> SYS_FUNCT LP args_list . RP
    (124) args_list -> args_list . COMMA expression

    RP              shift and go to state 208
    COMMA           shift and go to state 155


state 174

    (122) factor -> LP expression RP .

    MUL             reduce using rule 122 (factor -> LP expression RP .)
    DIV             reduce using rule 122 (factor -> LP expression RP .)
    MOD             reduce using rule 122 (factor -> LP expression RP .)
    AND             reduce using rule 122 (factor -> LP expression RP .)
    PLUS            reduce using rule 122 (factor -> LP expression RP .)
    MINUS           reduce using rule 122 (factor -> LP expression RP .)
    OR              reduce using rule 122 (factor -> LP expression RP .)
    THEN            reduce using rule 122 (factor -> LP expression RP .)
    GE              reduce using rule 122 (factor -> LP expression RP .)
    GT              reduce using rule 122 (factor -> LP expression RP .)
    LE              reduce using rule 122 (factor -> LP expression RP .)
    LT              reduce using rule 122 (factor -> LP expression RP .)
    EQUAL           reduce using rule 122 (factor -> LP expression RP .)
    UNEQUAL         reduce using rule 122 (factor -> LP expression RP .)
    DO              reduce using rule 122 (factor -> LP expression RP .)
    OF              reduce using rule 122 (factor -> LP expression RP .)
    SEMI            reduce using rule 122 (factor -> LP expression RP .)
    ELSE            reduce using rule 122 (factor -> LP expression RP .)
    RB              reduce using rule 122 (factor -> LP expression RP .)
    RP              reduce using rule 122 (factor -> LP expression RP .)
    COMMA           reduce using rule 122 (factor -> LP expression RP .)
    TO              reduce using rule 122 (factor -> LP expression RP .)
    DOWNTO          reduce using rule 122 (factor -> LP expression RP .)


state 175

    (116) factor -> NAME LP args_list . RP
    (124) args_list -> args_list . COMMA expression

    RP              shift and go to state 209
    COMMA           shift and go to state 155


state 176

    (117) factor -> NAME LB expression . RB
    (98) expression -> expression . GE expr
    (99) expression -> expression . GT expr
    (100) expression -> expression . LE expr
    (101) expression -> expression . LT expr
    (102) expression -> expression . EQUAL expr
    (103) expression -> expression . UNEQUAL expr

    RB              shift and go to state 210
    GE              shift and go to state 108
    GT              shift and go to state 109
    LE              shift and go to state 110
    LT              shift and go to state 111
    EQUAL           shift and go to state 112
    UNEQUAL         shift and go to state 113


state 177

    (123) factor -> NAME DOT NAME .

    MUL             reduce using rule 123 (factor -> NAME DOT NAME .)
    DIV             reduce using rule 123 (factor -> NAME DOT NAME .)
    MOD             reduce using rule 123 (factor -> NAME DOT NAME .)
    AND             reduce using rule 123 (factor -> NAME DOT NAME .)
    PLUS            reduce using rule 123 (factor -> NAME DOT NAME .)
    MINUS           reduce using rule 123 (factor -> NAME DOT NAME .)
    OR              reduce using rule 123 (factor -> NAME DOT NAME .)
    THEN            reduce using rule 123 (factor -> NAME DOT NAME .)
    GE              reduce using rule 123 (factor -> NAME DOT NAME .)
    GT              reduce using rule 123 (factor -> NAME DOT NAME .)
    LE              reduce using rule 123 (factor -> NAME DOT NAME .)
    LT              reduce using rule 123 (factor -> NAME DOT NAME .)
    EQUAL           reduce using rule 123 (factor -> NAME DOT NAME .)
    UNEQUAL         reduce using rule 123 (factor -> NAME DOT NAME .)
    DO              reduce using rule 123 (factor -> NAME DOT NAME .)
    OF              reduce using rule 123 (factor -> NAME DOT NAME .)
    SEMI            reduce using rule 123 (factor -> NAME DOT NAME .)
    ELSE            reduce using rule 123 (factor -> NAME DOT NAME .)
    RB              reduce using rule 123 (factor -> NAME DOT NAME .)
    RP              reduce using rule 123 (factor -> NAME DOT NAME .)
    COMMA           reduce using rule 123 (factor -> NAME DOT NAME .)
    TO              reduce using rule 123 (factor -> NAME DOT NAME .)
    DOWNTO          reduce using rule 123 (factor -> NAME DOT NAME .)


state 178

    (85) repeat_stmt -> REPEAT stmt_list UNTIL expression .
    (98) expression -> expression . GE expr
    (99) expression -> expression . GT expr
    (100) expression -> expression . LE expr
    (101) expression -> expression . LT expr
    (102) expression -> expression . EQUAL expr
    (103) expression -> expression . UNEQUAL expr

    SEMI            reduce using rule 85 (repeat_stmt -> REPEAT stmt_list UNTIL expression .)
    ELSE            reduce using rule 85 (repeat_stmt -> REPEAT stmt_list UNTIL expression .)
    GE              shift and go to state 108
    GT              shift and go to state 109
    LE              shift and go to state 110
    LT              shift and go to state 111
    EQUAL           shift and go to state 112
    UNEQUAL         shift and go to state 113


state 179

    (86) while_stmt -> WHILE expression DO stmt .

    SEMI            reduce using rule 86 (while_stmt -> WHILE expression DO stmt .)
    ELSE            reduce using rule 86 (while_stmt -> WHILE expression DO stmt .)


state 180

    (87) for_stmt -> FOR NAME ASSIGN expression . direction expression DO stmt
    (98) expression -> expression . GE expr
    (99) expression -> expression . GT expr
    (100) expression -> expression . LE expr
    (101) expression -> expression . LT expr
    (102) expression -> expression . EQUAL expr
    (103) expression -> expression . UNEQUAL expr
    (88) direction -> . TO
    (89) direction -> . DOWNTO

    GE              shift and go to state 108
    GT              shift and go to state 109
    LE              shift and go to state 110
    LT              shift and go to state 111
    EQUAL           shift and go to state 112
    UNEQUAL         shift and go to state 113
    TO              shift and go to state 212
    DOWNTO          shift and go to state 213

    direction                      shift and go to state 211

state 181

    (90) case_stmt -> CASE expression OF case_expr_list . END
    (91) case_expr_list -> case_expr_list . case_expr
    (93) case_expr -> . const_value COLON stmt SEMI
    (94) case_expr -> . NAME COLON stmt SEMI
    (13) const_value -> . INTEGER
    (14) const_value -> . REAL
    (15) const_value -> . CHAR
    (16) const_value -> . STRING
    (17) const_value -> . SYS_CON

    END             shift and go to state 214
    NAME            shift and go to state 184
    INTEGER         shift and go to state 73
    REAL            shift and go to state 74
    CHAR            shift and go to state 75
    STRING          shift and go to state 76
    SYS_CON         shift and go to state 77

    case_expr                      shift and go to state 215
    const_value                    shift and go to state 183

state 182

    (92) case_expr_list -> case_expr .

    END             reduce using rule 92 (case_expr_list -> case_expr .)
    NAME            reduce using rule 92 (case_expr_list -> case_expr .)
    INTEGER         reduce using rule 92 (case_expr_list -> case_expr .)
    REAL            reduce using rule 92 (case_expr_list -> case_expr .)
    CHAR            reduce using rule 92 (case_expr_list -> case_expr .)
    STRING          reduce using rule 92 (case_expr_list -> case_expr .)
    SYS_CON         reduce using rule 92 (case_expr_list -> case_expr .)


state 183

    (93) case_expr -> const_value . COLON stmt SEMI

    COLON           shift and go to state 216


state 184

    (94) case_expr -> NAME . COLON stmt SEMI

    COLON           shift and go to state 217


state 185

    (47) function_decl -> function_head SEMI sub_routine . SEMI

    SEMI            shift and go to state 218


state 186

    (4) sub_routine -> routine .

    SEMI            reduce using rule 4 (sub_routine -> routine .)


state 187

    (49) procedure_decl -> procedure_head SEMI sub_routine . SEMI

    SEMI            shift and go to state 219


state 188

    (48) function_head -> FUNCTION NAME parameters . COLON simple_type_decl

    COLON           shift and go to state 220


state 189

    (51) parameters -> LP . para_decl_list RP
    (53) para_decl_list -> . para_decl_list SEMI para_type_list
    (54) para_decl_list -> . para_type_list
    (55) para_type_list -> . var_para_list COLON simple_type_decl
    (56) para_type_list -> . val_para_list COLON simple_type_decl
    (57) var_para_list -> . VAR name_list
    (58) val_para_list -> . name_list
    (35) name_list -> . name_list COMMA NAME
    (36) name_list -> . NAME

    VAR             shift and go to state 225
    NAME            shift and go to state 94

    para_decl_list                 shift and go to state 221
    para_type_list                 shift and go to state 222
    var_para_list                  shift and go to state 223
    val_para_list                  shift and go to state 224
    name_list                      shift and go to state 226

state 190

    (52) parameters -> empty .

    COLON           reduce using rule 52 (parameters -> empty .)
    SEMI            reduce using rule 52 (parameters -> empty .)


state 191

    (50) procedure_head -> PROCEDURE NAME parameters .

    SEMI            reduce using rule 50 (procedure_head -> PROCEDURE NAME parameters .)


state 192

    (41) var_decl -> name_list COLON type_decl . SEMI

    SEMI            shift and go to state 227


state 193

    (35) name_list -> name_list COMMA NAME .

    COLON           reduce using rule 35 (name_list -> name_list COMMA NAME .)
    COMMA           reduce using rule 35 (name_list -> name_list COMMA NAME .)
    RP              reduce using rule 35 (name_list -> name_list COMMA NAME .)


state 194

    (22) type_definition -> NAME EQUAL type_decl SEMI .

    NAME            reduce using rule 22 (type_definition -> NAME EQUAL type_decl SEMI .)
    VAR             reduce using rule 22 (type_definition -> NAME EQUAL type_decl SEMI .)
    FUNCTION        reduce using rule 22 (type_definition -> NAME EQUAL type_decl SEMI .)
    PROCEDURE       reduce using rule 22 (type_definition -> NAME EQUAL type_decl SEMI .)
    BEGIN           reduce using rule 22 (type_definition -> NAME EQUAL type_decl SEMI .)


state 195

    (28) simple_type_decl -> LP name_list . RP
    (35) name_list -> name_list . COMMA NAME

    RP              shift and go to state 228
    COMMA           shift and go to state 140


state 196

    (29) simple_type_decl -> const_value DOTDOT . const_value
    (13) const_value -> . INTEGER
    (14) const_value -> . REAL
    (15) const_value -> . CHAR
    (16) const_value -> . STRING
    (17) const_value -> . SYS_CON

    INTEGER         shift and go to state 73
    REAL            shift and go to state 74
    CHAR            shift and go to state 75
    STRING          shift and go to state 76
    SYS_CON         shift and go to state 77

    const_value                    shift and go to state 229

state 197

    (30) array_type_decl -> ARRAY LB . simple_type_decl RB OF type_decl
    (26) simple_type_decl -> . SYS_TYPE
    (27) simple_type_decl -> . NAME
    (28) simple_type_decl -> . LP name_list RP
    (29) simple_type_decl -> . const_value DOTDOT const_value
    (13) const_value -> . INTEGER
    (14) const_value -> . REAL
    (15) const_value -> . CHAR
    (16) const_value -> . STRING
    (17) const_value -> . SYS_CON

    SYS_TYPE        shift and go to state 146
    NAME            shift and go to state 141
    LP              shift and go to state 147
    INTEGER         shift and go to state 73
    REAL            shift and go to state 74
    CHAR            shift and go to state 75
    STRING          shift and go to state 76
    SYS_CON         shift and go to state 77

    simple_type_decl               shift and go to state 230
    const_value                    shift and go to state 148

state 198

    (31) record_type_decl -> RECORD field_decl_list . END
    (32) field_decl_list -> field_decl_list . field_decl
    (34) field_decl -> . name_list COLON type_decl SEMI
    (35) name_list -> . name_list COMMA NAME
    (36) name_list -> . NAME

    END             shift and go to state 231
    NAME            shift and go to state 94

    field_decl                     shift and go to state 232
    name_list                      shift and go to state 200

state 199

    (33) field_decl_list -> field_decl .

    END             reduce using rule 33 (field_decl_list -> field_decl .)
    NAME            reduce using rule 33 (field_decl_list -> field_decl .)


state 200

    (34) field_decl -> name_list . COLON type_decl SEMI
    (35) name_list -> name_list . COMMA NAME

    COLON           shift and go to state 233
    COMMA           shift and go to state 140


state 201

    (75) assign_stmt -> NAME LB expression RB ASSIGN . expression
    (98) expression -> . expression GE expr
    (99) expression -> . expression GT expr
    (100) expression -> . expression LE expr
    (101) expression -> . expression LT expr
    (102) expression -> . expression EQUAL expr
    (103) expression -> . expression UNEQUAL expr
    (104) expression -> . expr
    (105) expr -> . expr PLUS term
    (106) expr -> . expr MINUS term
    (107) expr -> . expr OR term
    (108) expr -> . term
    (109) term -> . term MUL factor
    (110) term -> . term DIV factor
    (111) term -> . term MOD factor
    (112) term -> . term AND factor
    (113) term -> . factor
    (114) factor -> . SYS_FUNCT
    (115) factor -> . SYS_FUNCT LP args_list RP
    (116) factor -> . NAME LP args_list RP
    (117) factor -> . NAME LB expression RB
    (118) factor -> . NAME
    (119) factor -> . const_value
    (120) factor -> . NOT factor
    (121) factor -> . MINUS factor
    (122) factor -> . LP expression RP
    (123) factor -> . NAME DOT NAME
    (13) const_value -> . INTEGER
    (14) const_value -> . REAL
    (15) const_value -> . CHAR
    (16) const_value -> . STRING
    (17) const_value -> . SYS_CON

    SYS_FUNCT       shift and go to state 68
    NAME            shift and go to state 70
    NOT             shift and go to state 72
    MINUS           shift and go to state 66
    LP              shift and go to state 69
    INTEGER         shift and go to state 73
    REAL            shift and go to state 74
    CHAR            shift and go to state 75
    STRING          shift and go to state 76
    SYS_CON         shift and go to state 77

    expression                     shift and go to state 234
    expr                           shift and go to state 64
    term                           shift and go to state 65
    factor                         shift and go to state 67
    const_value                    shift and go to state 71

state 202

    (76) assign_stmt -> NAME DOT NAME ASSIGN expression .
    (98) expression -> expression . GE expr
    (99) expression -> expression . GT expr
    (100) expression -> expression . LE expr
    (101) expression -> expression . LT expr
    (102) expression -> expression . EQUAL expr
    (103) expression -> expression . UNEQUAL expr

    SEMI            reduce using rule 76 (assign_stmt -> NAME DOT NAME ASSIGN expression .)
    ELSE            reduce using rule 76 (assign_stmt -> NAME DOT NAME ASSIGN expression .)
    GE              shift and go to state 108
    GT              shift and go to state 109
    LE              shift and go to state 110
    LT              shift and go to state 111
    EQUAL           shift and go to state 112
    UNEQUAL         shift and go to state 113


state 203

    (124) args_list -> args_list COMMA expression .
    (98) expression -> expression . GE expr
    (99) expression -> expression . GT expr
    (100) expression -> expression . LE expr
    (101) expression -> expression . LT expr
    (102) expression -> expression . EQUAL expr
    (103) expression -> expression . UNEQUAL expr

    RP              reduce using rule 124 (args_list -> args_list COMMA expression .)
    COMMA           reduce using rule 124 (args_list -> args_list COMMA expression .)
    GE              shift and go to state 108
    GT              shift and go to state 109
    LE              shift and go to state 110
    LT              shift and go to state 111
    EQUAL           shift and go to state 112
    UNEQUAL         shift and go to state 113


state 204

    (96) expression_list -> expression_list COMMA expression .
    (98) expression -> expression . GE expr
    (99) expression -> expression . GT expr
    (100) expression -> expression . LE expr
    (101) expression -> expression . LT expr
    (102) expression -> expression . EQUAL expr
    (103) expression -> expression . UNEQUAL expr

    RP              reduce using rule 96 (expression_list -> expression_list COMMA expression .)
    COMMA           reduce using rule 96 (expression_list -> expression_list COMMA expression .)
    GE              shift and go to state 108
    GT              shift and go to state 109
    LE              shift and go to state 110
    LT              shift and go to state 111
    EQUAL           shift and go to state 112
    UNEQUAL         shift and go to state 113


state 205

    (82) if_stmt -> IF expression THEN stmt else_clause .

    SEMI            reduce using rule 82 (if_stmt -> IF expression THEN stmt else_clause .)
    ELSE            reduce using rule 82 (if_stmt -> IF expression THEN stmt else_clause .)


state 206

    (83) else_clause -> ELSE . stmt
    (63) stmt -> . INTEGER COLON non_label_stmt
    (64) stmt -> . non_label_stmt
    (65) non_label_stmt -> . assign_stmt
    (66) non_label_stmt -> . proc_stmt
    (67) non_label_stmt -> . compound_stmt
    (68) non_label_stmt -> . if_stmt
    (69) non_label_stmt -> . repeat_stmt
    (70) non_label_stmt -> . while_stmt
    (71) non_label_stmt -> . for_stmt
    (72) non_label_stmt -> . case_stmt
    (73) non_label_stmt -> . goto_stmt
    (74) assign_stmt -> . NAME ASSIGN expression
    (75) assign_stmt -> . NAME LB expression RB ASSIGN expression
    (76) assign_stmt -> . NAME DOT NAME ASSIGN expression
    (77) proc_stmt -> . NAME
    (78) proc_stmt -> . NAME LP args_list RP
    (79) proc_stmt -> . SYS_PROC
    (80) proc_stmt -> . SYS_PROC LP expression_list RP
    (81) proc_stmt -> . READ LP factor RP
    (60) compound_stmt -> . BEGIN stmt_list END
    (82) if_stmt -> . IF expression THEN stmt else_clause
    (85) repeat_stmt -> . REPEAT stmt_list UNTIL expression
    (86) while_stmt -> . WHILE expression DO stmt
    (87) for_stmt -> . FOR NAME ASSIGN expression direction expression DO stmt
    (90) case_stmt -> . CASE expression OF case_expr_list END
    (95) goto_stmt -> . GOTO INTEGER

    INTEGER         shift and go to state 27
    NAME            shift and go to state 38
    SYS_PROC        shift and go to state 39
    READ            shift and go to state 40
    BEGIN           shift and go to state 12
    IF              shift and go to state 41
    REPEAT          shift and go to state 42
    WHILE           shift and go to state 43
    FOR             shift and go to state 44
    CASE            shift and go to state 45
    GOTO            shift and go to state 46

    stmt                           shift and go to state 235
    non_label_stmt                 shift and go to state 28
    assign_stmt                    shift and go to state 29
    proc_stmt                      shift and go to state 30
    compound_stmt                  shift and go to state 31
    if_stmt                        shift and go to state 32
    repeat_stmt                    shift and go to state 33
    while_stmt                     shift and go to state 34
    for_stmt                       shift and go to state 35
    case_stmt                      shift and go to state 36
    goto_stmt                      shift and go to state 37

state 207

    (84) else_clause -> empty .

    SEMI            reduce using rule 84 (else_clause -> empty .)
    ELSE            reduce using rule 84 (else_clause -> empty .)


state 208

    (115) factor -> SYS_FUNCT LP args_list RP .

    MUL             reduce using rule 115 (factor -> SYS_FUNCT LP args_list RP .)
    DIV             reduce using rule 115 (factor -> SYS_FUNCT LP args_list RP .)
    MOD             reduce using rule 115 (factor -> SYS_FUNCT LP args_list RP .)
    AND             reduce using rule 115 (factor -> SYS_FUNCT LP args_list RP .)
    PLUS            reduce using rule 115 (factor -> SYS_FUNCT LP args_list RP .)
    MINUS           reduce using rule 115 (factor -> SYS_FUNCT LP args_list RP .)
    OR              reduce using rule 115 (factor -> SYS_FUNCT LP args_list RP .)
    THEN            reduce using rule 115 (factor -> SYS_FUNCT LP args_list RP .)
    GE              reduce using rule 115 (factor -> SYS_FUNCT LP args_list RP .)
    GT              reduce using rule 115 (factor -> SYS_FUNCT LP args_list RP .)
    LE              reduce using rule 115 (factor -> SYS_FUNCT LP args_list RP .)
    LT              reduce using rule 115 (factor -> SYS_FUNCT LP args_list RP .)
    EQUAL           reduce using rule 115 (factor -> SYS_FUNCT LP args_list RP .)
    UNEQUAL         reduce using rule 115 (factor -> SYS_FUNCT LP args_list RP .)
    DO              reduce using rule 115 (factor -> SYS_FUNCT LP args_list RP .)
    OF              reduce using rule 115 (factor -> SYS_FUNCT LP args_list RP .)
    SEMI            reduce using rule 115 (factor -> SYS_FUNCT LP args_list RP .)
    ELSE            reduce using rule 115 (factor -> SYS_FUNCT LP args_list RP .)
    RB              reduce using rule 115 (factor -> SYS_FUNCT LP args_list RP .)
    RP              reduce using rule 115 (factor -> SYS_FUNCT LP args_list RP .)
    COMMA           reduce using rule 115 (factor -> SYS_FUNCT LP args_list RP .)
    TO              reduce using rule 115 (factor -> SYS_FUNCT LP args_list RP .)
    DOWNTO          reduce using rule 115 (factor -> SYS_FUNCT LP args_list RP .)


state 209

    (116) factor -> NAME LP args_list RP .

    MUL             reduce using rule 116 (factor -> NAME LP args_list RP .)
    DIV             reduce using rule 116 (factor -> NAME LP args_list RP .)
    MOD             reduce using rule 116 (factor -> NAME LP args_list RP .)
    AND             reduce using rule 116 (factor -> NAME LP args_list RP .)
    PLUS            reduce using rule 116 (factor -> NAME LP args_list RP .)
    MINUS           reduce using rule 116 (factor -> NAME LP args_list RP .)
    OR              reduce using rule 116 (factor -> NAME LP args_list RP .)
    THEN            reduce using rule 116 (factor -> NAME LP args_list RP .)
    GE              reduce using rule 116 (factor -> NAME LP args_list RP .)
    GT              reduce using rule 116 (factor -> NAME LP args_list RP .)
    LE              reduce using rule 116 (factor -> NAME LP args_list RP .)
    LT              reduce using rule 116 (factor -> NAME LP args_list RP .)
    EQUAL           reduce using rule 116 (factor -> NAME LP args_list RP .)
    UNEQUAL         reduce using rule 116 (factor -> NAME LP args_list RP .)
    DO              reduce using rule 116 (factor -> NAME LP args_list RP .)
    OF              reduce using rule 116 (factor -> NAME LP args_list RP .)
    SEMI            reduce using rule 116 (factor -> NAME LP args_list RP .)
    ELSE            reduce using rule 116 (factor -> NAME LP args_list RP .)
    RB              reduce using rule 116 (factor -> NAME LP args_list RP .)
    RP              reduce using rule 116 (factor -> NAME LP args_list RP .)
    COMMA           reduce using rule 116 (factor -> NAME LP args_list RP .)
    TO              reduce using rule 116 (factor -> NAME LP args_list RP .)
    DOWNTO          reduce using rule 116 (factor -> NAME LP args_list RP .)


state 210

    (117) factor -> NAME LB expression RB .

    MUL             reduce using rule 117 (factor -> NAME LB expression RB .)
    DIV             reduce using rule 117 (factor -> NAME LB expression RB .)
    MOD             reduce using rule 117 (factor -> NAME LB expression RB .)
    AND             reduce using rule 117 (factor -> NAME LB expression RB .)
    PLUS            reduce using rule 117 (factor -> NAME LB expression RB .)
    MINUS           reduce using rule 117 (factor -> NAME LB expression RB .)
    OR              reduce using rule 117 (factor -> NAME LB expression RB .)
    THEN            reduce using rule 117 (factor -> NAME LB expression RB .)
    GE              reduce using rule 117 (factor -> NAME LB expression RB .)
    GT              reduce using rule 117 (factor -> NAME LB expression RB .)
    LE              reduce using rule 117 (factor -> NAME LB expression RB .)
    LT              reduce using rule 117 (factor -> NAME LB expression RB .)
    EQUAL           reduce using rule 117 (factor -> NAME LB expression RB .)
    UNEQUAL         reduce using rule 117 (factor -> NAME LB expression RB .)
    DO              reduce using rule 117 (factor -> NAME LB expression RB .)
    OF              reduce using rule 117 (factor -> NAME LB expression RB .)
    SEMI            reduce using rule 117 (factor -> NAME LB expression RB .)
    ELSE            reduce using rule 117 (factor -> NAME LB expression RB .)
    RB              reduce using rule 117 (factor -> NAME LB expression RB .)
    RP              reduce using rule 117 (factor -> NAME LB expression RB .)
    COMMA           reduce using rule 117 (factor -> NAME LB expression RB .)
    TO              reduce using rule 117 (factor -> NAME LB expression RB .)
    DOWNTO          reduce using rule 117 (factor -> NAME LB expression RB .)


state 211

    (87) for_stmt -> FOR NAME ASSIGN expression direction . expression DO stmt
    (98) expression -> . expression GE expr
    (99) expression -> . expression GT expr
    (100) expression -> . expression LE expr
    (101) expression -> . expression LT expr
    (102) expression -> . expression EQUAL expr
    (103) expression -> . expression UNEQUAL expr
    (104) expression -> . expr
    (105) expr -> . expr PLUS term
    (106) expr -> . expr MINUS term
    (107) expr -> . expr OR term
    (108) expr -> . term
    (109) term -> . term MUL factor
    (110) term -> . term DIV factor
    (111) term -> . term MOD factor
    (112) term -> . term AND factor
    (113) term -> . factor
    (114) factor -> . SYS_FUNCT
    (115) factor -> . SYS_FUNCT LP args_list RP
    (116) factor -> . NAME LP args_list RP
    (117) factor -> . NAME LB expression RB
    (118) factor -> . NAME
    (119) factor -> . const_value
    (120) factor -> . NOT factor
    (121) factor -> . MINUS factor
    (122) factor -> . LP expression RP
    (123) factor -> . NAME DOT NAME
    (13) const_value -> . INTEGER
    (14) const_value -> . REAL
    (15) const_value -> . CHAR
    (16) const_value -> . STRING
    (17) const_value -> . SYS_CON

    SYS_FUNCT       shift and go to state 68
    NAME            shift and go to state 70
    NOT             shift and go to state 72
    MINUS           shift and go to state 66
    LP              shift and go to state 69
    INTEGER         shift and go to state 73
    REAL            shift and go to state 74
    CHAR            shift and go to state 75
    STRING          shift and go to state 76
    SYS_CON         shift and go to state 77

    expression                     shift and go to state 236
    expr                           shift and go to state 64
    term                           shift and go to state 65
    factor                         shift and go to state 67
    const_value                    shift and go to state 71

state 212

    (88) direction -> TO .

    SYS_FUNCT       reduce using rule 88 (direction -> TO .)
    NAME            reduce using rule 88 (direction -> TO .)
    NOT             reduce using rule 88 (direction -> TO .)
    MINUS           reduce using rule 88 (direction -> TO .)
    LP              reduce using rule 88 (direction -> TO .)
    INTEGER         reduce using rule 88 (direction -> TO .)
    REAL            reduce using rule 88 (direction -> TO .)
    CHAR            reduce using rule 88 (direction -> TO .)
    STRING          reduce using rule 88 (direction -> TO .)
    SYS_CON         reduce using rule 88 (direction -> TO .)


state 213

    (89) direction -> DOWNTO .

    SYS_FUNCT       reduce using rule 89 (direction -> DOWNTO .)
    NAME            reduce using rule 89 (direction -> DOWNTO .)
    NOT             reduce using rule 89 (direction -> DOWNTO .)
    MINUS           reduce using rule 89 (direction -> DOWNTO .)
    LP              reduce using rule 89 (direction -> DOWNTO .)
    INTEGER         reduce using rule 89 (direction -> DOWNTO .)
    REAL            reduce using rule 89 (direction -> DOWNTO .)
    CHAR            reduce using rule 89 (direction -> DOWNTO .)
    STRING          reduce using rule 89 (direction -> DOWNTO .)
    SYS_CON         reduce using rule 89 (direction -> DOWNTO .)


state 214

    (90) case_stmt -> CASE expression OF case_expr_list END .

    SEMI            reduce using rule 90 (case_stmt -> CASE expression OF case_expr_list END .)
    ELSE            reduce using rule 90 (case_stmt -> CASE expression OF case_expr_list END .)


state 215

    (91) case_expr_list -> case_expr_list case_expr .

    END             reduce using rule 91 (case_expr_list -> case_expr_list case_expr .)
    NAME            reduce using rule 91 (case_expr_list -> case_expr_list case_expr .)
    INTEGER         reduce using rule 91 (case_expr_list -> case_expr_list case_expr .)
    REAL            reduce using rule 91 (case_expr_list -> case_expr_list case_expr .)
    CHAR            reduce using rule 91 (case_expr_list -> case_expr_list case_expr .)
    STRING          reduce using rule 91 (case_expr_list -> case_expr_list case_expr .)
    SYS_CON         reduce using rule 91 (case_expr_list -> case_expr_list case_expr .)


state 216

    (93) case_expr -> const_value COLON . stmt SEMI
    (63) stmt -> . INTEGER COLON non_label_stmt
    (64) stmt -> . non_label_stmt
    (65) non_label_stmt -> . assign_stmt
    (66) non_label_stmt -> . proc_stmt
    (67) non_label_stmt -> . compound_stmt
    (68) non_label_stmt -> . if_stmt
    (69) non_label_stmt -> . repeat_stmt
    (70) non_label_stmt -> . while_stmt
    (71) non_label_stmt -> . for_stmt
    (72) non_label_stmt -> . case_stmt
    (73) non_label_stmt -> . goto_stmt
    (74) assign_stmt -> . NAME ASSIGN expression
    (75) assign_stmt -> . NAME LB expression RB ASSIGN expression
    (76) assign_stmt -> . NAME DOT NAME ASSIGN expression
    (77) proc_stmt -> . NAME
    (78) proc_stmt -> . NAME LP args_list RP
    (79) proc_stmt -> . SYS_PROC
    (80) proc_stmt -> . SYS_PROC LP expression_list RP
    (81) proc_stmt -> . READ LP factor RP
    (60) compound_stmt -> . BEGIN stmt_list END
    (82) if_stmt -> . IF expression THEN stmt else_clause
    (85) repeat_stmt -> . REPEAT stmt_list UNTIL expression
    (86) while_stmt -> . WHILE expression DO stmt
    (87) for_stmt -> . FOR NAME ASSIGN expression direction expression DO stmt
    (90) case_stmt -> . CASE expression OF case_expr_list END
    (95) goto_stmt -> . GOTO INTEGER

    INTEGER         shift and go to state 27
    NAME            shift and go to state 38
    SYS_PROC        shift and go to state 39
    READ            shift and go to state 40
    BEGIN           shift and go to state 12
    IF              shift and go to state 41
    REPEAT          shift and go to state 42
    WHILE           shift and go to state 43
    FOR             shift and go to state 44
    CASE            shift and go to state 45
    GOTO            shift and go to state 46

    stmt                           shift and go to state 237
    non_label_stmt                 shift and go to state 28
    assign_stmt                    shift and go to state 29
    proc_stmt                      shift and go to state 30
    compound_stmt                  shift and go to state 31
    if_stmt                        shift and go to state 32
    repeat_stmt                    shift and go to state 33
    while_stmt                     shift and go to state 34
    for_stmt                       shift and go to state 35
    case_stmt                      shift and go to state 36
    goto_stmt                      shift and go to state 37

state 217

    (94) case_expr -> NAME COLON . stmt SEMI
    (63) stmt -> . INTEGER COLON non_label_stmt
    (64) stmt -> . non_label_stmt
    (65) non_label_stmt -> . assign_stmt
    (66) non_label_stmt -> . proc_stmt
    (67) non_label_stmt -> . compound_stmt
    (68) non_label_stmt -> . if_stmt
    (69) non_label_stmt -> . repeat_stmt
    (70) non_label_stmt -> . while_stmt
    (71) non_label_stmt -> . for_stmt
    (72) non_label_stmt -> . case_stmt
    (73) non_label_stmt -> . goto_stmt
    (74) assign_stmt -> . NAME ASSIGN expression
    (75) assign_stmt -> . NAME LB expression RB ASSIGN expression
    (76) assign_stmt -> . NAME DOT NAME ASSIGN expression
    (77) proc_stmt -> . NAME
    (78) proc_stmt -> . NAME LP args_list RP
    (79) proc_stmt -> . SYS_PROC
    (80) proc_stmt -> . SYS_PROC LP expression_list RP
    (81) proc_stmt -> . READ LP factor RP
    (60) compound_stmt -> . BEGIN stmt_list END
    (82) if_stmt -> . IF expression THEN stmt else_clause
    (85) repeat_stmt -> . REPEAT stmt_list UNTIL expression
    (86) while_stmt -> . WHILE expression DO stmt
    (87) for_stmt -> . FOR NAME ASSIGN expression direction expression DO stmt
    (90) case_stmt -> . CASE expression OF case_expr_list END
    (95) goto_stmt -> . GOTO INTEGER

    INTEGER         shift and go to state 27
    NAME            shift and go to state 38
    SYS_PROC        shift and go to state 39
    READ            shift and go to state 40
    BEGIN           shift and go to state 12
    IF              shift and go to state 41
    REPEAT          shift and go to state 42
    WHILE           shift and go to state 43
    FOR             shift and go to state 44
    CASE            shift and go to state 45
    GOTO            shift and go to state 46

    stmt                           shift and go to state 238
    non_label_stmt                 shift and go to state 28
    assign_stmt                    shift and go to state 29
    proc_stmt                      shift and go to state 30
    compound_stmt                  shift and go to state 31
    if_stmt                        shift and go to state 32
    repeat_stmt                    shift and go to state 33
    while_stmt                     shift and go to state 34
    for_stmt                       shift and go to state 35
    case_stmt                      shift and go to state 36
    goto_stmt                      shift and go to state 37

state 218

    (47) function_decl -> function_head SEMI sub_routine SEMI .

    FUNCTION        reduce using rule 47 (function_decl -> function_head SEMI sub_routine SEMI .)
    PROCEDURE       reduce using rule 47 (function_decl -> function_head SEMI sub_routine SEMI .)
    BEGIN           reduce using rule 47 (function_decl -> function_head SEMI sub_routine SEMI .)


state 219

    (49) procedure_decl -> procedure_head SEMI sub_routine SEMI .

    FUNCTION        reduce using rule 49 (procedure_decl -> procedure_head SEMI sub_routine SEMI .)
    PROCEDURE       reduce using rule 49 (procedure_decl -> procedure_head SEMI sub_routine SEMI .)
    BEGIN           reduce using rule 49 (procedure_decl -> procedure_head SEMI sub_routine SEMI .)


state 220

    (48) function_head -> FUNCTION NAME parameters COLON . simple_type_decl
    (26) simple_type_decl -> . SYS_TYPE
    (27) simple_type_decl -> . NAME
    (28) simple_type_decl -> . LP name_list RP
    (29) simple_type_decl -> . const_value DOTDOT const_value
    (13) const_value -> . INTEGER
    (14) const_value -> . REAL
    (15) const_value -> . CHAR
    (16) const_value -> . STRING
    (17) const_value -> . SYS_CON

    SYS_TYPE        shift and go to state 146
    NAME            shift and go to state 141
    LP              shift and go to state 147
    INTEGER         shift and go to state 73
    REAL            shift and go to state 74
    CHAR            shift and go to state 75
    STRING          shift and go to state 76
    SYS_CON         shift and go to state 77

    simple_type_decl               shift and go to state 239
    const_value                    shift and go to state 148

state 221

    (51) parameters -> LP para_decl_list . RP
    (53) para_decl_list -> para_decl_list . SEMI para_type_list

    RP              shift and go to state 240
    SEMI            shift and go to state 241


state 222

    (54) para_decl_list -> para_type_list .

    RP              reduce using rule 54 (para_decl_list -> para_type_list .)
    SEMI            reduce using rule 54 (para_decl_list -> para_type_list .)


state 223

    (55) para_type_list -> var_para_list . COLON simple_type_decl

    COLON           shift and go to state 242


state 224

    (56) para_type_list -> val_para_list . COLON simple_type_decl

    COLON           shift and go to state 243


state 225

    (57) var_para_list -> VAR . name_list
    (35) name_list -> . name_list COMMA NAME
    (36) name_list -> . NAME

    NAME            shift and go to state 94

    name_list                      shift and go to state 244

state 226

    (58) val_para_list -> name_list .
    (35) name_list -> name_list . COMMA NAME

    COLON           reduce using rule 58 (val_para_list -> name_list .)
    COMMA           shift and go to state 140


state 227

    (41) var_decl -> name_list COLON type_decl SEMI .

    NAME            reduce using rule 41 (var_decl -> name_list COLON type_decl SEMI .)
    FUNCTION        reduce using rule 41 (var_decl -> name_list COLON type_decl SEMI .)
    PROCEDURE       reduce using rule 41 (var_decl -> name_list COLON type_decl SEMI .)
    BEGIN           reduce using rule 41 (var_decl -> name_list COLON type_decl SEMI .)


state 228

    (28) simple_type_decl -> LP name_list RP .

    SEMI            reduce using rule 28 (simple_type_decl -> LP name_list RP .)
    RB              reduce using rule 28 (simple_type_decl -> LP name_list RP .)
    RP              reduce using rule 28 (simple_type_decl -> LP name_list RP .)


state 229

    (29) simple_type_decl -> const_value DOTDOT const_value .

    SEMI            reduce using rule 29 (simple_type_decl -> const_value DOTDOT const_value .)
    RB              reduce using rule 29 (simple_type_decl -> const_value DOTDOT const_value .)
    RP              reduce using rule 29 (simple_type_decl -> const_value DOTDOT const_value .)


state 230

    (30) array_type_decl -> ARRAY LB simple_type_decl . RB OF type_decl

    RB              shift and go to state 245


state 231

    (31) record_type_decl -> RECORD field_decl_list END .

    SEMI            reduce using rule 31 (record_type_decl -> RECORD field_decl_list END .)


state 232

    (32) field_decl_list -> field_decl_list field_decl .

    END             reduce using rule 32 (field_decl_list -> field_decl_list field_decl .)
    NAME            reduce using rule 32 (field_decl_list -> field_decl_list field_decl .)


state 233

    (34) field_decl -> name_list COLON . type_decl SEMI
    (23) type_decl -> . simple_type_decl
    (24) type_decl -> . array_type_decl
    (25) type_decl -> . record_type_decl
    (26) simple_type_decl -> . SYS_TYPE
    (27) simple_type_decl -> . NAME
    (28) simple_type_decl -> . LP name_list RP
    (29) simple_type_decl -> . const_value DOTDOT const_value
    (30) array_type_decl -> . ARRAY LB simple_type_decl RB OF type_decl
    (31) record_type_decl -> . RECORD field_decl_list END
    (13) const_value -> . INTEGER
    (14) const_value -> . REAL
    (15) const_value -> . CHAR
    (16) const_value -> . STRING
    (17) const_value -> . SYS_CON

    SYS_TYPE        shift and go to state 146
    NAME            shift and go to state 141
    LP              shift and go to state 147
    ARRAY           shift and go to state 149
    RECORD          shift and go to state 150
    INTEGER         shift and go to state 73
    REAL            shift and go to state 74
    CHAR            shift and go to state 75
    STRING          shift and go to state 76
    SYS_CON         shift and go to state 77

    type_decl                      shift and go to state 246
    simple_type_decl               shift and go to state 143
    array_type_decl                shift and go to state 144
    record_type_decl               shift and go to state 145
    const_value                    shift and go to state 148

state 234

    (75) assign_stmt -> NAME LB expression RB ASSIGN expression .
    (98) expression -> expression . GE expr
    (99) expression -> expression . GT expr
    (100) expression -> expression . LE expr
    (101) expression -> expression . LT expr
    (102) expression -> expression . EQUAL expr
    (103) expression -> expression . UNEQUAL expr

    SEMI            reduce using rule 75 (assign_stmt -> NAME LB expression RB ASSIGN expression .)
    ELSE            reduce using rule 75 (assign_stmt -> NAME LB expression RB ASSIGN expression .)
    GE              shift and go to state 108
    GT              shift and go to state 109
    LE              shift and go to state 110
    LT              shift and go to state 111
    EQUAL           shift and go to state 112
    UNEQUAL         shift and go to state 113


state 235

    (83) else_clause -> ELSE stmt .

    SEMI            reduce using rule 83 (else_clause -> ELSE stmt .)
    ELSE            reduce using rule 83 (else_clause -> ELSE stmt .)


state 236

    (87) for_stmt -> FOR NAME ASSIGN expression direction expression . DO stmt
    (98) expression -> expression . GE expr
    (99) expression -> expression . GT expr
    (100) expression -> expression . LE expr
    (101) expression -> expression . LT expr
    (102) expression -> expression . EQUAL expr
    (103) expression -> expression . UNEQUAL expr

    DO              shift and go to state 247
    GE              shift and go to state 108
    GT              shift and go to state 109
    LE              shift and go to state 110
    LT              shift and go to state 111
    EQUAL           shift and go to state 112
    UNEQUAL         shift and go to state 113


state 237

    (93) case_expr -> const_value COLON stmt . SEMI

    SEMI            shift and go to state 248


state 238

    (94) case_expr -> NAME COLON stmt . SEMI

    SEMI            shift and go to state 249


state 239

    (48) function_head -> FUNCTION NAME parameters COLON simple_type_decl .

    SEMI            reduce using rule 48 (function_head -> FUNCTION NAME parameters COLON simple_type_decl .)


state 240

    (51) parameters -> LP para_decl_list RP .

    COLON           reduce using rule 51 (parameters -> LP para_decl_list RP .)
    SEMI            reduce using rule 51 (parameters -> LP para_decl_list RP .)


state 241

    (53) para_decl_list -> para_decl_list SEMI . para_type_list
    (55) para_type_list -> . var_para_list COLON simple_type_decl
    (56) para_type_list -> . val_para_list COLON simple_type_decl
    (57) var_para_list -> . VAR name_list
    (58) val_para_list -> . name_list
    (35) name_list -> . name_list COMMA NAME
    (36) name_list -> . NAME

    VAR             shift and go to state 225
    NAME            shift and go to state 94

    para_type_list                 shift and go to state 250
    var_para_list                  shift and go to state 223
    val_para_list                  shift and go to state 224
    name_list                      shift and go to state 226

state 242

    (55) para_type_list -> var_para_list COLON . simple_type_decl
    (26) simple_type_decl -> . SYS_TYPE
    (27) simple_type_decl -> . NAME
    (28) simple_type_decl -> . LP name_list RP
    (29) simple_type_decl -> . const_value DOTDOT const_value
    (13) const_value -> . INTEGER
    (14) const_value -> . REAL
    (15) const_value -> . CHAR
    (16) const_value -> . STRING
    (17) const_value -> . SYS_CON

    SYS_TYPE        shift and go to state 146
    NAME            shift and go to state 141
    LP              shift and go to state 147
    INTEGER         shift and go to state 73
    REAL            shift and go to state 74
    CHAR            shift and go to state 75
    STRING          shift and go to state 76
    SYS_CON         shift and go to state 77

    simple_type_decl               shift and go to state 251
    const_value                    shift and go to state 148

state 243

    (56) para_type_list -> val_para_list COLON . simple_type_decl
    (26) simple_type_decl -> . SYS_TYPE
    (27) simple_type_decl -> . NAME
    (28) simple_type_decl -> . LP name_list RP
    (29) simple_type_decl -> . const_value DOTDOT const_value
    (13) const_value -> . INTEGER
    (14) const_value -> . REAL
    (15) const_value -> . CHAR
    (16) const_value -> . STRING
    (17) const_value -> . SYS_CON

    SYS_TYPE        shift and go to state 146
    NAME            shift and go to state 141
    LP              shift and go to state 147
    INTEGER         shift and go to state 73
    REAL            shift and go to state 74
    CHAR            shift and go to state 75
    STRING          shift and go to state 76
    SYS_CON         shift and go to state 77

    simple_type_decl               shift and go to state 252
    const_value                    shift and go to state 148

state 244

    (57) var_para_list -> VAR name_list .
    (35) name_list -> name_list . COMMA NAME

    COLON           reduce using rule 57 (var_para_list -> VAR name_list .)
    COMMA           shift and go to state 140


state 245

    (30) array_type_decl -> ARRAY LB simple_type_decl RB . OF type_decl

    OF              shift and go to state 253


state 246

    (34) field_decl -> name_list COLON type_decl . SEMI

    SEMI            shift and go to state 254


state 247

    (87) for_stmt -> FOR NAME ASSIGN expression direction expression DO . stmt
    (63) stmt -> . INTEGER COLON non_label_stmt
    (64) stmt -> . non_label_stmt
    (65) non_label_stmt -> . assign_stmt
    (66) non_label_stmt -> . proc_stmt
    (67) non_label_stmt -> . compound_stmt
    (68) non_label_stmt -> . if_stmt
    (69) non_label_stmt -> . repeat_stmt
    (70) non_label_stmt -> . while_stmt
    (71) non_label_stmt -> . for_stmt
    (72) non_label_stmt -> . case_stmt
    (73) non_label_stmt -> . goto_stmt
    (74) assign_stmt -> . NAME ASSIGN expression
    (75) assign_stmt -> . NAME LB expression RB ASSIGN expression
    (76) assign_stmt -> . NAME DOT NAME ASSIGN expression
    (77) proc_stmt -> . NAME
    (78) proc_stmt -> . NAME LP args_list RP
    (79) proc_stmt -> . SYS_PROC
    (80) proc_stmt -> . SYS_PROC LP expression_list RP
    (81) proc_stmt -> . READ LP factor RP
    (60) compound_stmt -> . BEGIN stmt_list END
    (82) if_stmt -> . IF expression THEN stmt else_clause
    (85) repeat_stmt -> . REPEAT stmt_list UNTIL expression
    (86) while_stmt -> . WHILE expression DO stmt
    (87) for_stmt -> . FOR NAME ASSIGN expression direction expression DO stmt
    (90) case_stmt -> . CASE expression OF case_expr_list END
    (95) goto_stmt -> . GOTO INTEGER

    INTEGER         shift and go to state 27
    NAME            shift and go to state 38
    SYS_PROC        shift and go to state 39
    READ            shift and go to state 40
    BEGIN           shift and go to state 12
    IF              shift and go to state 41
    REPEAT          shift and go to state 42
    WHILE           shift and go to state 43
    FOR             shift and go to state 44
    CASE            shift and go to state 45
    GOTO            shift and go to state 46

    stmt                           shift and go to state 255
    non_label_stmt                 shift and go to state 28
    assign_stmt                    shift and go to state 29
    proc_stmt                      shift and go to state 30
    compound_stmt                  shift and go to state 31
    if_stmt                        shift and go to state 32
    repeat_stmt                    shift and go to state 33
    while_stmt                     shift and go to state 34
    for_stmt                       shift and go to state 35
    case_stmt                      shift and go to state 36
    goto_stmt                      shift and go to state 37

state 248

    (93) case_expr -> const_value COLON stmt SEMI .

    END             reduce using rule 93 (case_expr -> const_value COLON stmt SEMI .)
    NAME            reduce using rule 93 (case_expr -> const_value COLON stmt SEMI .)
    INTEGER         reduce using rule 93 (case_expr -> const_value COLON stmt SEMI .)
    REAL            reduce using rule 93 (case_expr -> const_value COLON stmt SEMI .)
    CHAR            reduce using rule 93 (case_expr -> const_value COLON stmt SEMI .)
    STRING          reduce using rule 93 (case_expr -> const_value COLON stmt SEMI .)
    SYS_CON         reduce using rule 93 (case_expr -> const_value COLON stmt SEMI .)


state 249

    (94) case_expr -> NAME COLON stmt SEMI .

    END             reduce using rule 94 (case_expr -> NAME COLON stmt SEMI .)
    NAME            reduce using rule 94 (case_expr -> NAME COLON stmt SEMI .)
    INTEGER         reduce using rule 94 (case_expr -> NAME COLON stmt SEMI .)
    REAL            reduce using rule 94 (case_expr -> NAME COLON stmt SEMI .)
    CHAR            reduce using rule 94 (case_expr -> NAME COLON stmt SEMI .)
    STRING          reduce using rule 94 (case_expr -> NAME COLON stmt SEMI .)
    SYS_CON         reduce using rule 94 (case_expr -> NAME COLON stmt SEMI .)


state 250

    (53) para_decl_list -> para_decl_list SEMI para_type_list .

    RP              reduce using rule 53 (para_decl_list -> para_decl_list SEMI para_type_list .)
    SEMI            reduce using rule 53 (para_decl_list -> para_decl_list SEMI para_type_list .)


state 251

    (55) para_type_list -> var_para_list COLON simple_type_decl .

    RP              reduce using rule 55 (para_type_list -> var_para_list COLON simple_type_decl .)
    SEMI            reduce using rule 55 (para_type_list -> var_para_list COLON simple_type_decl .)


state 252

    (56) para_type_list -> val_para_list COLON simple_type_decl .

    RP              reduce using rule 56 (para_type_list -> val_para_list COLON simple_type_decl .)
    SEMI            reduce using rule 56 (para_type_list -> val_para_list COLON simple_type_decl .)


state 253

    (30) array_type_decl -> ARRAY LB simple_type_decl RB OF . type_decl
    (23) type_decl -> . simple_type_decl
    (24) type_decl -> . array_type_decl
    (25) type_decl -> . record_type_decl
    (26) simple_type_decl -> . SYS_TYPE
    (27) simple_type_decl -> . NAME
    (28) simple_type_decl -> . LP name_list RP
    (29) simple_type_decl -> . const_value DOTDOT const_value
    (30) array_type_decl -> . ARRAY LB simple_type_decl RB OF type_decl
    (31) record_type_decl -> . RECORD field_decl_list END
    (13) const_value -> . INTEGER
    (14) const_value -> . REAL
    (15) const_value -> . CHAR
    (16) const_value -> . STRING
    (17) const_value -> . SYS_CON

    SYS_TYPE        shift and go to state 146
    NAME            shift and go to state 141
    LP              shift and go to state 147
    ARRAY           shift and go to state 149
    RECORD          shift and go to state 150
    INTEGER         shift and go to state 73
    REAL            shift and go to state 74
    CHAR            shift and go to state 75
    STRING          shift and go to state 76
    SYS_CON         shift and go to state 77

    simple_type_decl               shift and go to state 143
    type_decl                      shift and go to state 256
    array_type_decl                shift and go to state 144
    record_type_decl               shift and go to state 145
    const_value                    shift and go to state 148

state 254

    (34) field_decl -> name_list COLON type_decl SEMI .

    END             reduce using rule 34 (field_decl -> name_list COLON type_decl SEMI .)
    NAME            reduce using rule 34 (field_decl -> name_list COLON type_decl SEMI .)


state 255

    (87) for_stmt -> FOR NAME ASSIGN expression direction expression DO stmt .

    SEMI            reduce using rule 87 (for_stmt -> FOR NAME ASSIGN expression direction expression DO stmt .)
    ELSE            reduce using rule 87 (for_stmt -> FOR NAME ASSIGN expression direction expression DO stmt .)


state 256

    (30) array_type_decl -> ARRAY LB simple_type_decl RB OF type_decl .

    SEMI            reduce using rule 30 (array_type_decl -> ARRAY LB simple_type_decl RB OF type_decl .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for FUNCTION in state 47 resolved as shift
WARNING: shift/reduce conflict for PROCEDURE in state 47 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 159 resolved as shift
